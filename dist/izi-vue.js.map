{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///izi-vue.js","webpack:///webpack/bootstrap f561fc7484a6747914e5","webpack:///./src/main/index.js","webpack:///./src/main/izi-vue/index.js","webpack:///./~/izi-js/dist/izi-js-debug.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./src/main/izi-vue/mainViewFactory.js","webpack:///./~/babel-runtime/core-js/object/assign.js","webpack:///./~/core-js/library/fn/object/assign.js","webpack:///./~/core-js/library/modules/es6.object.assign.js","webpack:///./~/core-js/library/modules/_export.js","webpack:///./~/core-js/library/modules/_global.js","webpack:///./~/core-js/library/modules/_core.js","webpack:///./~/core-js/library/modules/_ctx.js","webpack:///./~/core-js/library/modules/_a-function.js","webpack:///./~/core-js/library/modules/_hide.js","webpack:///./~/core-js/library/modules/_object-dp.js","webpack:///./~/core-js/library/modules/_an-object.js","webpack:///./~/core-js/library/modules/_is-object.js","webpack:///./~/core-js/library/modules/_ie8-dom-define.js","webpack:///./~/core-js/library/modules/_descriptors.js","webpack:///./~/core-js/library/modules/_fails.js","webpack:///./~/core-js/library/modules/_dom-create.js","webpack:///./~/core-js/library/modules/_to-primitive.js","webpack:///./~/core-js/library/modules/_property-desc.js","webpack:///./~/core-js/library/modules/_object-assign.js","webpack:///./~/core-js/library/modules/_object-keys.js","webpack:///./~/core-js/library/modules/_object-keys-internal.js","webpack:///./~/core-js/library/modules/_has.js","webpack:///./~/core-js/library/modules/_to-iobject.js","webpack:///./~/core-js/library/modules/_iobject.js","webpack:///./~/core-js/library/modules/_cof.js","webpack:///./~/core-js/library/modules/_defined.js","webpack:///./~/core-js/library/modules/_array-includes.js","webpack:///./~/core-js/library/modules/_to-length.js","webpack:///./~/core-js/library/modules/_to-integer.js","webpack:///./~/core-js/library/modules/_to-absolute-index.js","webpack:///./~/core-js/library/modules/_shared-key.js","webpack:///./~/core-js/library/modules/_shared.js","webpack:///./~/core-js/library/modules/_uid.js","webpack:///./~/core-js/library/modules/_enum-bug-keys.js","webpack:///./~/core-js/library/modules/_object-gops.js","webpack:///./~/core-js/library/modules/_object-pie.js","webpack:///./~/core-js/library/modules/_to-object.js","webpack:///./~/babel-runtime/helpers/classCallCheck.js","webpack:///./~/babel-runtime/helpers/createClass.js","webpack:///./~/babel-runtime/core-js/object/define-property.js","webpack:///./~/core-js/library/fn/object/define-property.js","webpack:///./~/core-js/library/modules/es6.object.define-property.js","webpack:///./src/main/izi-vue/vueDataInjectorFactory.js","webpack:///./src/main/izi-vue/iziInjectMixinFactory.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_iziVue","_iziVue2","Object","defineProperty","value","_iziJsDebug","_iziJsDebug2","_mainViewFactory","_mainViewFactory2","_vueDataInjectorFactory","_vueDataInjectorFactory2","_iziInjectMixinFactory","_iziInjectMixinFactory2","iziInjectMixinFactory","createVueHelpers","Vue","vueDataInjector","arguments","length","undefined","MainView","iziInjectMixin","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","global","amdFactory","izi","Izi","ioc","bean","utils","model","behavior","impl","binding","nested","events","queue","isDebug","forEach","byForEach","array","fn","scope","Array","prototype","byLoop","i","ln","hasForEach","typeOf","toString","Error","OnWidget","config","startObserving","me","observers","eventConfig","isKeyboardEventConfig","widget","iziObserveKeyStroke","push","action","eventOptions","observeKeyStroke","isEventConfig","iziObserveWidget","observeWidget","getAction","getScope","getEvents","getEventOptions","getDispatcher","getImpl","stopObserving","observer","WhenWidget","on","withDispatcher","OnModel","triggerAction","apply","modelProperties","getModelProperties","bindings","property","iziApi","bind","executeAtStartup","valueOf","to","unbind","WhenModel","PREVENT_DEFAULT","STOP_PROPAGATION","BOTH","EventConfig","eventType","modifiers","shift","ctrl","alt","stopEventType","stopEvent","stopPropagation","preventDefault","isExpectedShiftKey","isExpectedCtrlKey","isExpectedAltKey","getEventType","shouldStopPropagation","shouldPreventDefault","matchesModifiers","shiftKey","ctrlKey","altKey","Perform","when","arg","argType","withEvents","withEventOptions","whenChangeOf","properties","withModelProperties","slice","target","registrar","register","unregister","Config","dispatcher","withAction","withScope","defaultPerformFunction","delegatedIn","configs","registerBehaviors","hasOwnProperty","object","mergeObjects","copyProperties","source","key","result","indexOf","byIndexOf","item","hasIndexOf","removeItem","start","splice","options","auto","debug","triggerProperties","withOptions","withBindings","withCallerLineProvider","callerLineProvider","withSource","withSourceProperties","sourceProperties","constructor","withTarget","withTargetProperty","targetProperty","withFormatter","formatter","addTriggerProperty","addBinding","removeBinding","curry","findClosure","factories","args","closure","trim","text","replace","logImpl","console","log","onlyOnceError","INVALID_VALUE","Binding","sourceReaders","targetReader","targetWriter","getCallerLine","registerReadersAndWriters","transferValue","getFormattedValues","sourceReader","values","debugBinding","sourceValue","callerLine","targetValue","error","getChangeObserver","sourceProperty","transferValueFn","changeObservers","allowNotWatchable","valueReaders","valueWriters","e","allTriggerProperties","concat","changeObserver","reverseBinding","twoWay","reverseConfig","execute","ValueOf","textOf","selectedItemsOf","through","onChangeOf","getCallerLineProvider","stackOffset","stack","callStack","split","index","navigator","userAgent","Bind","_valueOf","cloneConfig","unbindAll","executeAll","createObserver","matcher","iziObserveProperty","customPropertyObserver","createReader","reader","capitalize","charAt","toUpperCase","substr","getterOf","name","readByGet","get","readByCapitalizedGetter","readByFunction","readFromProperty","readFromOwnedProperty","createWriter","writer","writeBySet","set","writeByCapitalizedSetter","writeToProperty","writeToOwnedProperty","writeByFunction","writeToFunction","isNestedProperty","nestedWatcher","iziNestedWatchers","onValueChanged","nestedObserver","TargetFinder","path","readers","pop","findFor","currentObject","TargetWriter","writers","writeValue","nestedWriter","targetFinder","inherit","Child","Parent","Proxy","upper","every","byEvery","len","hasEvery","Observable","listeners","findListeners","type","dispatchEvent","listener","addListener","removeListener","listenerToRemove","extractFirstField","field","extractNextFields","NestedWatcher","bindingImpl","nextFields","child","fireChange","setSource","callback","handler","valueChanged","watchForCurrentValue","currentValue","isWatchableNestedProperty","nestedReader","nestedImpl","TimeoutGuard","onTaskStarted","startCountDown","onTaskFinished","stopCountDown","event","timeout","timeoutForTask","task","timeoutId","setTimeout","timeoutTask","currentTaskTimeouted","clearTimeout","some","bySome","TypeError","hasSome","Map","items","getItemOrCreate","getItem","remove","getKeys","keys","getKeysOf","getValues","count","countValues","createItem","foundItem","SynchronizedFunction","originalFunction","logLabel","synchronizedFunction","SynchronizedOnEvent","perform","doSynchronized","SynchronizedResponder","responder","resultFunctionName","errorFunctionName","synchronizedResponder","Synchronizer","synchronizations","awaitedTasks","cancelQueue","cancel","onCallback","nonSynchronized","obtainTask","synchronization","recordSynchronization","onEvent","getCurrentTaskIndex","countTasks","removeSynchronization","pendingSynchronizationsOnTask","countSynchronizations","taskSynchronized","proceedClosure","currentTask","hasPendingSynchronizations","afterSynchronizingTaskCall","taskTimeout","synchronizationsToRemove","GenericTask","functionToExecute","formatTimeStamp","now","Date","padding","getHours","getMinutes","getSeconds","getMilliseconds","number","join","queueUniqueId","Queue","defaultConfig","defaultTimeout","originalQueue","createEventDispatcher","synchronizer","pushAll","isExecutedTask","proceed","dispatchTaskEvent","clearAndProceed","onTaskTimeouted","onQueueFinished","onQueueCanceled","tasksOrFunctions","taskOrFunction","pushFunction","pushTask","isEmptyQueue","executeSynchronously","awaitSynchronizerOrProceed","addStatistics","totalTasks","message","arrayContains","ClassNotFound","classString","getClassByName","globals","currentPart","parts","part","nextPart","Class","Strategy","Clazz","_resolveClass","createStrategy","getArguments","getProperties","props","getClazz","withArgs","withProps","matchesById","selfId","otherId","matchesByType","injectDependenciesOnProperties","context","prop","iziInjectingInProgress","injection","isIziInjection","injector","resolveBean","BeanBuilder","strategy","createdBeans","init","beansContext","create","iziContext","iziContextCalled","iziInit","iziInitCalled","destroyCreatedBeans","createdBean","iziDestroy","preDestroyCreatedBeans","iziPreDestroy","matches","idOrType","matchesBeanInstance","getArgumentsDependencies","findArgumentsDependencies","results","findBeanBuilder","InstanceStrategy","instance","NoBeanMatched","beanIdOrType","normalizeBeans","beans","mergeBeans","beansCollection","iterateOwnProperties","createBeansBuilders","beansBuilders","beanId","beanConfig","beanBuilder","SingletonStrategy","findCircularDependencies","visitDependencies","visitedBuilder","dependencies","dependency","initBean","initAllBeans","beansToCreate","beanToCreate","createPreDestroyEvent","isPrevented","isDestroyPrevented","preventDestroy","handleDestroyFromParentContext","handlePreDestroy","childrenDispatcher","shouldDestroy","doPreDestroy","handleDestroy","parentDispatcher","doDestroy","parentContext","destroyDispatcher","BeansContext","initContext","getBean","wire","objectContainingIziInjects","detachBean","beanBuilderToDestroy","destroy","preDestroyEvent","foundBuilder","defaultInjector","defaultDependencyConverter","Injection","dependencyConverter","getBeanNotFoundMessage","beanName","by","createInstance","resolveArguments","applyProps","a","argsCount","LazySingletonStrategy","PrototypeStrategy","setterOf","normalizeFields","fields","getter","setter","hasToPlainObjectMethod","toPlainObject","implementGetterAndSetter","createInitialData","data","defaultValue","initialValue","Model","isIziModel","propertyName","equals","dispatchChange","newValue","oldValue","val1","val2","equalsArray","arr1","arr2","propertyChangeCallback","propertyChangeEvent","arrayResult","circularCopyProp","wasVisited","cache","KeyboardConfig","expectedKeyCode","keyCode","getExpectedKeyCode","BACKSPACE","TAB","NUM_CENTER","ENTER","RETURN","SHIFT","CTRL","ALT","PAUSE","CAPS_LOCK","ESC","SPACE","PAGE_UP","PAGE_DOWN","END","HOME","LEFT","UP","RIGHT","DOWN","PRINT_SCREEN","INSERT","DELETE","ZERO","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","NUM_ZERO","NUM_ONE","NUM_TWO","NUM_THREE","NUM_FOUR","NUM_FIVE","NUM_SIX","NUM_SEVEN","NUM_EIGHT","NUM_NINE","NUM_MULTIPLY","NUM_PLUS","NUM_MINUS","NUM_PERIOD","NUM_DIVISION","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","Events","keyboardEvent","keyDown","keyUp","afterPrint","beforePrint","beforeOnLoad","hasChange","load","offline","line","pageHide","pageShow","popState","redo","resize","storage","undo","unload","blur","change","contextMenu","focus","formChange","formInput","input","invalid","reset","select","submit","click","dblClick","drag","dragEnd","dragEnter","dragLeave","dragOver","dragStart","drop","mouseDown","mouseMove","mouseOut","mouseOver","mouseUp","mouseWheel","scroll","abort","canPlay","canPlayThrough","durationChange","emptied","ended","loadedData","loadedMetaData","loadStart","pause","play","playing","progress","rateChange","readyStateChange","seeked","seeking","stalled","suspend","timeUpdate","volumeChange","waiting","touchStart","touchMove","touchEnd","touchCancel","touchEnter","touchLave","gestureStart","gestureChange","gestureEnd","orientationChange","initFramework","framework","registerBehaviorImpl","registerBindingImpl","registerQueueImpl","enableCompatibility","sanityCheckMethods","method","frameworks","Api","_framework","bakeBeans","instantiate","clazz","lazy","protoOf","inject","functionOrBehaviorOrRegistrar","modelOf","newInstance","sandboxed","registerFramework","vendor","__webpack_amd_options__","mainViewFactory","_ref","el","component","_ref$proxyMethods","proxyMethods","_classCallCheck3","_createClass3","requireOption","vueInstance","_createVueInstance","_createProxyMethods","$destroy","VueComponent","extend","methods","__iziWire","__iziDetach","componentConfig","_assign2","getVueInstance","getMethodNames","methodName","test","_assign","_classCallCheck2","_createClass2","assign","$export","core","ctx","hide","PROTOTYPE","own","out","IS_FORCED","IS_GLOBAL","IS_STATIC","IS_PROTO","IS_BIND","IS_WRAP","expProto","b","Function","virtual","window","Math","self","__g","version","__e","aFunction","that","it","dP","createDesc","f","anObject","IE8_DOM_DEFINE","toPrimitive","Attributes","isObject","exec","document","is","createElement","val","bitmap","enumerable","configurable","writable","gOPS","pIE","toObject","IObject","$assign","Symbol","k","aLen","getSymbols","isEnum","j","$keys","enumBugKeys","has","toIObject","arrayIndexOf","IE_PROTO","names","defined","cof","propertyIsEnumerable","toLength","toAbsoluteIndex","IS_INCLUDES","$this","fromIndex","toInteger","min","ceil","floor","isNaN","max","shared","uid","SHARED","store","px","random","getOwnPropertySymbols","Constructor","_defineProperty","_defineProperty2","defineProperties","descriptor","protoProps","staticProps","$Object","desc","vueDataInjectorFactory","__ob__","unwrap$optionsIziInject","$options","iziInject","unwrapDataInjection","moveInjectionsToVueInstance","created","parent","__iziFindParent","$parent","found","beforeDestroy"],"mappings":"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","file":"izi-vue.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"izi\"] = factory();\n\telse\n\t\troot[\"izi\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"izi\"] = factory();\n\telse\n\t\troot[\"izi\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _iziVue = __webpack_require__(1);\n\t\n\tvar _iziVue2 = _interopRequireDefault(_iziVue);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tmodule.exports = _iziVue2.default;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _iziJsDebug = __webpack_require__(2);\n\t\n\tvar _iziJsDebug2 = _interopRequireDefault(_iziJsDebug);\n\t\n\tvar _mainViewFactory = __webpack_require__(4);\n\t\n\tvar _mainViewFactory2 = _interopRequireDefault(_mainViewFactory);\n\t\n\tvar _vueDataInjectorFactory = __webpack_require__(47);\n\t\n\tvar _vueDataInjectorFactory2 = _interopRequireDefault(_vueDataInjectorFactory);\n\t\n\tvar _iziInjectMixinFactory = __webpack_require__(48);\n\t\n\tvar _iziInjectMixinFactory2 = _interopRequireDefault(_iziInjectMixinFactory);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_iziJsDebug2.default.iziInjectMixinFactory = _iziInjectMixinFactory2.default;\n\t\n\t_iziJsDebug2.default.createVueHelpers = function (Vue) {\n\t    var vueDataInjector = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0, _vueDataInjectorFactory2.default)(Vue);\n\t\n\t    return {\n\t        MainView: (0, _mainViewFactory2.default)(Vue),\n\t        iziInjectMixin: (0, _iziInjectMixinFactory2.default)(vueDataInjector)\n\t    };\n\t};\n\t\n\texports.default = _iziJsDebug2.default;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n\t * The MIT License (MIT)\r\n\t *\r\n\t * Copyright (c) 2014 izi-js contributors\r\n\t *\r\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n\t * of this software and associated documentation files (the \"Software\"), to deal\r\n\t * in the Software without restriction, including without limitation the rights\r\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n\t * copies of the Software, and to permit persons to whom the Software is\r\n\t * furnished to do so, subject to the following conditions:\r\n\t *\r\n\t * The above copyright notice and this permission notice shall be included in all\r\n\t * copies or substantial portions of the Software.\r\n\t *\r\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n\t * SOFTWARE.\r\n\t */\r\n\t(function (global) {\r\n\t    function amdFactory() {\r\n\t\r\n\tvar izi,\r\n\t    Izi = {\r\n\t        ioc: {\r\n\t            bean: {}\r\n\t        },\r\n\t        utils: {},\r\n\t        model: {},\r\n\t        behavior: {\r\n\t            impl: {}\r\n\t        },\r\n\t        binding: {\r\n\t            impl: {\r\n\t                nested: {}\r\n\t            }\r\n\t        },\r\n\t        events: {\r\n\t        },\r\n\t        queue: {\r\n\t            impl: {}\r\n\t        }\r\n\t    };\r\n\t// #ifdef DEBUG\r\n\tIzi.isDebug = true;\r\n\t// #endif\r\n\t!function (module) {\r\n\t    /**\r\n\t     * @member Izi.utils\r\n\t     * @method\r\n\t     * @private\r\n\t     * @param {Array} array\r\n\t     * @param {Function} item\r\n\t     * @param {Object} scope\r\n\t     */\r\n\t    module.utils.forEach = (function () {\r\n\t\r\n\t        function byForEach(array, fn, scope) {\r\n\t            Array.prototype.forEach.call(array, fn, scope);\r\n\t        }\r\n\t\r\n\t        function byLoop(array, fn, scope) {\r\n\t            var i,\r\n\t                ln = array.length;\r\n\t\r\n\t            for (i = 0; i < ln; i = i + 1) {\r\n\t                fn.call(scope, array[i], i, array);\r\n\t            }\r\n\t        }\r\n\t\r\n\t        function hasForEach() {\r\n\t            return (typeof Array.prototype.forEach) === 'function';\r\n\t        }\r\n\t\r\n\t        return hasForEach() ? byForEach : byLoop;\r\n\t    }());\r\n\t}(Izi);\r\n\t!function (module) {\r\n\t    /**\r\n\t     * @member Izi.utils\r\n\t     * @private\r\n\t     * @param value\r\n\t     * @return {String}\r\n\t     */\r\n\t    module.utils.typeOf = function (value) {\r\n\t        if (value === undefined) {\r\n\t            return 'undefined';\r\n\t        } else if (value === null) {\r\n\t            return 'null';\r\n\t        }\r\n\t\r\n\t        switch (typeof value)  {\r\n\t            case 'string':\r\n\t                return 'String';\r\n\t            case 'number':\r\n\t                return 'Number';\r\n\t            case 'boolean':\r\n\t                return 'Boolean';\r\n\t            case 'function':\r\n\t                return 'Function';\r\n\t        }\r\n\t\r\n\t        switch (Object.prototype.toString.call(value)) {\r\n\t            case '[object Array]':\r\n\t                return 'Array';\r\n\t            case '[object Date]':\r\n\t                return 'Date';\r\n\t            case '[object RegExp]':\r\n\t                return 'RegExp';\r\n\t            case '[object Boolean]':\r\n\t                return 'Boolean';\r\n\t            case '[object Number]':\r\n\t                return 'Number';\r\n\t        }\r\n\t\r\n\t        if (typeof value === 'object') {\r\n\t            return 'Object';\r\n\t        } else {\r\n\t            throw new Error(\"Couldn't find type of given value\");\r\n\t        }\r\n\t    };\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires ../utils/forEach.js\r\n\t * @requires ../utils/typeOf.js\r\n\t */\r\n\t!function (module) {\r\n\t\r\n\t    /**\r\n\t     * After <code>izi.perform(behavior).when('click').on(widget)...</code> behavior API\r\n\t     * @class Izi.behavior.OnWidget\r\n\t     * @constructor\r\n\t     * @private\r\n\t     * @param {Izi.behavior.Config} config\r\n\t     */\r\n\t    var OnWidget = function Izi_behavior_OnWidget(config) {\r\n\t        var action = config.getAction(),\r\n\t            scope = config.getScope(),\r\n\t            events = config.getEvents(),\r\n\t            eventOptions = config.getEventOptions(),\r\n\t            widget = config.getDispatcher(),\r\n\t            impl = config.getImpl(),\r\n\t            me = this;\r\n\t\r\n\t\r\n\t        function startObserving() {\r\n\t            me.observers = [];\r\n\t\r\n\t            module.utils.forEach(events, function (eventConfig) {\r\n\t\r\n\t                if (eventConfig.isKeyboardEventConfig) {\r\n\t                    if (widget.iziObserveKeyStroke) {\r\n\t                        me.observers.push(widget.iziObserveKeyStroke(eventConfig, action, scope, eventOptions));\r\n\t                    } else {\r\n\t                        me.observers.push(impl.observeKeyStroke(widget, eventConfig, action, scope, eventOptions));\r\n\t                    }\r\n\t\r\n\t                } else if (eventConfig.isEventConfig) {\r\n\t                    if (widget.iziObserveWidget) {\r\n\t                        me.observers.push(widget.iziObserveWidget(eventConfig, action, scope, eventOptions));\r\n\t                    } else {\r\n\t                        me.observers.push(impl.observeWidget(widget, eventConfig, action, scope, eventOptions));\r\n\t                    }\r\n\t\r\n\t                } else if (module.utils.typeOf(eventConfig) === \"Function\") {\r\n\t                    me.observers.push(eventConfig(widget, action, scope, eventOptions));\r\n\t\r\n\t                } else {\r\n\t                    throw new Error(\"Incorrect event type. Expecting izi.event.* or 'eventType' or function(target, action, scope, eventOptions)\");\r\n\t                }\r\n\t            });\r\n\t        }\r\n\t\r\n\t        startObserving();\r\n\t        config.behavior = this;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Stops observing the widget\r\n\t     * @member Izi.behavior.OnWidget\r\n\t     */\r\n\t    OnWidget.prototype.stopObserving = function () {\r\n\t        module.utils.forEach(this.observers, function (observer) {\r\n\t            observer();\r\n\t        });\r\n\t    };\r\n\t\r\n\t    module.behavior.OnWidget = OnWidget;\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires OnWidget.js\r\n\t */\r\n\t!function (module) {\r\n\t\r\n\t    /**\r\n\t     * After `izi.perform(behavior).when('click')...` behavior API\r\n\t     * @class Izi.behavior.WhenWidget\r\n\t     * @constructor\r\n\t     * @private\r\n\t     * @param {Izi.behavior.Config} config\r\n\t     */\r\n\t    var WhenWidget = function Izi_behavior_WhenWidget(config) {\r\n\t        this.config = config;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Widget declaration. You can pass directly widget instance or object containing widget on **delegatedIn** property.\r\n\t     *\r\n\t     *     var showMessage = new ShowMessage();\r\n\t     *     var button = new Button();\r\n\t     *     var wrapper = {\r\n\t     *         delegatedIn: button\r\n\t     *     };\r\n\t     *\r\n\t     *     izi.perform(showMessage).when('click').on(button);\r\n\t     *\r\n\t     *     // will work also for:\r\n\t     *     izi.perform(showMessage).when('click').on(wrapper);\r\n\t     *\r\n\t     *\r\n\t     * @member Izi.behavior.WhenWidget\r\n\t     * @param {*} widget Widget that should be observed.\r\n\t     * @return {Izi.behavior.OnWidget}\r\n\t     */\r\n\t    WhenWidget.prototype.on = function (widget) {\r\n\t        return new module.behavior.OnWidget(this.config.withDispatcher(widget));\r\n\t    };\r\n\t\r\n\t    module.behavior.WhenWidget = WhenWidget;\r\n\t\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires ../utils/forEach.js\r\n\t */\r\n\t!function (module) {\r\n\t\r\n\t    /**\r\n\t     * After <code>izi.perform(behavior).whenChangeOf('property1', 'property2').on(model)...</code> behavior API\r\n\t     * @class Izi.behavior.OnModel\r\n\t     * @constructor\r\n\t     * @private\r\n\t     * @param {Izi.behavior.Config} config\r\n\t     */\r\n\t    module.behavior.OnModel = function Izi_behavior_OnModel(config) {\r\n\t        var action = config.getAction(),\r\n\t            scope = config.getScope(),\r\n\t            model = config.getDispatcher(),\r\n\t            modelProperties = config.getModelProperties(),\r\n\t            bindings = [];\r\n\t\r\n\t        config.behavior = this;\r\n\t\r\n\t        function triggerAction() {\r\n\t            action.apply(scope, arguments);\r\n\t        }\r\n\t\r\n\t        module.utils.forEach(modelProperties, function (property) {\r\n\t            bindings.push(config.iziApi.bind({executeAtStartup: false}).valueOf(model, property).to(triggerAction));\r\n\t        });\r\n\t\r\n\t        /**\r\n\t         * Stops observing the model\r\n\t         */\r\n\t        this.stopObserving = function () {\r\n\t            module.utils.forEach(bindings, function (binding) {\r\n\t                binding.unbind();\r\n\t            });\r\n\t        };\r\n\t    };\r\n\t\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires OnModel.js\r\n\t */\r\n\t!function (module) {\r\n\t\r\n\t    /**\r\n\t     * After `izi.perform(behavior).whenChangeOf('firstName')...` behavior API\r\n\t     * @class Izi.behavior.WhenModel\r\n\t     * @constructor\r\n\t     * @private\r\n\t     * @param {Izi.behavior.Config} config\r\n\t     */\r\n\t    var WhenModel = function Izi_behavior_WhenModel(config) {\r\n\t        this.config = config;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Model declaration. You can pass directly model instance or object containing model on <strong>delegatedIn</strong> property.\r\n\t     *\r\n\t     *     var showFullName = new ShowFullName();\r\n\t     *     var model = new UserModel();\r\n\t     *     var wrapper = {\r\n\t     *         delegatedIn: model\r\n\t     *     };\r\n\t     *\r\n\t     *     izi.perform(showFullName).whenChangeOf('firstName', 'lastName').on(model);\r\n\t     *\r\n\t     *     // will work also for:\r\n\t     *     izi.perform(showFullName).whenChangeOf('firstName', 'lastName').on(wrapper);\r\n\t     *\r\n\t     * @member Izi.behavior.WhenModel\r\n\t     * @param {Object} model Model that should be observed for properties changes.\r\n\t     * @return {Izi.behavior.OnModel}\r\n\t     */\r\n\t    WhenModel.prototype.on = function (model) {\r\n\t        return new module.behavior.OnModel(this.config.withDispatcher(model));\r\n\t    };\r\n\t\r\n\t    module.behavior.WhenModel = WhenModel;\r\n\t\r\n\t}(Izi);\r\n\t!function (module) {\r\n\t\r\n\t    var PREVENT_DEFAULT = 'preventDefault',\r\n\t        STOP_PROPAGATION = 'stopPropagation',\r\n\t        BOTH = 'both';\r\n\t\r\n\t\r\n\t    /**\r\n\t     * @class Izi.events.EventConfig\r\n\t     * @constructor\r\n\t     * @private\r\n\t     * @param {String} [eventType]\r\n\t     */\r\n\t    var EventConfig = function Izi_events_EventConfig(eventType) {\r\n\t\r\n\t        /**\r\n\t         * @private\r\n\t         * @member Izi.events.EventConfig\r\n\t         * @type {String}\r\n\t         */\r\n\t        this.eventType = eventType;\r\n\t\r\n\t        /**\r\n\t         * @private\r\n\t         * @member Izi.events.EventConfig\r\n\t         * @type {Object}\r\n\t         */\r\n\t        this.modifiers = {\r\n\t            shift: false,\r\n\t            ctrl: false,\r\n\t            alt: false\r\n\t        };\r\n\t\r\n\t        /**\r\n\t         * @private\r\n\t         * @member Izi.events.EventConfig\r\n\t         * @type {String}\r\n\t         */\r\n\t        this.stopEventType = undefined;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.events.EventConfig\r\n\t     * @private\r\n\t     * @type {Boolean}\r\n\t     */\r\n\t    EventConfig.prototype.isEventConfig = true;\r\n\t\r\n\t    /**\r\n\t     * Setup if SHIFT key is expected to be pressed during user interaction\r\n\t     * @member Izi.events.EventConfig\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    EventConfig.prototype.shift = function () {\r\n\t        this.modifiers.shift = true;\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup if CTRL key is expected to be pressed during user interaction\r\n\t     * @member Izi.events.EventConfig\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    EventConfig.prototype.ctrl = function () {\r\n\t        this.modifiers.ctrl = true;\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup if ALT key is expected to be pressed during user interaction\r\n\t     * @member Izi.events.EventConfig\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    EventConfig.prototype.alt = function () {\r\n\t        this.modifiers.alt = true;\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup if stopPropagation() and preventDefaults() should be called on triggered event\r\n\t     * @member Izi.events.EventConfig\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    EventConfig.prototype.stopEvent = function () {\r\n\t        this.stopEventType = BOTH;\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup if stopPropagation() should be called on triggered event\r\n\t     * @member Izi.events.EventConfig\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    EventConfig.prototype.stopPropagation = function () {\r\n\t        this.stopEventType = STOP_PROPAGATION;\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup if preventDefaults() should be called on triggered event\r\n\t     * @member Izi.events.EventConfig\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    EventConfig.prototype.preventDefault = function () {\r\n\t        this.stopEventType = PREVENT_DEFAULT;\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Returns flag for SHIFT key modifier\r\n\t     * @private\r\n\t     * @member Izi.events.EventConfig\r\n\t     * @return {Boolean}\r\n\t     */\r\n\t    EventConfig.prototype.isExpectedShiftKey = function () {\r\n\t        return this.modifiers.shift;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Returns flag for CTRL key modifier\r\n\t     * @private\r\n\t     * @member Izi.events.EventConfig\r\n\t     * @return {Boolean}\r\n\t     */\r\n\t    EventConfig.prototype.isExpectedCtrlKey = function () {\r\n\t        return this.modifiers.ctrl;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Returns flag for ALT key modifier\r\n\t     * @private\r\n\t     * @member Izi.events.EventConfig\r\n\t     * @return {Boolean}\r\n\t     */\r\n\t    EventConfig.prototype.isExpectedAltKey = function () {\r\n\t        return this.modifiers.alt;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Returns event type\r\n\t     * @private\r\n\t     * @member Izi.events.EventConfig\r\n\t     * @return {String}\r\n\t     */\r\n\t    EventConfig.prototype.getEventType = function () {\r\n\t        return this.eventType;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Returns if event should be stopped for further propagation\r\n\t     * @private\r\n\t     * @member Izi.events.EventConfig\r\n\t     * @return {Boolean}\r\n\t     */\r\n\t    EventConfig.prototype.shouldStopPropagation = function () {\r\n\t        return this.stopEventType === STOP_PROPAGATION || this.stopEventType === BOTH;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Returns if event should prevent default behavior\r\n\t     * @private\r\n\t     * @member Izi.events.EventConfig\r\n\t     * @return {Boolean}\r\n\t     */\r\n\t    EventConfig.prototype.shouldPreventDefault = function () {\r\n\t        return this.stopEventType === PREVENT_DEFAULT || this.stopEventType === BOTH;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Returns true if all given modifiers matches configured modifiers.\r\n\t     * @member Izi.events.EventConfig\r\n\t     * @private\r\n\t     * @param {Boolean} shiftKey\r\n\t     * @param {Boolean} ctrlKey\r\n\t     * @param {Boolean} altKey\r\n\t     * @return {Boolean}\r\n\t     */\r\n\t    EventConfig.prototype.matchesModifiers = function (shiftKey, ctrlKey, altKey) {\r\n\t        return this.isExpectedShiftKey() === shiftKey &&\r\n\t               this.isExpectedCtrlKey() === ctrlKey &&\r\n\t               this.isExpectedAltKey() === altKey;\r\n\t    };\r\n\t\r\n\t    module.events.EventConfig = EventConfig;\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires WhenWidget.js\r\n\t * @requires WhenModel.js\r\n\t * @requires ../utils/typeOf.js\r\n\t * @requires ../events/EventConfig.js\r\n\t */\r\n\t!function (module) {\r\n\t    /**\r\n\t     * After <code>izi.perform(behavior)...</code> behavior API\r\n\t     * @class Izi.behavior.Perform\r\n\t     * @constructor\r\n\t     * @private\r\n\t     * @param {Izi.behavior.Config} config\r\n\t     */\r\n\t    var Perform = function Izi_behavior_Perform(config) {\r\n\t        this.config = config;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Specifies when your behavior should be executed. This method accept multiple inputs:\r\n\t     *\r\n\t     * String:\r\n\t     *\r\n\t     *     izi.perform(behavior).when('click').on(button);\r\n\t     *\r\n\t     * EventConfig:\r\n\t     *\r\n\t     *     izi.perform(behavior).when(izi.events.click().shift()).on(button);\r\n\t     *     izi.perform(behavior).when(izi.events.keyDown().F4().shift().stopEvent()).on(document);\r\n\t     *\r\n\t     * Multiple events:\r\n\t     *\r\n\t     *     izi.perform(behavior).when('mouseup', 'mousedown').on(button);\r\n\t     *     izi.perform(behavior).when(izi.events.click(), izi.events.keyDown().ENTER()).on(button);\r\n\t     *\r\n\t     * Event registration function: (since 1.5.0)\r\n\t     *\r\n\t     *     // target - is a button in this example\r\n\t     *     // action - is a reference to `behavior.perform` function\r\n\t     *     // scope - is a reference to `behavior`\r\n\t     *     function click(target, action, scope, eventOptions) {\r\n\t     *\r\n\t     *         // You may use any custom registration here\r\n\t     *         target.addListener(\"click\", action, scope);\r\n\t     *\r\n\t     *         return function stopObserving() {\r\n\t     *\r\n\t     *             // You must return function that will unregister listener\r\n\t     *             target.removeListener(\"click\", action, scope);\r\n\t     *         }\r\n\t     *     }\r\n\t     *     izi.perform(behavior).when(click).on(button);\r\n\t     *\r\n\t     * @member Izi.behavior.Perform\r\n\t     * @param {String.../Izi.events.EventConfig.../Function...|Object...} events Event type which should be observed for triggering behavior\r\n\t     * or event config created by izi.events.click() etc...\r\n\t     * @param {Object} [eventOptions] Optionally you can pass also event options if your framework implementation supports it.\r\n\t     * @return {Izi.behavior.WhenWidget}\r\n\t     */\r\n\t    Perform.prototype.when = function () {\r\n\t        var events = [],\r\n\t            eventOptions,\r\n\t            arg, argType;\r\n\t\r\n\t        for (var i = arguments.length - 1; i >= 0; i--) {\r\n\t            arg = arguments[i];\r\n\t            argType = module.utils.typeOf(arg);\r\n\t\r\n\t            if (argType === 'String') {\r\n\t                events.push(new module.events.EventConfig(arg));\r\n\t            } else if (arg.isEventConfig || argType === 'Function') {\r\n\t                events.push(arg);\r\n\t            } else if (argType === 'Object') {\r\n\t                eventOptions = arg;\r\n\t            } else {\r\n\t                throw new Error(\"Incorrect event types/options arguments\");\r\n\t            }\r\n\t        }\r\n\t\r\n\t        return new module.behavior.WhenWidget(this.config.withEvents(events).withEventOptions(eventOptions));\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Model properties names which should be observed for changes\r\n\t     * @member Izi.behavior.Perform\r\n\t     * @param {String...} properties\r\n\t     * @return {Izi.behavior.WhenModel}\r\n\t     */\r\n\t    Perform.prototype.whenChangeOf = function (properties) {\r\n\t\r\n\t        return new module.behavior.WhenModel(this.config.withModelProperties(Array.prototype.slice.call(arguments)));\r\n\t    };\r\n\t\r\n\t\r\n\t    /**\r\n\t     * Target object for custom registrar\r\n\t     *     var registrar = {\r\n\t     *\r\n\t     *         register: function (target) {\r\n\t     *             target.addEventListener(...);\r\n\t     *             target.addEventListener(...);\r\n\t     *             target.addEventListener(...);\r\n\t     *         },\r\n\t     *\r\n\t     *         unregister: function (target) {\r\n\t     *             target.removeEventListener(...);\r\n\t     *             target.removeEventListener(...);\r\n\t     *             target.removeEventListener(...);\r\n\t     *         }\r\n\t     *     };\r\n\t     *\r\n\t     *     izi.perform(registrar).on(target);\r\n\t     *\r\n\t     * @param {*} target\r\n\t     */\r\n\t    Perform.prototype.on = function (target) {\r\n\t        var registrar = this.config.action;\r\n\t\r\n\t        if (module.utils.typeOf(registrar.register) === 'Function') {\r\n\t\r\n\t            registrar.register(target);\r\n\t\r\n\t            return {\r\n\t                stopObserving: function () {\r\n\t                    registrar.unregister(target);\r\n\t                }\r\n\t            }\r\n\t        } else {\r\n\t            throw new Error(\"Use on(target) method only for custom registrars: izi.perform({register: function (target){...}).on(target)\");\r\n\t        }\r\n\t    };\r\n\t\r\n\t    module.behavior.Perform = Perform;\r\n\t\r\n\t}(Izi);\r\n\t!function (module) {\r\n\t    /**\r\n\t     * Internal configuration used in behavior fluent API\r\n\t     * @class Izi.behavior.Config\r\n\t     * @constructor\r\n\t     * @private\r\n\t     * @param {Object} impl izi behavior implementation\r\n\t     * @param {izi} iziApi izi behavior implementation\r\n\t     */\r\n\t    var Config = function Izi_behavior_Config(impl, iziApi) {\r\n\t        this.impl = impl;\r\n\t        this.iziApi = iziApi;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Set dispatcher\r\n\t     * @member Izi.behavior.Config\r\n\t     * @private\r\n\t     * @param dispatcher\r\n\t     * @return {Izi.behavior.Config}\r\n\t     */\r\n\t    Config.prototype.withDispatcher = function (dispatcher) {\r\n\t        this.dispatcher = dispatcher;\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Set event type\r\n\t     * @member Izi.behavior.Config\r\n\t     * @private\r\n\t     * @param {Izi.events.EventConfig[]} events\r\n\t     * @return {Izi.behavior.Config}\r\n\t     */\r\n\t    Config.prototype.withEvents = function (events) {\r\n\t        this.events = events;\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Set event options\r\n\t     * @member Izi.behavior.Config\r\n\t     * @private\r\n\t     * @param eventOptions\r\n\t     * @return {Izi.behavior.Config}\r\n\t     */\r\n\t    Config.prototype.withEventOptions = function (eventOptions) {\r\n\t        this.eventOptions = eventOptions;\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Set action\r\n\t     * @member Izi.behavior.Config\r\n\t     * @private\r\n\t     * @param action\r\n\t     * @return {Izi.behavior.Config}\r\n\t     */\r\n\t    Config.prototype.withAction = function (action) {\r\n\t        this.action = action;\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Set scope\r\n\t     * @member Izi.behavior.Config\r\n\t     * @private\r\n\t     * @param scope\r\n\t     * @return {Izi.behavior.Config}\r\n\t     */\r\n\t    Config.prototype.withScope = function (scope) {\r\n\t        this.scope = scope;\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Set model properties\r\n\t     * @member Izi.behavior.Config\r\n\t     * @private\r\n\t     * @param modelProperties\r\n\t     * @return {Izi.behavior.Config}\r\n\t     */\r\n\t    Config.prototype.withModelProperties = function (modelProperties) {\r\n\t        this.modelProperties = modelProperties;\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * In case of usage: <code>izi.perform(behavior)</code> - it will return <code>behavior.perform</code> function\r\n\t     * In case of usage: <code>izi.perform(scope.function)</code> - it will return <code>scope.function</code>\r\n\t     * @member Izi.behavior.Config\r\n\t     * @return {Function}\r\n\t     */\r\n\t    Config.prototype.getAction = function () {\r\n\t        if ((typeof this.action) !== \"function\" && (!this.scope)) {\r\n\t            return this.getScope()[this.getImpl().defaultPerformFunction];\r\n\t        }\r\n\t\r\n\t        return this.action;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * In case of usage: <code>izi.perform(behavior)</code> - it will return <code>behavior</code>\r\n\t     * In case of usage: <code>izi.perform(scope.function, scope)</code> - it will return <code>scope</code>\r\n\t     * @member Izi.behavior.Config\r\n\t     * @return {Object}\r\n\t     */\r\n\t    Config.prototype.getScope = function () {\r\n\t        if ((typeof this.action) !== \"function\" && (!this.scope)) {\r\n\t            return this.action;\r\n\t        }\r\n\t\r\n\t        return this.scope;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Get event type\r\n\t     * @member Izi.behavior.Config\r\n\t     * @return {Izi.events.EventConfig[]}\r\n\t     */\r\n\t    Config.prototype.getEvents = function () {\r\n\t        return this.events;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Get event options\r\n\t     * @member Izi.behavior.Config\r\n\t     * @return {Object}\r\n\t     */\r\n\t    Config.prototype.getEventOptions = function () {\r\n\t        return this.eventOptions;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Get event dispatcher\r\n\t     * @member Izi.behavior.Config\r\n\t     * @return {*}\r\n\t     */\r\n\t    Config.prototype.getDispatcher = function () {\r\n\t        return this.dispatcher.delegatedIn || this.dispatcher;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Get behavior implementation\r\n\t     * @member Izi.behavior.Config\r\n\t     * @return {*}\r\n\t     */\r\n\t    Config.prototype.getImpl = function () {\r\n\t        return this.impl;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Get model properties\r\n\t     * @member Izi.behavior.Config\r\n\t     * @return {String[]}\r\n\t     */\r\n\t    Config.prototype.getModelProperties = function () {\r\n\t        return this.modelProperties;\r\n\t    };\r\n\t\r\n\t    module.behavior.Config = Config;\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires Perform.js\r\n\t * @requires Config.js\r\n\t * @requires ../utils/forEach.js\r\n\t */\r\n\t!function(module) {\r\n\t\r\n\t    /**\r\n\t     * @member Izi.behavior\r\n\t     * @method\r\n\t     * @private\r\n\t     * @param {Object} impl\r\n\t     * @param {izi} iziApi\r\n\t     */\r\n\t    module.behavior.register = function (impl, iziApi) {\r\n\t\r\n\t        if (!impl.defaultPerformFunction) {\r\n\t            throw new Error(\"Behavior implementation must have defined property: defaultPerformFunction: 'someFunctionName'\");\r\n\t        }\r\n\t        if (!impl.observeWidget) {\r\n\t            throw new Error(\"Behavior implementation must have defined function observeWidget (widget, eventConfig, action, scope, options)\");\r\n\t        }\r\n\t        if (!impl.observeKeyStroke) {\r\n\t            throw new Error(\"Behavior implementation must have defined function observeKeyStroke (widget, keyboardConfig, action, scope, options)\");\r\n\t        }\r\n\t\r\n\t        /**\r\n\t         * @ignore\r\n\t         * @sanity izi.sanityOf(\"izi.perform()\").args().args(izi.arg(\"behavior\").ofObject().havingFunction(impl.defaultPerformFunction)).args(izi.arg(\"behaviorWrapper\").ofObject().havingProperty(\"delegatedIn\")).args(izi.arg(\"callback\").ofFunction()).args(izi.arg(\"callback\").ofFunction(), izi.arg(\"scope\").ofObject()).args(izi.arg(\"registrar\").ofObject().havingFunctions(\"register\", \"unregister\")).check(arguments);\r\n\t         */\r\n\t        return function (action, scope) {\r\n\t\r\n\t            if (arguments.length === 0) {\r\n\t                var configs = [];\r\n\t\r\n\t                var registerBehaviors = function (action, scope) {\r\n\t                    var config = new module.behavior.Config(impl, iziApi).withAction(action).withScope(scope);\r\n\t                    configs.push(config);\r\n\t                    return new module.behavior.Perform(config);\r\n\t                };\r\n\t\r\n\t                registerBehaviors.stopObserving = function () {\r\n\t                    module.utils.forEach(configs, function (config) {\r\n\t                        config.behavior.stopObserving();\r\n\t                    });\r\n\t                };\r\n\t\r\n\t                return registerBehaviors;\r\n\t            }\r\n\t\r\n\t            return new module.behavior.Perform(new module.behavior.Config(impl, iziApi).withAction(action).withScope(scope));\r\n\t        };\r\n\t    };\r\n\t}(Izi);\r\n\t!function (module) {\r\n\t    /**\r\n\t     * @member Izi.utils\r\n\t     * @method\r\n\t     * @private\r\n\t     * @param {Object} object host object\r\n\t     * @param {String} property to be examined to\r\n\t     */\r\n\t    module.utils.hasOwnProperty = function (object, property) {\r\n\t        return Object.prototype.hasOwnProperty.call(object, property);\r\n\t    };\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires hasOwnProperty.js\r\n\t */\r\n\t!function (module) {\r\n\t    /**\r\n\t     * @member Izi.utils\r\n\t     * @method\r\n\t     * @private\r\n\t     * @param {Object...} vararg of any Objects\r\n\t     */\r\n\t    module.utils.mergeObjects = function () {\r\n\t\r\n\t        function copyProperties(source, target) {\r\n\t            for (var key in source) {\r\n\t                if (module.utils.hasOwnProperty(source, key)) {\r\n\t                    target[key] = source[key];\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t\r\n\t        return function () {\r\n\t            var result = {};\r\n\t            for (var i = 0; i < arguments.length; i++) {\r\n\t                copyProperties(arguments[i], result);\r\n\t            }\r\n\t            return result;\r\n\t        }\r\n\t    }();\r\n\t}(Izi);\r\n\t!function (module) {\r\n\t    /**\r\n\t     * @member Izi.utils\r\n\t     * @method\r\n\t     * @private\r\n\t     * @param {Array} array\r\n\t     * @param {*} item\r\n\t     * @return {Number}\r\n\t     */\r\n\t    module.utils.indexOf = (function () {\r\n\t\r\n\t        function byIndexOf(array, item) {\r\n\t            return Array.prototype.indexOf.call(array, item);\r\n\t        }\r\n\t\r\n\t        function byLoop(array, item) {\r\n\t            var i, ln = array.length;\r\n\t\r\n\t            for (i = 0; i < ln; i = i + 1) {\r\n\t                if (array[i] === item) {\r\n\t                    return i;\r\n\t                }\r\n\t            }\r\n\t\r\n\t            return -1;\r\n\t        }\r\n\t\r\n\t        function hasIndexOf() {\r\n\t            return (typeof Array.prototype.indexOf) === 'function';\r\n\t        }\r\n\t\r\n\t        return hasIndexOf() ? byIndexOf : byLoop;\r\n\t    }());\r\n\t\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires indexOf.js\r\n\t */\r\n\t!function (module) {\r\n\t    /**\r\n\t     * @member Izi.utils\r\n\t     * @method\r\n\t     * @private\r\n\t     * @param {Array} array\r\n\t     * @param {*} item\r\n\t     */\r\n\t    module.utils.removeItem = function (array, item) {\r\n\t        var start = module.utils.indexOf(array, item);\r\n\t        if (start !== -1) {\r\n\t            array.splice(start, 1);\r\n\t        }\r\n\t    };\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires ../utils/mergeObjects.js\r\n\t * @requires ../utils/removeItem.js\r\n\t */\r\n\t!function (module) {\r\n\t\r\n\t    /**\r\n\t     * Internal configuration used in binding fluent API\r\n\t     * @private\r\n\t     * @class Izi.binding.Config\r\n\t     * @constructor\r\n\t     * @param {Object} impl izi binding implementation\r\n\t     */\r\n\t    var Config = function Izi_binding_Config(impl) {\r\n\t        this.options = {\r\n\t            auto: true,\r\n\t            executeAtStartup: true,\r\n\t            debug: false\r\n\t        };\r\n\t        this.impl = impl;\r\n\t        this.triggerProperties = [];\r\n\t        this.bindings = [];\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.binding.Config\r\n\t     * @private\r\n\t     * @param {Object} options\r\n\t     * @return {Izi.binding.Config}\r\n\t     * @since 1.1.0\r\n\t     */\r\n\t    Config.prototype.withOptions = function (options) {\r\n\t        this.options = module.utils.mergeObjects(this.options, options);\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.binding.Config\r\n\t     * @private\r\n\t     * @param {Izi.binding.Binding[]} bindings\r\n\t     * @return {Izi.binding.Config}\r\n\t     * @since 1.1.0\r\n\t     */\r\n\t    Config.prototype.withBindings = function (bindings) {\r\n\t        this.bindings = bindings;\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.binding.Config\r\n\t     * @private\r\n\t     * @param {Function} callerLineProvider\r\n\t     * @return {Izi.binding.Config}\r\n\t     * @since 1.1.0\r\n\t     */\r\n\t    Config.prototype.withCallerLineProvider = function (callerLineProvider) {\r\n\t        this.callerLineProvider = callerLineProvider;\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.binding.Config\r\n\t     * @private\r\n\t     * @param source\r\n\t     * @return {Izi.binding.Config}\r\n\t     */\r\n\t    Config.prototype.withSource = function (source) {\r\n\t        this.source = source;\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.binding.Config\r\n\t     * @private\r\n\t     * @param sourceProperties\r\n\t     * @return {Izi.binding.Config}\r\n\t     */\r\n\t    Config.prototype.withSourceProperties = function (sourceProperties) {\r\n\t        this.sourceProperties = sourceProperties.constructor === Array ? sourceProperties : [sourceProperties];\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.binding.Config\r\n\t     * @private\r\n\t     * @param target\r\n\t     * @return {Izi.binding.Config}\r\n\t     */\r\n\t    Config.prototype.withTarget = function (target) {\r\n\t        this.target = target;\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.binding.Config\r\n\t     * @private\r\n\t     * @param value\r\n\t     * @return {Izi.binding.Config}\r\n\t     */\r\n\t    Config.prototype.withTargetProperty = function (value) {\r\n\t        this.targetProperty = value;\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.binding.Config\r\n\t     * @private\r\n\t     * @param formatter\r\n\t     * @return {Izi.binding.Config}\r\n\t     */\r\n\t    Config.prototype.withFormatter = function (formatter) {\r\n\t        this.formatter = formatter;\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.binding.Config\r\n\t     * @private\r\n\t     * @param property\r\n\t     */\r\n\t    Config.prototype.addTriggerProperty = function (property) {\r\n\t        this.triggerProperties.push(property);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.binding.Config\r\n\t     * @private\r\n\t     * @param {Izi.binding.Binding} binding\r\n\t     */\r\n\t    Config.prototype.addBinding = function (binding) {\r\n\t        this.bindings.push(binding);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.binding.Config\r\n\t     * @private\r\n\t     * @param {Izi.binding.Binding} binding\r\n\t     */\r\n\t    Config.prototype.removeBinding = function (binding) {\r\n\t        module.utils.removeItem(this.bindings, binding);\r\n\t    };\r\n\t\r\n\t    module.binding.Config = Config;\r\n\t}(Izi);\r\n\t!function (module) {\r\n\t    /**\r\n\t     * @member Izi.utils\r\n\t     * @method\r\n\t     * @since 1.1.0\r\n\t     * @private\r\n\t     * @param {Function} fn\r\n\t     * @param {Object} scope\r\n\t     * @return {Function}\r\n\t     */\r\n\t    module.utils.curry = function (fn, scope) {\r\n\t        return function () {\r\n\t            fn.apply(scope, arguments);\r\n\t        }\r\n\t    };\r\n\t}(Izi);\r\n\t!function (module) {\r\n\t    /**\r\n\t     * @member Izi.utils\r\n\t     * @method\r\n\t     * @private\r\n\t     * @param {Array} factories\r\n\t     * @param {Array} args\r\n\t     * @param {Object} scope\r\n\t     */\r\n\t    module.utils.findClosure = function Izi_utils_findClosure(factories, args, scope) {\r\n\t        var i, factory, closure;\r\n\t        for (i = 0; i < factories.length; i = i + 1) {\r\n\t            factory = factories[i];\r\n\t            closure = factory.apply(scope, args);\r\n\t            if (closure) {\r\n\t                return closure;\r\n\t            }\r\n\t        }\r\n\t\r\n\t        throw new Error(\"Closure not found\");\r\n\t    };\r\n\t}(Izi);\r\n\t!function (module) {\r\n\t    /**\r\n\t     * @member Izi.utils\r\n\t     * @method\r\n\t     * @since 1.1.0\r\n\t     * @private\r\n\t     * @param {String} text\r\n\t     * @return {String}\r\n\t     */\r\n\t    module.utils.trim = function (text) {\r\n\t        return text.replace(/^\\W+/, '').replace(/\\W+$/, '');\r\n\t    };\r\n\t}(Izi);\r\n\t!function (module, global) {\r\n\t    /**\r\n\t     * @member Izi.utils\r\n\t     * @method\r\n\t     * @since 1.2.0\r\n\t     * @private\r\n\t     */\r\n\t    var logImpl;\r\n\t    if (\"console\" in global) {\r\n\t        logImpl = function () {\r\n\t            if (global.console.log.apply) {\r\n\t                global.console.log.apply(global.console, arguments);\r\n\t            } else {\r\n\t                // IE :)\r\n\t                global.console.log(Array.prototype.slice.call(arguments));\r\n\t            }\r\n\t\r\n\t        }\r\n\t    } else {\r\n\t        logImpl = function () {\r\n\t            // no loggers other than window.console\r\n\t        }\r\n\t    }\r\n\t\r\n\t    module.utils.log = function () {\r\n\t        logImpl.apply(global, arguments);\r\n\t    }\r\n\t\r\n\t}(Izi, this);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires Config.js\r\n\t * @requires ../utils/typeOf.js\r\n\t * @requires ../utils/forEach.js\r\n\t * @requires ../utils/curry.js\r\n\t * @requires ../utils/findClosure.js\r\n\t * @requires ../utils/trim.js\r\n\t * @requires ../utils/log.js\r\n\t */\r\n\t!function (module) {\r\n\t    var forEach = module.utils.forEach,\r\n\t        curry = module.utils.curry,\r\n\t        findClosure = module.utils.findClosure,\r\n\t        trim = module.utils.trim,\r\n\t        log = module.utils.log,\r\n\t        INVALID_VALUE = {};\r\n\t\r\n\t    function onlyOnceError() {\r\n\t        throw new Error(\"twoWay() method may be used only once\");\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * Binding initializer - the last part of\r\n\t     * <code>izi.bind().valueOf(source, 'sourceProperty').to(target, 'targetProperty')</code> fluent API\r\n\t     * @class Izi.binding.Binding\r\n\t     * @constructor\r\n\t     * @private\r\n\t     * @param {Izi.binding.Config} config\r\n\t     */\r\n\t    var Binding = function Izi_binding_Binding(config) {\r\n\t\r\n\t        this.impl = config.impl;\r\n\t        this.source = config.source.delegatedIn || config.source;\r\n\t        this.sourceProperties = config.sourceProperties;\r\n\t        this.triggerProperties = config.triggerProperties;\r\n\t        this.target = config.target.delegatedIn || config.target;\r\n\t        this.targetProperty = config.targetProperty;\r\n\t        this.formatter = config.formatter;\r\n\t        this.sourceReaders = {};\r\n\t        this.targetReader = undefined;\r\n\t        this.targetWriter = undefined;\r\n\t        this.observers = [];\r\n\t        this.options = config.options;\r\n\t        this.getCallerLine = config.callerLineProvider;\r\n\t\r\n\t        this.registerReadersAndWriters();\r\n\t\r\n\t        if (this.options.auto) {\r\n\t            if (this.options.executeAtStartup) {\r\n\t                this.transferValue();\r\n\t            }\r\n\t            this.bind();\r\n\t        }\r\n\t\r\n\t        config.addBinding(this);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.binding.Binding\r\n\t     * @private\r\n\t     * @param object\r\n\t     * @param properties\r\n\t     * @return {*}\r\n\t     */\r\n\t    Binding.prototype.getFormattedValues = function (object, properties) {\r\n\t        var values = [],\r\n\t            sourceReader,\r\n\t            sourceReaders = this.sourceReaders,\r\n\t            formatter = this.formatter;\r\n\t\r\n\t\r\n\t        forEach(properties, function (property) {\r\n\t            sourceReader = sourceReaders[property];\r\n\t            values.push(sourceReader(object, property));\r\n\t        });\r\n\t\r\n\t        if (formatter && (typeof formatter === \"function\")) {\r\n\t            return formatter.apply(null, values);\r\n\t        } else if (values.length === 1) {\r\n\t            return values[0];\r\n\t        } else {\r\n\t            throw new Error(\"You must use formatter if you want to bind more properties than one. Ex: izi.bind().valueOf(model, 'firstName', 'lastName').through(concatFormatter)...\");\r\n\t        }\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @private\r\n\t     * @param sourceValue\r\n\t     */\r\n\t    Binding.prototype.debugBinding = function (sourceValue) {\r\n\t        var callerLine;\r\n\t\r\n\t        if (this.options.debug) {\r\n\t            callerLine = trim(this.getCallerLine());\r\n\t            log('[BINDING] ' + callerLine, {\r\n\t                source: this.source,\r\n\t                sourceProperties: this.sourceProperties,\r\n\t                target: this.target,\r\n\t                targetProperty: this.targetProperty,\r\n\t                triggerProperties: this.triggerProperties,\r\n\t                value: sourceValue\r\n\t            });\r\n\t        }\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.binding.Binding\r\n\t     * @private\r\n\t     */\r\n\t    Binding.prototype.transferValue = function () {\r\n\t        var source = this.source,\r\n\t            sourceProperties = this.sourceProperties,\r\n\t            sourceValue = this.getFormattedValues(source, sourceProperties),\r\n\t            targetReader = this.targetReader,\r\n\t            targetWriter = this.targetWriter,\r\n\t            target = this.target,\r\n\t            targetProperty = this.targetProperty,\r\n\t            targetValue;\r\n\t\r\n\t        try {\r\n\t            targetValue = targetReader(target, targetProperty);\r\n\t        } catch (error) {\r\n\t            targetValue = INVALID_VALUE;\r\n\t        }\r\n\t\r\n\t        if (sourceValue !== targetValue) {\r\n\t            this.debugBinding(sourceValue);\r\n\t            targetWriter(target, targetProperty, sourceValue);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.binding.Binding\r\n\t     * @private\r\n\t     * @param source\r\n\t     * @param sourceProperty\r\n\t     * @param target\r\n\t     * @param targetProperty\r\n\t     * @param transferValueFn\r\n\t     * @return {*}\r\n\t     */\r\n\t    Binding.prototype.getChangeObserver = function (source, sourceProperty, target, targetProperty, transferValueFn) {\r\n\t        var impl = this.impl;\r\n\t\r\n\t        try {\r\n\t            return findClosure(impl.changeObservers, [source, sourceProperty, target, targetProperty, transferValueFn], this);\r\n\t        } catch (error) {\r\n\t            if (!this.options.allowNotWatchable) {\r\n\t                throw new Error(\"Could not find change observer for: \" + source + \" and property: \" + sourceProperty);\r\n\t            }\r\n\t\r\n\t            if (module.isDebug) {\r\n\t                log(\"[BINDING] Could not find change observer for:\", source, \"and property:\", sourceProperty);\r\n\t            }\r\n\t\r\n\t            return function notWatchableObserver() {\r\n\t                return function doNothing() {\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.binding.Binding\r\n\t     * @private\r\n\t     */\r\n\t    Binding.prototype.registerReadersAndWriters = function () {\r\n\t        var source = this.source,\r\n\t            target = this.target,\r\n\t            targetProperty = this.targetProperty,\r\n\t            sourceProperties = this.sourceProperties,\r\n\t            sourceReaders = this.sourceReaders,\r\n\t            valueReaders = this.impl.valueReaders,\r\n\t            valueWriters = this.impl.valueWriters,\r\n\t            me = this;\r\n\t\r\n\t        forEach(sourceProperties, function (sourceProperty) {\r\n\t            try {\r\n\t                sourceReaders[sourceProperty] = findClosure(valueReaders, [source, sourceProperty, \"sourceReader\"], this);\r\n\t            } catch (e) {\r\n\t                throw new Error(\"Could not find reader function for: \" + source + \" using property: \" + sourceProperty);\r\n\t            }\r\n\t        });\r\n\t\r\n\t        try {\r\n\t            this.targetReader = findClosure(valueReaders, [target, targetProperty, \"targetReader\"], this);\r\n\t        } catch (e) {\r\n\t            this.targetReader = function () {\r\n\t                return INVALID_VALUE;\r\n\t            }\r\n\t        }\r\n\t\r\n\t        try {\r\n\t            this.targetWriter = findClosure(valueWriters, [target, targetProperty], this);\r\n\t        } catch (e) {\r\n\t            throw new Error(\"Could not find writer function for: \" + target + \" using property: \" + targetProperty);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Bind target to source (start listening for source changes). When you use <code>izi.bind()</code> this is called\r\n\t     * automatically. You should call it only when you use <code>izi.bind({auto:false})</code> option.\r\n\t     * This method doesn't transfer value from source to target - {@link Izi.binding.Binding#execute} does it.\r\n\t     * @member Izi.binding.Binding\r\n\t     * @since 1.1.0\r\n\t     */\r\n\t    Binding.prototype.bind = function () {\r\n\t        var sourceProperties = this.sourceProperties,\r\n\t            triggerProperties = this.triggerProperties,\r\n\t            source = this.source,\r\n\t            target = this.target,\r\n\t            targetProperty = this.targetProperty,\r\n\t            allTriggerProperties = triggerProperties.concat(sourceProperties),\r\n\t            observers = this.observers,\r\n\t            transferValueFn = curry(this.transferValue, this),\r\n\t            me = this;\r\n\t\r\n\t        forEach(allTriggerProperties, function (sourceProperty) {\r\n\t            var changeObserver = me.getChangeObserver(source, sourceProperty, target, targetProperty, transferValueFn);\r\n\t            observers.push(changeObserver(source, sourceProperty, target, targetProperty, transferValueFn));\r\n\t        });\r\n\t\r\n\t        this.reverseBinding && this.reverseBinding.bind();\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.binding.Binding\r\n\t     * @deprecated 1.1.0 Use {@link Izi.binding.Binding#unbind} instead.\r\n\t     * @return {void}\r\n\t     */\r\n\t    Binding.prototype.stopObserving = function () {\r\n\t        this.unbind();\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Unbind target from source (stop listening for source changes).\r\n\t     * @member Izi.binding.Binding\r\n\t     * @since 1.1.0\r\n\t     */\r\n\t    Binding.prototype.unbind = function () {\r\n\t        forEach(this.observers, function (observer) {\r\n\t            observer();\r\n\t        });\r\n\t\r\n\t        this.reverseBinding && this.reverseBinding.unbind()\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates two way binding between source and target. There are following limitations for using this feature:\r\n\t     *\r\n\t     *  * source property must be only one\r\n\t     *  * `through()` function can't be defined\r\n\t     *  * target can't be a function\r\n\t     *\r\n\t     * @member Izi.binding.Binding\r\n\t     * @since 1.5.0\r\n\t     * @returns {*}\r\n\t     */\r\n\t    Binding.prototype.twoWay = function () {\r\n\t        if (this.formatter) {\r\n\t            throw new Error(\"Two way binding doesn't allow to use .through(fn) function\");\r\n\t        }\r\n\t\r\n\t        if (module.utils.typeOf(this.target) === \"Function\") {\r\n\t            throw new Error(\"Two way binding doesn't allow to use function as a target\");\r\n\t        }\r\n\t\r\n\t        var reverseConfig = new module.binding.Config(this.impl)\r\n\t            .withOptions(this.options)\r\n\t            .withSource(this.target)\r\n\t            .withSourceProperties(this.targetProperty)\r\n\t            .withTarget(this.source)\r\n\t            .withTargetProperty(this.sourceProperties[0])\r\n\t            .withCallerLineProvider(this.getCallerLine);\r\n\t\r\n\t        this.reverseBinding = new module.binding.Binding(reverseConfig);\r\n\t        this.twoWay = onlyOnceError;\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Execute binding (transfer value from source to target). In case of two way binding it will be triggered\r\n\t     * just binging from source to target.\r\n\t     * @member Izi.binding.Binding\r\n\t     * @since 1.1.0\r\n\t     */\r\n\t    Binding.prototype.execute = function () {\r\n\t        this.transferValue();\r\n\t    };\r\n\t\r\n\t    module.binding.Binding = Binding;\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires Binding.js\r\n\t */\r\n\t!function (module) {\r\n\t\r\n\t    /**\r\n\t     * After `izi.bind().valueOf(widget)...` fluent API\r\n\t     * @class Izi.binding.ValueOf\r\n\t     * @constructor\r\n\t     * @private\r\n\t     * @param {Izi.binding.Config} config\r\n\t     */\r\n\t    var ValueOf = function Izi_binding_ValueOf(config) {\r\n\t        this.config = config;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Binding target setup.\r\n\t     * You can pass directly target instance or object containing target on <strong>delegatedIn</strong> property.\r\n\t     * \r\n\t     *     var label = new Label();\r\n\t     *     var wrapper = {\r\n\t     *         delegatedIn: label\r\n\t     *     }\r\n\t     *     izi.bind().valueOf(model).to(label, \"text\");\r\n\t     *\r\n\t     *     //will work also for:\r\n\t     *     izi.bind().valueOf(model).to(wrapper, \"text\");\r\n\t     * \r\n\t     * You can skip both parameters in order to more elegant notation:\r\n\t     * \r\n\t     *     izi.bind().valueOf(model).to().textOf(label);\r\n\t     * \r\n\t     *\r\n\t     * As a target you can also use a function with given scope:\r\n\t     *\r\n\t     *     var scope = {\r\n\t     *         firstName: null,\r\n\t     *\r\n\t     *         firstNameChangeHandler: function (value) {\r\n\t     *             this.firstName = value;\r\n\t     *         }\r\n\t     *     }\r\n\t     *\r\n\t     *     izi.bind().valueOf(model, \"firstName\").to(scope.firstNameChangeHandler, scope);\r\n\t     *     model.firstName(\"John\");\r\n\t     *\r\n\t     * You can also skip the scope:\r\n\t     *\r\n\t     *     function firstNameChangeHandler(value) {\r\n\t     *         console.log(value); // \"John\"\r\n\t     *     }\r\n\t     *\r\n\t     *     izi.bind().valueOf(model, \"firstName\").to(firstNameChangeHandler);\r\n\t     *     model.firstName(\"John\");\r\n\t     *\r\n\t     * @member Izi.binding.ValueOf\r\n\t     * @sanity izi.sanityOf(\"to()\").args().args(izi.arg(\"targetFunction\").ofFunction()).args(izi.arg(\"targetFunction\").ofFunction(), izi.arg(\"scope\").ofObject()).args(izi.arg(\"target\").ofObject(), izi.arg(\"targetProperty\").ofString()).args(izi.arg(\"target\").ofObject().havingProperty(\"delegatedIn\"), izi.arg(\"targetProperty\").ofString()).check(arguments);\r\n\t     * @param {Object/Function} [target] Model or widget or Function\r\n\t     * @param {String/Object} [targetProperty] Target property name or Function scope\r\n\t     * @return {Izi.binding.Binding|Izi.binding.ValueOf} `.to()` returns Izi.binding.ValueOf, `.to(target, \"property\")` returns Izi.binding.Binding\r\n\t     */\r\n\t    ValueOf.prototype.to = function (target, targetProperty) {\r\n\t        if (arguments.length === 0) {\r\n\t            return this;\r\n\t        } else {\r\n\t            return new module.binding.Binding(this.config.withTarget(target).withTargetProperty(targetProperty));\r\n\t        }\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Binding target setup for 'value' property.\r\n\t     *\r\n\t     * @member Izi.binding.ValueOf\r\n\t     * @sanity izi.sanityOf(\"valueOf()\").args(izi.arg(\"target\").ofObject()).args(izi.arg(\"target\").ofObject().havingProperty(\"delegatedIn\")).check(arguments);\r\n\t     * @param {Object} target\r\n\t     * @return {Izi.binding.Binding}\r\n\t     */\r\n\t    ValueOf.prototype.valueOf = function (target) {\r\n\t        return this.to(target, \"value\");\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Binding target setup for 'text' property.\r\n\t     *\r\n\t     * @member Izi.binding.ValueOf\r\n\t     * @sanity izi.sanityOf(\"textOf()\").args(izi.arg(\"target\").ofObject()).args(izi.arg(\"target\").ofObject().havingProperty(\"delegatedIn\")).check(arguments);\r\n\t     * @param {Object} target\r\n\t     * @return {Izi.binding.Binding}\r\n\t     */\r\n\t    ValueOf.prototype.textOf = function (target) {\r\n\t        return this.to(target, \"text\");\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Binding target setup for 'selectedItems' property.\r\n\t     *\r\n\t     * @member Izi.binding.ValueOf\r\n\t     * @sanity izi.sanityOf(\"selectedItemsOf()\").args(izi.arg(\"target\").ofObject()).args(izi.arg(\"target\").ofObject().havingProperty(\"delegatedIn\")).check(arguments);\r\n\t     * @param {Object} target\r\n\t     * @return {Izi.binding.Binding}\r\n\t     */\r\n\t    ValueOf.prototype.selectedItemsOf = function (target) {\r\n\t        return this.to(target, \"selectedItems\");\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Formatter function which is used before set value on target.\r\n\t     * If you specified more than one source properties - you must also specify formatter function.\r\n\t     * \r\n\t     *     var fullNameFormatter = function (firstName, lastName) {\r\n\t     *         return firstName + ' ' + lastName;\r\n\t     *     }\r\n\t     *     izi.bind().valueOf(model, 'firstName', 'lastName').through(fullNameFormatter)\r\n\t     * \r\n\t     *\r\n\t     * @member Izi.binding.ValueOf\r\n\t     * @param {Function} formatter Function that combines all source values to one value\r\n\t     * @return {Izi.binding.ValueOf}\r\n\t     */\r\n\t    ValueOf.prototype.through = function (formatter) {\r\n\t        this.config.withFormatter(formatter);\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Additional source property which change will trigger binding execution.\r\n\t     * \r\n\t     *     var label = new Label();\r\n\t     *     var model = new User();\r\n\t     *     model.getFullName = function () {\r\n\t     *       return this.get(\"firstName\") + ' ' + this.get(\"lastName\");\r\n\t     *     }\r\n\t     *\r\n\t     *     izi.bind().valueOf(model, \"fullName\")\r\n\t     *               .onChangeOf(\"firstName\")\r\n\t     *               .onChangeOf(\"lastName\")\r\n\t     *               .to().textOf(label);\r\n\t     * \r\n\t     *\r\n\t     * @member Izi.binding.ValueOf\r\n\t     * @param {String} property Model property that triggers binding execution\r\n\t     * @return {Izi.binding.ValueOf}\r\n\t     */\r\n\t    ValueOf.prototype.onChangeOf = function (property) {\r\n\t        this.config.addTriggerProperty(property);\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    module.binding.ValueOf = ValueOf;\r\n\t\r\n\t}(Izi);\r\n\t!function (module) {\r\n\t    /**\r\n\t     * @member Izi.utils\r\n\t     * @method\r\n\t     * @private\r\n\t     * @param {Number} stackOffset\r\n\t     * @return {Function}\r\n\t     */\r\n\t    module.utils.getCallerLineProvider = function (stackOffset) {\r\n\t        if (!module.isDebug) {\r\n\t            return function () {\r\n\t                return \"Line numbers are available only in debug version of izi-js\";\r\n\t            }\r\n\t        }\r\n\t        var error = Error();\r\n\t\r\n\t        return function getCallerLine() {\r\n\t            if (error.stack) {\r\n\t                // WebKit / FireFox / Opera\r\n\t                var callStack = error.stack.split(\"\\n\");\r\n\t                var index = navigator.userAgent.indexOf(\"WebKit\") > -1\r\n\t                    ? 3 + stackOffset // Chrome\r\n\t                    : 1 + stackOffset; // Firefox and Opera\r\n\t                return callStack[index];\r\n\t            } else {\r\n\t                // IE\r\n\t                return \" [IE doesn't provide line number in call stack]\";\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires ValueOf.js\r\n\t * @requires Config.js\r\n\t * @requires ../utils/getCallerLineProvider.js\r\n\t * @requires ../utils/forEach.js\r\n\t */\r\n\t!function (module) {\r\n\t\r\n\t    /**\r\n\t     * After `izi.bind()...` fluent API\r\n\t     * @class Izi.binding.Bind\r\n\t     * @constructor\r\n\t     * @private\r\n\t     * @param {Izi.binding.Config} config\r\n\t     */\r\n\t    var Bind = function Izi_binding_Bind(config) {\r\n\t        this.config = config;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @param source\r\n\t     * @param sourceProperty\r\n\t     * @return {Izi.binding.ValueOf}\r\n\t     * @private\r\n\t     */\r\n\t    Bind.prototype._valueOf = function (source, sourceProperty) {\r\n\t\r\n\t        if (arguments.length > 2) {\r\n\t            sourceProperty = Array.prototype.slice.call(arguments, 1);\r\n\t        }\r\n\t        var config = this.cloneConfig()\r\n\t            .withSource(source)\r\n\t            .withSourceProperties(sourceProperty || \"value\")\r\n\t            .withCallerLineProvider(module.utils.getCallerLineProvider(2));\r\n\t\r\n\t        return new module.binding.ValueOf(config);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Binding source setup.\r\n\t     *\r\n\t     * You can pass directly source instance or object containing source on <strong>delegatedIn</strong> property.\r\n\t     *\r\n\t     *     var model = new User();\r\n\t     *     var wrapper = {\r\n\t     *         delegatedIn: model\r\n\t     *     }\r\n\t     *     izi.bind().valueOf(model, 'firstName');\r\n\t     *\r\n\t     *     // will work also for:\r\n\t     *     izi.bind().valueOf(wrapper, 'firstName');\r\n\t     *\r\n\t     * You can also specify more than one property:\r\n\t     *\r\n\t     *     izi.bind().valueOf(model, 'firstName', 'lastName', 'title');\r\n\t     *\r\n\t     *\r\n\t     * @sanity izi.sanityOf(\"valueOf()\").args(izi.arg(\"source\").ofObject()).args(izi.arg(\"source\").ofObject().havingProperty(\"delegatedIn\")).args(izi.arg(\"source\").ofObject(), izi.varargOf(izi.arg(\"sourceProperty\").ofString())).args(izi.arg(\"source\").ofObject().havingProperty(\"delegatedIn\"), izi.varargOf(izi.arg(\"sourceProperty\").ofString())).check(arguments);\r\n\t     * @member Izi.binding.Bind\r\n\t     * @param {*} source Model or widget\r\n\t     * @param {String...} [sourceProperty=\"value\"] Property name or properties names\r\n\t     * @return {Izi.binding.ValueOf}\r\n\t     */\r\n\t    Bind.prototype.valueOf = function (source, sourceProperty) {\r\n\t        return this._valueOf.apply(this, arguments);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Binding source setup for selected items of lists, grids, etc.\r\n\t     * This is an alias to `this.valueOf(source, \"selectedItems\")`\r\n\t     * You can pass directly model instance or object containing model on <strong>delegatedIn</strong> property.\r\n\t     *\r\n\t     *     var dataGrid = new DataGrid();\r\n\t     *     var wrapper = {\r\n\t     *         delegatedIn: dataGrid\r\n\t     *     }\r\n\t     *     izi.bind().selectedItemsOf(dataGrid);\r\n\t     *\r\n\t     *     // will work also for:\r\n\t     *     izi.bind().selectedItemsOf(wrapper);\r\n\t     *\r\n\t     * @member Izi.binding.Bind\r\n\t     * @sanity izi.sanityOf(\"selectedItemsOf()\").args(izi.arg(\"source\").ofObject()).args(izi.arg(\"source\").ofObject().havingProperty(\"delegatedIn\")).check(arguments);\r\n\t     * @param {*} source Grid, list or any other 'selectedItems' holder\r\n\t     * @return {Izi.binding.ValueOf}\r\n\t     */\r\n\t    Bind.prototype.selectedItemsOf = function (source) {\r\n\t        return this._valueOf(source, \"selectedItems\");\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.binding.Bind\r\n\t     * @private\r\n\t     * @return {Izi.binding.Config}\r\n\t     */\r\n\t    Bind.prototype.cloneConfig = function () {\r\n\t        return new module.binding.Config(this.config.impl)\r\n\t            .withBindings(this.config.bindings)\r\n\t            .withOptions(this.config.options);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Unbind all registered bindings created by one `izi.bind()` instance.\r\n\t     *\r\n\t     *     var model = new User();\r\n\t     *     var firstNameEditor, lastNameEditor;\r\n\t     *\r\n\t     *     var bind = izi.bind();\r\n\t     *\r\n\t     *     bind.valueOf(model, \"firstName\").to().valueOf(firstNameEditor);\r\n\t     *     bind.valueOf(model, \"lastName\").to().valueOf(lastNameEditor);\r\n\t     *\r\n\t     *     bind.unbindAll(); // will stop listening for changes of both properties (firstName and lastName)\r\n\t     *\r\n\t     * @since 1.1.0\r\n\t     * @member Izi.binding.Bind\r\n\t     */\r\n\t    Bind.prototype.unbindAll = function () {\r\n\t        module.utils.forEach(this.config.bindings, function (binding) {\r\n\t            binding.unbind();\r\n\t        })\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Execute manually all registered bindings created by one `izi.bind({auto: false})` instance.\r\n\t     *\r\n\t     *     var model = new User();\r\n\t     *     var firstNameEditor, lastNameEditor;\r\n\t     *\r\n\t     *     var bind = izi.bind();\r\n\t     *\r\n\t     *     bind.valueOf(model, \"firstName\").to().valueOf(firstNameEditor);\r\n\t     *     bind.valueOf(model, \"lastName\").to().valueOf(lastNameEditor);\r\n\t     *\r\n\t     *     bind.executeAll(); // will execute bindings for both properties (firstName and lastName)\r\n\t     *\r\n\t     * @since 1.1.0\r\n\t     * @member Izi.binding.Bind\r\n\t     */\r\n\t    Bind.prototype.executeAll = function () {\r\n\t        module.utils.forEach(this.config.bindings, function (binding) {\r\n\t            binding.execute();\r\n\t        })\r\n\t    };\r\n\t\r\n\t    module.binding.Bind = Bind;\r\n\t\r\n\t}(Izi);\r\n\t!function (module) {\r\n\t    module.binding.impl.createObserver = function (matcher, observer) {\r\n\t        return function () {\r\n\t            return matcher.apply(this, arguments) ? observer : null;\r\n\t        }\r\n\t    };\r\n\t}(Izi);\r\n\t\r\n\t/**\r\n\t * @ignore\r\n\t * @requires createObserver.js\r\n\t */\r\n\t!function(module) {\r\n\t\r\n\t    function matcher(source, sourceProperty, target, targetProperty, transferValueFn) {\r\n\t        return source.iziObserveProperty;\r\n\t    }\r\n\t\r\n\t    function observer(source, sourceProperty, target, targetProperty, transferValueFn) {\r\n\t        return source.iziObserveProperty(sourceProperty, transferValueFn);\r\n\t    }\r\n\t\r\n\t    module.binding.impl.customPropertyObserver = module.binding.impl.createObserver(matcher, observer);\r\n\t}(Izi);\r\n\t!function (module) {\r\n\t    module.binding.impl.createReader = function (matcher, reader) {\r\n\t        return function () {\r\n\t            return matcher.apply(this, arguments) ? reader : null;\r\n\t        }\r\n\t    };\r\n\t}(Izi);\r\n\t!function (module) {\r\n\t    /**\r\n\t     * @member Izi.utils\r\n\t     * @method\r\n\t     * @private\r\n\t     * @param {String} text\r\n\t     * @return {String}\r\n\t     */\r\n\t    module.utils.capitalize = function (text) {\r\n\t        return text.charAt(0).toUpperCase() + text.substr(1);\r\n\t    };\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires capitalize.js\r\n\t */\r\n\t!function (module) {\r\n\t    /**\r\n\t     * @member Izi.utils\r\n\t     * @method\r\n\t     * @since 1.5.0\r\n\t     * @private\r\n\t     * @param {String} name\r\n\t     * @return {String}\r\n\t     */\r\n\t    module.utils.getterOf = function (name) {\r\n\t        return \"get\" + module.utils.capitalize(name);\r\n\t    };\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires createReader.js\r\n\t * @requires ../../utils/getterOf.js\r\n\t * @requires ../../utils/typeOf.js\r\n\t * @requires ../../utils/hasOwnProperty.js\r\n\t */\r\n\t!function (module) {\r\n\t\r\n\t    module.binding.impl.readByGet = function () {\r\n\t\r\n\t        function matcher(object, property) {\r\n\t            return (typeof object.get) === \"function\";\r\n\t        }\r\n\t\r\n\t        function reader(object, property) {\r\n\t            return object.get(property);\r\n\t        }\r\n\t\r\n\t        return module.binding.impl.createReader(matcher, reader);\r\n\t    }();\r\n\t\r\n\t    module.binding.impl.readByCapitalizedGetter = function () {\r\n\t\r\n\t        function reader(object, property) {\r\n\t            return object[module.utils.getterOf(property)]();\r\n\t        }\r\n\t\r\n\t        function matcher(object, property) {\r\n\t            return module.utils.typeOf(property) === \"String\" &&  (typeof object[module.utils.getterOf(property)]) === \"function\";\r\n\t        }\r\n\t\r\n\t        return module.binding.impl.createReader(matcher, reader);\r\n\t    }();\r\n\t\r\n\t    module.binding.impl.readByFunction = function () {\r\n\t\r\n\t        function reader(object, property) {\r\n\t            return object[property]();\r\n\t        }\r\n\t\r\n\t        function matcher(object, property) {\r\n\t            return (typeof object[property] === 'function');\r\n\t        }\r\n\t\r\n\t        return module.binding.impl.createReader(matcher, reader);\r\n\t    }();\r\n\t\r\n\t    module.binding.impl.readFromProperty = function () {\r\n\t\r\n\t        function reader(object, property) {\r\n\t            return object[property];\r\n\t        }\r\n\t\r\n\t        function matcher(object, property) {\r\n\t            return true;\r\n\t        }\r\n\t\r\n\t        return module.binding.impl.createReader(matcher, reader);\r\n\t    }();\r\n\t\r\n\t    module.binding.impl.readFromOwnedProperty = function () {\r\n\t\r\n\t        function reader(object, property) {\r\n\t            return object[property];\r\n\t        }\r\n\t\r\n\t        function matcher(object, property) {\r\n\t            return module.utils.hasOwnProperty(object, property);\r\n\t        }\r\n\t\r\n\t        return module.binding.impl.createReader(matcher, reader);\r\n\t    }();\r\n\t    \r\n\t}(Izi);\r\n\t!function(module) {\r\n\t    module.binding.impl.createWriter = function (matcher, writer) {\r\n\t        return function () {\r\n\t            return matcher.apply(this, arguments) ? writer : null;\r\n\t        }\r\n\t    };\r\n\t}(Izi);\r\n\t\r\n\t/**\r\n\t * @ignore\r\n\t * @requires createWriter.js\r\n\t * @requires ../../utils/capitalize.js\r\n\t * @requires ../../utils/typeOf.js\r\n\t * @requires ../../utils/hasOwnProperty.js\r\n\t */\r\n\t!function(module){\r\n\t\r\n\t    module.binding.impl.writeBySet = function () {\r\n\t\r\n\t        function matcher(object, property) {\r\n\t            return (typeof object.set) === \"function\";\r\n\t        }\r\n\t\r\n\t        function writer(object, property, value) {\r\n\t            object.set(property, value);\r\n\t        }\r\n\t\r\n\t        return module.binding.impl.createWriter(matcher, writer);\r\n\t    }();\r\n\t\r\n\t    module.binding.impl.writeByCapitalizedSetter = function () {\r\n\t\r\n\t        var capitalize = module.utils.capitalize;\r\n\t\r\n\t        function matcher(object, property) {\r\n\t            return module.utils.typeOf(property) === \"String\" &&  (typeof object[\"set\" + capitalize(property)]) === \"function\";\r\n\t        }\r\n\t\r\n\t        function writer(object, property, value) {\r\n\t            object[\"set\" + capitalize(property)](value);\r\n\t        }\r\n\t\r\n\t        return module.binding.impl.createWriter(matcher, writer);\r\n\t    }();\r\n\t\r\n\t    module.binding.impl.writeToProperty = function () {\r\n\t\r\n\t        function matcher(object, property) {\r\n\t            return true;\r\n\t        }\r\n\t\r\n\t        function writer(object, property, value) {\r\n\t            object[property] = value;\r\n\t        }\r\n\t\r\n\t        return module.binding.impl.createWriter(matcher, writer);\r\n\t    }();\r\n\t\r\n\t    module.binding.impl.writeToOwnedProperty = function () {\r\n\t\r\n\t        function matcher(object, property) {\r\n\t            return module.utils.hasOwnProperty(object, property);\r\n\t        }\r\n\t\r\n\t        function writer(object, property, value) {\r\n\t            object[property] = value;\r\n\t        }\r\n\t\r\n\t        return module.binding.impl.createWriter(matcher, writer);\r\n\t    }();\r\n\t\r\n\t    module.binding.impl.writeByFunction = function () {\r\n\t\r\n\t        function matcher(object, property) {\r\n\t            return module.utils.typeOf(object) === 'Function';\r\n\t        }\r\n\t\r\n\t        function writer(fn, scope, value) {\r\n\t            fn.call(scope, value);\r\n\t        }\r\n\t\r\n\t        return module.binding.impl.createWriter(matcher, writer);\r\n\t    }();\r\n\t\r\n\t    module.binding.impl.writeToFunction = function () {\r\n\t\r\n\t        function matcher(object, property) {\r\n\t            return module.utils.typeOf(object[property]) === 'Function';\r\n\t        }\r\n\t\r\n\t        function writer(object, property, value) {\r\n\t            object[property](value);\r\n\t        }\r\n\t\r\n\t        return module.binding.impl.createWriter(matcher, writer);\r\n\t    }();\r\n\t\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires ../../../utils/typeOf.js\r\n\t */\r\n\t!function (module) {\r\n\t\r\n\t    module.binding.impl.nested.isNestedProperty = function Izi_binding_impl_nested_isNestedProperty(property) {\r\n\t        return module.utils.typeOf(property) === \"String\" && property.indexOf(\".\") > -1\r\n\t    }\r\n\t}(Izi);\r\n\t\r\n\t/**\r\n\t * @ignore\r\n\t * @requires isNestedProperty.js\r\n\t * @requires ../createObserver.js\r\n\t * @requires ../../../utils/curry.js\r\n\t */\r\n\t!function (module) {\r\n\t\r\n\t    function matcher(source, sourceProperty, target, targetProperty, transferValueFn) {\r\n\t        return module.binding.impl.nested.isNestedProperty(sourceProperty);\r\n\t    }\r\n\t\r\n\t    function observer(source, sourceProperty, target, targetProperty, transferValueFn) {\r\n\t\r\n\t        var nestedWatcher = source.iziNestedWatchers[sourceProperty];\r\n\t        nestedWatcher.onValueChanged(transferValueFn);\r\n\t\r\n\t        return module.utils.curry(nestedWatcher.stopObserving, nestedWatcher);\r\n\t    }\r\n\t\r\n\t    module.binding.impl.nested.nestedObserver = module.binding.impl.createObserver(matcher, observer);\r\n\t\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires ../../../utils/findClosure.js\r\n\t */\r\n\t!function (module) {\r\n\t\r\n\t    var TargetFinder = function Izi_binding_impl_nested_TargetFinder(path, readers) {\r\n\t        this.path = path.split(\".\");\r\n\t        this.path.pop();\r\n\t        this.readers = readers;\r\n\t    };\r\n\t\r\n\t    TargetFinder.prototype.findFor = function (object) {\r\n\t        var currentObject = object;\r\n\t        for (var i = 0; i < this.path.length; i++) {\r\n\t            var property = this.path[i];\r\n\t\r\n\t            try {\r\n\t                var reader = module.utils.findClosure(this.readers, [currentObject, property, \"targetReader\"]);\r\n\t                currentObject = reader(currentObject, property);\r\n\t                if (!currentObject) {\r\n\t                    break;\r\n\t                }\r\n\t            } catch (e) {\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t\r\n\t        if (i === this.path.length) {\r\n\t            return currentObject;\r\n\t        } else {\r\n\t            return undefined;\r\n\t        }\r\n\t    };\r\n\t\r\n\t    module.binding.impl.nested.TargetFinder = TargetFinder;\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires ../../../utils/findClosure\r\n\t */\r\n\t!function (module){\r\n\t\r\n\t    var TargetWriter = function Izi_binding_impl_nested_TargetWriter(path, writers) {\r\n\t        this.property = path.split(\".\").pop();\r\n\t        this.writers = writers;\r\n\t    };\r\n\t\r\n\t    TargetWriter.prototype.writeValue = function (object, value) {\r\n\t        try {\r\n\t            var writer = module.utils.findClosure(this.writers, [object, this.property, value]);\r\n\t            writer(object, this.property, value);\r\n\t        } catch (e) {\r\n\t        }\r\n\t    };\r\n\t\r\n\t    module.binding.impl.nested.TargetWriter = TargetWriter;\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires isNestedProperty.js\r\n\t * @requires TargetFinder.js\r\n\t * @requires TargetWriter.js\r\n\t * @requires ../../../utils/log.js\r\n\t */\r\n\t!function (module) {\r\n\t\r\n\t    module.binding.impl.nested.nestedWriter = function () {\r\n\t        var impl = this.impl, targetFinder, targetWriter;\r\n\t\r\n\t        function matcher(object, property) {\r\n\t            var result = module.binding.impl.nested.isNestedProperty(property);\r\n\t            if (result) {\r\n\t                targetFinder = new module.binding.impl.nested.TargetFinder(property, impl.valueReaders);\r\n\t                targetWriter = new module.binding.impl.nested.TargetWriter(property, impl.valueWriters);\r\n\t\r\n\t                if (module.isDebug && property.split(\".\").length > 3) {\r\n\t                    module.utils.log(\"[BINDING]\" + this.getCallerLine() + \" Binding target path \\\"\" + property +\"\\\" has more than 3 parts. Consider using .to(function(value) { target.x.y.x = value; }) instead.\");\r\n\t                }\r\n\t            }\r\n\t            return result;\r\n\t        }\r\n\t\r\n\t        function writer(object, property, value) {\r\n\t            var target = targetFinder.findFor(object);\r\n\t\r\n\t            if (target) {\r\n\t                targetWriter.writeValue(target, value);\r\n\t            }\r\n\t        }\r\n\t\r\n\t        return matcher.apply(this, arguments) ? writer : null;\r\n\t    }\r\n\t\r\n\t}(Izi);\r\n\t!function (module) {\r\n\t    module.utils.inherit = function (Child, Parent) {\r\n\t        var Proxy = function () {\r\n\t        };\r\n\t        Proxy.prototype = Parent.prototype;\r\n\t        Child.prototype = new Proxy();\r\n\t        Child.upper = Parent.prototype;\r\n\t        Child.prototype.constructor = Child;\r\n\t    };\r\n\t}(Izi);\r\n\t!function (module) {\r\n\t    /**\r\n\t     * @member Izi.utils\r\n\t     * @method\r\n\t     * @private\r\n\t     * @param {Array} array\r\n\t     * @param {Function} item\r\n\t     * @param {Object} scope\r\n\t     */\r\n\t    module.utils.every = (function () {\r\n\t\r\n\t        function byEvery(array, fn, scope) {\r\n\t            return Array.prototype.every.call(array, fn, scope);\r\n\t        }\r\n\t\r\n\t        function byLoop(array, fn, scope) {\r\n\t\r\n\t            var len = array.length >>> 0;\r\n\t\r\n\t            for (var i = 0; i < len; i++) {\r\n\t                if (i in array && !fn.call(scope, array[i], i, array))\r\n\t                    return false;\r\n\t            }\r\n\t\r\n\t            return true;\r\n\t        }\r\n\t\r\n\t        function hasEvery() {\r\n\t            return (typeof Array.prototype.every) === 'function';\r\n\t        }\r\n\t\r\n\t        return hasEvery() ? byEvery : byLoop;\r\n\t    }());\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires ../utils/forEach.js\r\n\t * @requires ../utils/every.js\r\n\t * @requires ../utils/removeItem.js\r\n\t */\r\n\t!function (module) {\r\n\t\r\n\t    var forEach = module.utils.forEach,\r\n\t        every = module.utils.every;\r\n\t\r\n\t    var Observable = function Izi_model_Observable() {\r\n\t        this.listeners = {};\r\n\t    };\r\n\t\r\n\t    Observable.prototype = {\r\n\t\r\n\t        constructor: Observable,\r\n\t\r\n\t        /**\r\n\t         * @member Izi.model.Observable\r\n\t         * @noSanity\r\n\t         * @param {String} type\r\n\t         * @return {Object[]} array of objects containing fields: 'fn' and 'scope'\r\n\t         */\r\n\t        findListeners: function (type) {\r\n\t\r\n\t            if (this.listeners[type] === undefined) {\r\n\t                this.listeners[type] = [];\r\n\t            }\r\n\t\r\n\t            return this.listeners[type];\r\n\t        },\r\n\t\r\n\t        /**\r\n\t         * @member Izi.model.Observable\r\n\t         * @noSanity\r\n\t         * @param {String} type\r\n\t         * @param {Array|Arguments} [args]\r\n\t         */\r\n\t        dispatchEvent: function (type, args) {\r\n\t            var me = this;\r\n\t            forEach(this.findListeners(type), function (listener) {\r\n\t                listener.fn.apply(listener.scope || me, args || []);\r\n\t            })\r\n\t        },\r\n\t\r\n\t        /**\r\n\t         * @member Izi.model.Observable\r\n\t         * @noSanity\r\n\t         * @param {String} type\r\n\t         * @param {Function} fn\r\n\t         * @param {Object} [scope]\r\n\t         */\r\n\t        addListener: function (type, fn, scope) {\r\n\t            this.findListeners(type).push({fn: fn, scope: scope});\r\n\t        },\r\n\t\r\n\t        /**\r\n\t         * @member Izi.model.Observable\r\n\t         * @noSanity\r\n\t         * @param {String} type\r\n\t         * @param {Function} fn\r\n\t         */\r\n\t        removeListener: function (type, fn) {\r\n\t            var listeners = this.findListeners(type),\r\n\t                listenerToRemove;\r\n\t\r\n\t\r\n\t            every(listeners, function (listener) {\r\n\t                if (listener.fn === fn) {\r\n\t                    listenerToRemove = listener;\r\n\t                    return false;\r\n\t                }\r\n\t                return true;\r\n\t            });\r\n\t\r\n\t            if (listenerToRemove) {\r\n\t                module.utils.removeItem(listeners, listenerToRemove);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t\r\n\t    module.model.Observable = Observable;\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires ../../Binding.js\r\n\t * @requires ../../Config.js\r\n\t * @requires ../../../utils/inherit.js\r\n\t * @requires ../../../model/Observable.js\r\n\t */\r\n\t!function (module) {\r\n\t\r\n\t    function extractFirstField(field) {\r\n\t        if (field.indexOf(\".\") === -1) {\r\n\t            return field;\r\n\t        }\r\n\t        return field.substr(0, field.indexOf(\".\"));\r\n\t    }\r\n\t\r\n\t    function extractNextFields(field) {\r\n\t        if (field.indexOf(\".\") === -1) {\r\n\t            return undefined;\r\n\t        }\r\n\t\r\n\t        return field.substr(field.indexOf(\".\") + 1);\r\n\t    }\r\n\t\r\n\t    var NestedWatcher = function Izi_binding_impl_NestedWatcher(path, bindingImpl) {\r\n\t        this.path = path;\r\n\t        this.bindingImpl = bindingImpl;\r\n\t        this.sourceProperty = extractFirstField(path);\r\n\t\r\n\t        var nextFields = extractNextFields(path);\r\n\t        if (nextFields) {\r\n\t            this.child = new NestedWatcher(nextFields, this.bindingImpl);\r\n\t            this.child.onValueChanged(this.fireChange, this);\r\n\t        }\r\n\t\r\n\t        NestedWatcher.upper.constructor.apply(this);\r\n\t    };\r\n\t\r\n\t    module.utils.inherit(NestedWatcher, module.model.Observable);\r\n\t\r\n\t\r\n\t    NestedWatcher.prototype.setSource = function (source) {\r\n\t        this.stopObserving();\r\n\t        this.source = source;\r\n\t        this.startObserving();\r\n\t    };\r\n\t\r\n\t    NestedWatcher.prototype.onValueChanged = function (callback, scope) {\r\n\t        this.addListener(\"valueChanged\", callback, scope);\r\n\t    };\r\n\t\r\n\t    NestedWatcher.prototype.stopObserving = function () {\r\n\t        if (this.handler) {\r\n\t            this.handler.unbind();\r\n\t        }\r\n\t\r\n\t        if (this.child) {\r\n\t            this.child.stopObserving();\r\n\t        }\r\n\t    };\r\n\t\r\n\t    NestedWatcher.prototype.startObserving = function () {\r\n\t        if (this.source) {\r\n\t            var config = new module.binding.Config(this.bindingImpl)\r\n\t                .withOptions({allowNotWatchable: true})\r\n\t                .withSource(this.source)\r\n\t                .withSourceProperties(this.sourceProperty)\r\n\t                .withTarget(this.valueChanged)\r\n\t                .withTargetProperty(this);\r\n\t            this.handler = new module.binding.Binding(config);\r\n\t        } else {\r\n\t            this.fireChange(undefined);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    NestedWatcher.prototype.valueChanged = function (value) {\r\n\t        if (this.child) {\r\n\t            this.child.setSource(value);\r\n\t        } else {\r\n\t            this.fireChange(value);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    NestedWatcher.prototype.fireChange = function (value) {\r\n\t        this.dispatchEvent(\"valueChanged\", [value]);\r\n\t    };\r\n\t\r\n\t    module.binding.impl.nested.NestedWatcher = NestedWatcher;\r\n\t\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires NestedWatcher.js\r\n\t * @requires isNestedProperty.js\r\n\t * @requires ../createReader.js\r\n\t */\r\n\t!function (module) {\r\n\t\r\n\t    function watchForCurrentValue(object, property, bindingImpl) {\r\n\t        var nestedWatcher;\r\n\t\r\n\t        if (!object.iziNestedWatchers) {\r\n\t            object.iziNestedWatchers = {};\r\n\t        }\r\n\t\r\n\t        if (!object.iziNestedWatchers[property]) {\r\n\t            nestedWatcher = new module.binding.impl.nested.NestedWatcher(property, bindingImpl);\r\n\t            nestedWatcher.onValueChanged(function (value) {\r\n\t                this.currentValue = value;\r\n\t            }, nestedWatcher);\r\n\t            nestedWatcher.setSource(object);\r\n\t            object.iziNestedWatchers[property] = nestedWatcher;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function matcher(bindingImpl) {\r\n\t\r\n\t        return function (object, property, type) {\r\n\t            var isWatchableNestedProperty = type === \"sourceReader\" && module.binding.impl.nested.isNestedProperty(property);\r\n\t\r\n\t            if (isWatchableNestedProperty) {\r\n\t                watchForCurrentValue(object, property, bindingImpl);\r\n\t            }\r\n\t\r\n\t            return isWatchableNestedProperty;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function reader(object, property) {\r\n\t        return object.iziNestedWatchers[property].currentValue;\r\n\t    }\r\n\t\r\n\t    module.binding.impl.nested.nestedReader = function (bindingImpl) {\r\n\t        return module.binding.impl.createReader(matcher(bindingImpl), reader);\r\n\t    };\r\n\t\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires Bind.js\r\n\t * @requires Config.js\r\n\t *\r\n\t * @requires impl/customPropertyObserver.js\r\n\t * @requires impl/genericValueReaders.js\r\n\t * @requires impl/genericValueWriters.js\r\n\t *\r\n\t * @requires impl/nested/nestedObserver.js\r\n\t * @requires impl/nested/nestedWriter.js\r\n\t * @requires impl/nested/nestedReader.js\r\n\t */\r\n\t!function (module) {\r\n\t    /**\r\n\t     * @member Izi.binding\r\n\t     * @method\r\n\t     * @private\r\n\t     * @param {Object} impl\r\n\t     */\r\n\t    module.binding.register = function (impl) {\r\n\t        var nestedImpl = {};\r\n\t        nestedImpl.changeObservers = [module.binding.impl.nested.nestedObserver,\r\n\t                                      module.binding.impl.customPropertyObserver].concat(impl.changeObservers);\r\n\t        nestedImpl.valueWriters = [module.binding.impl.nested.nestedWriter].concat(impl.valueWriters);\r\n\t        nestedImpl.valueReaders = [module.binding.impl.nested.nestedReader(nestedImpl)].concat(impl.valueReaders);\r\n\t\r\n\t        return function (options) {\r\n\t            return new module.binding.Bind(new module.binding.Config(nestedImpl).withOptions(options || {}));\r\n\t        };\r\n\t    };\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires ../utils/curry.js\r\n\t */\r\n\t!function (module) {\r\n\t    var curry = module.utils.curry;\r\n\t\r\n\t    /**\r\n\t     * @class Izi.queue.TimeoutGuard\r\n\t     * @private\r\n\t     * @constructor\r\n\t     * @param {Izi.queue.Queue} queue\r\n\t     */\r\n\t    var TimeoutGuard = function Izi_queue_TimeoutGuard(queue) {\r\n\t        this.queue = queue;\r\n\t        queue.onTaskStarted(this.startCountDown, this);\r\n\t        queue.onTaskFinished(this.stopCountDown, this);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.queue.TimeoutGuard\r\n\t     * @private\r\n\t     * @param event\r\n\t     */\r\n\t    TimeoutGuard.prototype.startCountDown = function (event) {\r\n\t        var timeout = this.queue.timeoutForTask(event.task);\r\n\t        if (timeout > 0) {\r\n\t            this.timeoutId = setTimeout(curry(this.timeoutTask, this), timeout);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.queue.TimeoutGuard\r\n\t     * @private\r\n\t     */\r\n\t    TimeoutGuard.prototype.timeoutTask = function () {\r\n\t        this.queue.currentTaskTimeouted();\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.queue.TimeoutGuard\r\n\t     * @private\r\n\t     */\r\n\t    TimeoutGuard.prototype.stopCountDown = function () {\r\n\t        clearTimeout(this.timeoutId);\r\n\t    };\r\n\t\r\n\t    module.queue.TimeoutGuard = TimeoutGuard;\r\n\t}(Izi);\r\n\t!function (module) {\r\n\t    /**\r\n\t     * @member Izi.utils\r\n\t     * @method\r\n\t     * @private\r\n\t     * @param {Array} array\r\n\t     * @param {Function} item\r\n\t     * @param {Object} scope\r\n\t     */\r\n\t    module.utils.some = (function () {\r\n\t\r\n\t        function bySome(array, fn, scope) {\r\n\t            return Array.prototype.some.call(array, fn, scope);\r\n\t        }\r\n\t\r\n\t        function byLoop(array, fn, scope) {\r\n\t\r\n\t            var len = array.length >>> 0;\r\n\t            if (typeof fn != \"function\")\r\n\t                throw new TypeError();\r\n\t\r\n\t            for (var i = 0; i < len; i++) {\r\n\t                if (i in array && fn.call(scope, array[i], i, array))\r\n\t                    return true;\r\n\t            }\r\n\t\r\n\t            return false;\r\n\t        }\r\n\t\r\n\t        function hasSome() {\r\n\t            return (typeof Array.prototype.some) === 'function';\r\n\t        }\r\n\t\r\n\t        return hasSome() ? bySome : byLoop;\r\n\t    }());\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires forEach.js\r\n\t * @requires some.js\r\n\t * @requires removeItem.js\r\n\t */\r\n\t!function (module) {\r\n\t\r\n\t    var Map = function org_izi_utils_Map() {\r\n\t        this.items = [];\r\n\t    };\r\n\t\r\n\t    Map.prototype.set = function (key, value) {\r\n\t        this.getItemOrCreate(key).value = value;\r\n\t    };\r\n\t\r\n\t    Map.prototype.get = function (key) {\r\n\t        var item = this.getItem(key);\r\n\t        return item ? item.value : undefined;\r\n\t    };\r\n\t\r\n\t    Map.prototype.remove = function (key) {\r\n\t        var item = this.getItem(key);\r\n\t        if (item) {\r\n\t            module.utils.removeItem(this.items, item);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    Map.prototype.getKeys = function () {\r\n\t        var keys = [];\r\n\t        module.utils.forEach(this.items, function (item) {\r\n\t            keys.push(item.key);\r\n\t        });\r\n\t        return keys;\r\n\t    };\r\n\t\r\n\t    Map.prototype.getKeysOf = function (value) {\r\n\t        var keys = [];\r\n\t        module.utils.forEach(this.items, function (item) {\r\n\t            if (item.value === value) {\r\n\t                keys.push(value);\r\n\t            }\r\n\t        });\r\n\t        return keys;\r\n\t    };\r\n\t\r\n\t    Map.prototype.getValues = function () {\r\n\t        var values = [];\r\n\t        module.utils.forEach(this.items, function (item) {\r\n\t            values.push(item.value);\r\n\t        });\r\n\t        return values;\r\n\t    };\r\n\t\r\n\t    Map.prototype.count = function () {\r\n\t        return this.items.length;\r\n\t    };\r\n\t\r\n\t    Map.prototype.countValues = function (value) {\r\n\t        var count = 0;\r\n\t        module.utils.forEach(this.items, function (item) {\r\n\t            if (item.value === value) {\r\n\t                count++;\r\n\t            }\r\n\t        });\r\n\t        return count;\r\n\t    };\r\n\t\r\n\t    Map.prototype.getItemOrCreate = function (key) {\r\n\t        return this.getItem(key) || this.createItem(key);\r\n\t    };\r\n\t\r\n\t    Map.prototype.createItem = function (key) {\r\n\t        var item = {\r\n\t            key: key\r\n\t        };\r\n\t        this.items.push(item);\r\n\t        return item;\r\n\t    };\r\n\t\r\n\t    Map.prototype.getItem = function (key) {\r\n\t        var foundItem = undefined;\r\n\t        module.utils.some(this.items, function (item) {\r\n\t            if (item.key === key) {\r\n\t                foundItem = item;\r\n\t                return true;\r\n\t            }\r\n\t            return false;\r\n\t        });\r\n\t        return foundItem;\r\n\t    };\r\n\t\r\n\t    module.utils.Map = Map;\r\n\t\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires ../model/Observable.js\r\n\t * @requires ../utils/inherit.js\r\n\t */\r\n\t!function (module) {\r\n\t\r\n\t    /**\r\n\t     * @class Izi.queue.SynchronizedFunction\r\n\t     * @private\r\n\t     * @param originalFunction\r\n\t     * @param scope\r\n\t     */\r\n\t    var SynchronizedFunction = function Izi_queue_SynchronizedFunction(originalFunction, scope) {\r\n\t        SynchronizedFunction.upper.constructor.apply(this);\r\n\t        this.originalFunction = originalFunction;\r\n\t        this.scope = scope;\r\n\t        this.logLabel = \"synchronize.onCallback()\";\r\n\t    };\r\n\t    module.utils.inherit(SynchronizedFunction, module.model.Observable);\r\n\t\r\n\t    /**\r\n\t     * @member Izi.queue.SynchronizedFunction\r\n\t     * @private\r\n\t     * @return {Function}\r\n\t     */\r\n\t    SynchronizedFunction.prototype.synchronizedFunction = function () {\r\n\t        try\r\n\t        {\r\n\t            if (this.originalFunction)\r\n\t                return this.originalFunction.apply(this.scope, arguments);\r\n\t        }\r\n\t        finally\r\n\t        {\r\n\t            this.dispatchEvent(\"synchronized\", [this]);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    module.queue.SynchronizedFunction = SynchronizedFunction;\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires ../model/Observable.js\r\n\t * @requires ../utils/inherit.js\r\n\t */\r\n\t!function (module) {\r\n\t\r\n\t    /**\r\n\t     * @class Izi.queue.SynchronizedOnEvent\r\n\t     * @private\r\n\t     * @constructor\r\n\t     * @param {izi} iziApi\r\n\t     * @param {Object} dispatcher\r\n\t     * @param {Array|Arguments} events\r\n\t     */\r\n\t    var SynchronizedOnEvent = function Izi_queue_SynchronizedOnEvent(iziApi, dispatcher, events) {\r\n\t        SynchronizedOnEvent.upper.constructor.apply(this);\r\n\t        var perform = iziApi.perform(this.doSynchronized, this);\r\n\t        this.handler = perform.when.apply(perform, events).on(dispatcher);\r\n\t        this.logLabel = \"synchronize.onEvent()\";\r\n\t    };\r\n\t    module.utils.inherit(SynchronizedOnEvent, module.model.Observable);\r\n\t\r\n\t    /**\r\n\t     * @member Izi.queue.SynchronizedOnEvent\r\n\t     * @private\r\n\t     */\r\n\t    SynchronizedOnEvent.prototype.doSynchronized = function () {\r\n\t        this.handler.stopObserving();\r\n\t        this.dispatchEvent(\"synchronized\", [this]);\r\n\t    };\r\n\t\r\n\t    module.queue.SynchronizedOnEvent = SynchronizedOnEvent;\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires ../model/Observable.js\r\n\t * @requires ../utils/inherit.js\r\n\t */\r\n\t!function (module) {\r\n\t\r\n\t    /**\r\n\t     * @class Izi.queue.SynchronizedResponder\r\n\t     * @private\r\n\t     * @constructor\r\n\t     * @param {Object} responder\r\n\t     * @param {String} [resultFunctionName=\"result\"]\r\n\t     * @param {String} [errorFunctionName=\"error\"]\r\n\t     */\r\n\t    var SynchronizedResponder = function Izi_queue_SynchronizedResponder(responder, resultFunctionName, errorFunctionName) {\r\n\t        SynchronizedResponder.upper.constructor.apply(this);\r\n\t\r\n\t        var me = this;\r\n\t        resultFunctionName = resultFunctionName || \"result\";\r\n\t        errorFunctionName = errorFunctionName || \"error\";\r\n\t\r\n\t        this.synchronizedResponder = {};\r\n\t        this.synchronizedResponder[resultFunctionName] = function () {\r\n\t            try {\r\n\t                responder[resultFunctionName].apply(responder, arguments);\r\n\t            } finally {\r\n\t                me.dispatchEvent(\"synchronized\", [me]);\r\n\t            }\r\n\t        };\r\n\t        this.synchronizedResponder[errorFunctionName] = function () {\r\n\t            try {\r\n\t                responder[errorFunctionName].apply(responder, arguments);\r\n\t            } finally {\r\n\t                me.dispatchEvent(\"synchronized\", [me]);\r\n\t            }\r\n\t        };\r\n\t        this.logLabel = \"synchronize.responder()\";\r\n\t    };\r\n\t\r\n\t    module.utils.inherit(SynchronizedResponder, module.model.Observable);\r\n\t\r\n\t    module.queue.SynchronizedResponder = SynchronizedResponder;\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires ../utils/Map.js\r\n\t * @requires ../utils/curry.js\r\n\t * @requires ../utils/forEach.js\r\n\t * @requires SynchronizedFunction.js\r\n\t * @requires SynchronizedOnEvent.js\r\n\t * @requires SynchronizedResponder.js\r\n\t */\r\n\t!function (module) {\r\n\t\r\n\t    /**\r\n\t     * Synchronizer is a utility that allows you to synchronize current task in the easiest way. Instance of this\r\n\t     * class is available as first argument of `execute()` method when the task is defined as an `Object` or directly\r\n\t     * as first argument of function, when the task is defined as a `Function`:\r\n\t     *\r\n\t     *     var task1 = {\r\n\t     *             execute: function (synchronize) {\r\n\t     *                 // synchronize.onCallback(...)\r\n\t     *                 // synchronize.onEvent(...)\r\n\t     *                 // synchronize.responder(...)\r\n\t     *             }\r\n\t     *         },\r\n\t     *         task2 = function (synchronize) {\r\n\t     *             // synchronize.onCallback(...)\r\n\t     *             // synchronize.onEvent(...)\r\n\t     *             // synchronize.responder(...)\r\n\t     *         }\r\n\t     *     };\r\n\t     *     izi.queue().execute(task1, task2);\r\n\t     *\r\n\t     * When one of:\r\n\t     *\r\n\t     *  * {@link Izi.queue.Synchronizer#onCallback synchronize.onCallback}\r\n\t     *  * {@link Izi.queue.Synchronizer#onEvent synchronize.onEvent}\r\n\t     *  * {@link Izi.queue.Synchronizer#responder synchronize.responder}\r\n\t     *\r\n\t     * is called, it informs the queue that this task calls some asynchronous code, so queue should wait until all asynchronous callbacks\r\n\t     * return. There may be synchronized more than one asynchronous code - the queue will be waiting for all of them.\r\n\t     *\r\n\t     * There is also available access to queue.cancel() method directly in synchronizer:\r\n\t     *\r\n\t     *     var task1 = {\r\n\t     *         execute: function (synchronize) {\r\n\t     *             // store handler of cancelQueue for later execution\r\n\t     *             this.cancelQueue = synchronize.cancelQueue;\r\n\t     *\r\n\t     *             setTimeout(synchronize.onCallback(this.doOnCallback, this), 1000);\r\n\t     *         },\r\n\t     *\r\n\t     *         doOnCallback: function () {\r\n\t     *             if (someCondition) {\r\n\t     *                 this.cancelQueue();\r\n\t     *             }\r\n\t     *         }\r\n\t     *     }\r\n\t     *\r\n\t     *\r\n\t     * @since 1.2.0\r\n\t     * @class Izi.queue.Synchronizer\r\n\t     * @constructor\r\n\t     * @private\r\n\t     * @param {Izi.queue.Queue} queue\r\n\t     */\r\n\t    var Synchronizer = function org_izi_queue_Synchronizer(queue) {\r\n\t        this.queue = queue;\r\n\t        this.synchronizations = new module.utils.Map();\r\n\t        this.awaitedTasks = new module.utils.Map();\r\n\t\r\n\t        /**\r\n\t         * Delegates to queue.cancel()\r\n\t         * @member Izi.queue.Synchronizer\r\n\t         */\r\n\t        this.cancelQueue = function () {\r\n\t            queue.cancel();\r\n\t        }\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Synchronizes the queue after `nonSynchronized` callback will be called by external caller. This method returns\r\n\t     * a closure which executes first `nonSynchronized` function and after that notifies the queue to execute next task.\r\n\t     * If `nonSynchronized` is not given, then queue will just execute next task when callback triggers.\r\n\t     *\r\n\t     * Example 1 - just synchronize on callback\r\n\t     *\r\n\t     *     var task1 = {\r\n\t     *         execute: function(synchronize) {\r\n\t     *             // when setTimeout() callback triggers after 1000ms, then queue will execute `task2`\r\n\t     *             setTimeout(synchronize.onCallback(), 1000);\r\n\t     *         }\r\n\t     *     };\r\n\t     *\r\n\t     *     izi.queue().execute(task1, task2);\r\n\t     *\r\n\t     * Example 2 - synchronize on callback and execute some extra callback code\r\n\t     *\r\n\t     *     var task1 = {\r\n\t     *         execute: function(synchronize) {\r\n\t     *             setTimeout(synchronize.onCallback(this.doOnCallback, this), 1000);\r\n\t     *         }\r\n\t     *\r\n\t     *         doOnCallback: function () {\r\n\t     *             // do some extra code when callback called\r\n\t     *             // after this code the queue will execute `task2`\r\n\t     *         }\r\n\t     *     };\r\n\t     *\r\n\t     *     izi.queue().execute(task1, task2);\r\n\t     *\r\n\t     * @since 1.2.0\r\n\t     * @member Izi.queue.Synchronizer\r\n\t     * @param {Function} [nonSynchronized]\r\n\t     * @param {Object} [scope]\r\n\t     * @return {Function}\r\n\t     */\r\n\t    Synchronizer.prototype.onCallback = function (nonSynchronized, scope) {\r\n\t        var task = this.obtainTask(),\r\n\t            synchronization = new module.queue.SynchronizedFunction(nonSynchronized, scope);\r\n\t\r\n\t        this.recordSynchronization(synchronization, task);\r\n\t\r\n\t        return module.utils.curry(synchronization.synchronizedFunction, synchronization);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Synchronizes the queue when dispatcher will fire an event of given type\r\n\t     *\r\n\t     * Example - synchronize task when user clicks OK button\r\n\t     *\r\n\t     *     var task1 = {\r\n\t     *         alertPopup: new AlertPopup(),\r\n\t     *\r\n\t     *         execute: function(synchronize) {\r\n\t     *             synchronize.onEvent(this.alertPopup.okButton, izi.events.click());\r\n\t     *         }\r\n\t     *     };\r\n\t     *\r\n\t     *     izi.queue().execute(task1, task2);\r\n\t     *\r\n\t     * @since 1.2.0\r\n\t     * @member Izi.queue.Synchronizer\r\n\t     * @param {Object} dispatcher\r\n\t     * @param {String...|Izi.events.EventConfig...} vararg of event types as String or `izi.events.*`\r\n\t     */\r\n\t    Synchronizer.prototype.onEvent = function (dispatcher, event) {\r\n\t        var task = this.obtainTask(),\r\n\t            synchronization = new module.queue.SynchronizedOnEvent(this.queue.iziApi, dispatcher, Array.prototype.slice.call(arguments, 1));\r\n\t        this.recordSynchronization(synchronization, task);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Synchronizes the queue when service triggers the responder either on `result()` or `error()` methods.\r\n\t     * If you have reponder with methods different than `result()` or `error()`, then you can specify the custom ones.\r\n\t     *\r\n\t     * Example - synchronize task when any of `result()` or `error()` methods will be triggered\r\n\t     *\r\n\t     *     var task1 = {\r\n\t     *\r\n\t     *         execute: function(synchronize) {\r\n\t     *             Ajax.request(\"/someUrl\", someParameters, synchronize.responder(this));\r\n\t     *         },\r\n\t     *\r\n\t     *         result: function (ajaxResponse) {\r\n\t     *             // some code for handling Ajax response\r\n\t     *             // after this code the queue will execute `task2`\r\n\t     *         },\r\n\t     *\r\n\t     *         error: function (ajaxFailure) {\r\n\t     *             // some code for handling Ajax error\r\n\t     *             // after this code the queue will execute `task2`\r\n\t     *         },\r\n\t     *     };\r\n\t     *\r\n\t     *     izi.queue().execute(task1, task2);\r\n\t     *\r\n\t     * @since 1.2.0\r\n\t     * @member Izi.queue.Synchronizer\r\n\t     * @param {Object} responder\r\n\t     * @param {String} [resultFunctionName=\"result\"]\r\n\t     * @param {String} [errorFunctionName=\"error\"]\r\n\t     * @return {*}\r\n\t     */\r\n\t    Synchronizer.prototype.responder = function (responder, resultFunctionName, errorFunctionName) {\r\n\t        var task = this.obtainTask(),\r\n\t            synchronization = new module.queue.SynchronizedResponder(responder, resultFunctionName, errorFunctionName);\r\n\t        return this.recordSynchronization(synchronization, task).synchronizedResponder;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.queue.Synchronizer\r\n\t     * @private\r\n\t     * @param synchronization\r\n\t     * @param task\r\n\t     * @return {*}\r\n\t     */\r\n\t    Synchronizer.prototype.recordSynchronization = function (synchronization, task) {\r\n\t        this.queue.log(\"        \" + synchronization.logLabel + \" was used by task: \" + this.queue.getCurrentTaskIndex() + \" of \" + this.queue.countTasks());\r\n\t        this.synchronizations.set(synchronization, task);\r\n\t        synchronization.addListener(\"synchronized\", this.removeSynchronization, this);\r\n\t        return synchronization;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.queue.Synchronizer\r\n\t     * @private\r\n\t     * @param synchronization\r\n\t     */\r\n\t    Synchronizer.prototype.removeSynchronization = function (synchronization) {\r\n\t        var task = this.synchronizations.get(synchronization);\r\n\t        this.synchronizations.remove(synchronization);\r\n\t\r\n\t        var pendingSynchronizationsOnTask = this.countSynchronizations(task);\r\n\t        this.queue.log(\"        \" + synchronization.logLabel + \" completed by task: \" + this.queue.getCurrentTaskIndex() + \" of \" + this.queue.countTasks());\r\n\t        if (pendingSynchronizationsOnTask == 0)\r\n\t            this.taskSynchronized(task);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.queue.Synchronizer\r\n\t     * @private\r\n\t     * @param task\r\n\t     */\r\n\t    Synchronizer.prototype.taskSynchronized = function (task) {\r\n\t        var awaitedTasks = this.awaitedTasks;\r\n\t\r\n\t        var proceedClosure = awaitedTasks.get(task);\r\n\t        if (proceedClosure) {\r\n\t            try {\r\n\t                proceedClosure.fn.apply(proceedClosure.scope);\r\n\t            }\r\n\t            finally {\r\n\t                awaitedTasks.remove(task);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.queue.Synchronizer\r\n\t     * @private\r\n\t     * @param task\r\n\t     * @return {*}\r\n\t     */\r\n\t    Synchronizer.prototype.countSynchronizations = function (task) {\r\n\t        return this.synchronizations.countValues(task);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.queue.Synchronizer\r\n\t     * @private\r\n\t     * @return {*}\r\n\t     */\r\n\t    Synchronizer.prototype.obtainTask = function () {\r\n\t        var task = this.queue.currentTask;\r\n\t        if (!task)\r\n\t            throw new Error(\"There is no task executed. Please use izi.queue().execute(someTask) and use this method.\");\r\n\t        return task;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.queue.Synchronizer\r\n\t     * @private\r\n\t     * @return {boolean}\r\n\t     */\r\n\t    Synchronizer.prototype.hasPendingSynchronizations = function () {\r\n\t        return !!this.synchronizations.count();\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.queue.Synchronizer\r\n\t     * @private\r\n\t     * @param task\r\n\t     * @param proceedClosure\r\n\t     */\r\n\t    Synchronizer.prototype.afterSynchronizingTaskCall = function (task, proceedClosure) {\r\n\t        this.awaitedTasks.set(task, proceedClosure);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.queue.Synchronizer\r\n\t     * @private\r\n\t     * @param task\r\n\t     */\r\n\t    Synchronizer.prototype.taskTimeout = function (task) {\r\n\t        var synchronizations = this.synchronizations,\r\n\t            synchronizationsToRemove = synchronizations.getKeysOf(task);\r\n\t\r\n\t        this.queue.log(\"    Time outed task: \" + this.queue.getCurrentTaskIndex() + \" of \" + this.queue.countTasks());\r\n\t        this.awaitedTasks.remove(task);\r\n\t\r\n\t        module.utils.forEach(synchronizationsToRemove, function (synchronization) {\r\n\t            synchronizations.remove(synchronization);\r\n\t        });\r\n\t    };\r\n\t\r\n\t    module.queue.Synchronizer = Synchronizer;\r\n\t}(Izi);\r\n\t!function (module) {\r\n\t\r\n\t    /**\r\n\t     * @class Izi.queue.GenericTask\r\n\t     * @private\r\n\t     * @constructor\r\n\t     * @param functionToExecute\r\n\t     * @param scope\r\n\t     */\r\n\t    var GenericTask = function Izi_queue_GenericTask(functionToExecute, scope) {\r\n\t        this.functionToExecute = functionToExecute;\r\n\t        this.scope = scope;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.queue.GenericTask\r\n\t     * @private\r\n\t     */\r\n\t    GenericTask.prototype.execute = function () {\r\n\t        this.functionToExecute.apply(this.scope, arguments);\r\n\t    };\r\n\t\r\n\t    module.queue.GenericTask = GenericTask;\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires ../utils/typeOf.js\r\n\t * @requires ../utils/mergeObjects.js\r\n\t * @requires ../utils/forEach.js\r\n\t * @requires ../utils/log.js\r\n\t * @requires TimeoutGuard.js\r\n\t * @requires Synchronizer.js\r\n\t * @requires GenericTask.js\r\n\t */\r\n\t!function (module, global) {\r\n\t\r\n\t    var typeOf = module.utils.typeOf,\r\n\t        mergeObjects = module.utils.mergeObjects,\r\n\t        forEach = module.utils.forEach,\r\n\t        log = module.utils.log,\r\n\t        queueUniqueId = 0;\r\n\t\r\n\t    function formatTimeStamp() {\r\n\t        var now = new Date();\r\n\t        return padding(now.getHours(), 2) +\r\n\t               \":\" +\r\n\t               padding(now.getMinutes(), 2) +\r\n\t               \":\" +\r\n\t               padding(now.getSeconds(), 2) +\r\n\t               \".\" +\r\n\t               padding(now.getMilliseconds(), 3);\r\n\t    }\r\n\t\r\n\t    function padding(value, padding) {\r\n\t        var number = \"\" + value;\r\n\t        return new Array(padding - number.length + 1).join(\"0\") + number;\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * `izi.queue()` allows you to define and execute sequence of synchronous and asynchronous tasks. Task may be defined\r\n\t     * as a `Function` or an `Object` with `execute()` function.\r\n\t     *\r\n\t     *     var taskAsFunction = function () {\r\n\t     *         // some code of task\r\n\t     *     }\r\n\t     *\r\n\t     *     var taskAsObject = {\r\n\t     *         execute: function () {\r\n\t     *             // some code of task\r\n\t     *         }\r\n\t     *     }\r\n\t     *\r\n\t     * Example - two equivalent ways for defining and running the queue:\r\n\t     *\r\n\t     *     izi.queue().execute(task1,\r\n\t     *                         task2,\r\n\t     *                         task3);\r\n\t     *\r\n\t     *     // is a shortcut of:\r\n\t     *     izi.queue().push(task1,\r\n\t     *                      task2,\r\n\t     *                      task3).start();\r\n\t     *\r\n\t     * The second example allows you to define a queue once and run many times and also it allows to add event listeners\r\n\t     * before starting the queue:\r\n\t     *\r\n\t     *     var queue = izi.queue().push(task1,\r\n\t     *                                  task2,\r\n\t     *                                  task3);\r\n\t     *\r\n\t     *     queue.onTaskStarted(doSomethingWhenTaskStarted);\r\n\t     *     queue.onTaskFinished(doSomethingWhenTaskFinished);\r\n\t     *\r\n\t     *     queue.start();\r\n\t     *\r\n\t     * When the task executes some asynchronous code and the queue should wait until it finish - then we can say the task\r\n\t     * is asynchronous and we need to notify somehow the queue to not execute next task immediately. This problem is\r\n\t     * solved by usage of **{@link Izi.queue.Synchronizer synchronize}** argument passed to each task, like in example below:\r\n\t     *\r\n\t     *     var asynchronousTask = {\r\n\t     *         execute: function (synchronize) {\r\n\t     *             setTimeout(synchronize.onCallback(), 1000);\r\n\t     *         }\r\n\t     *     };\r\n\t     *     var synchronousTask = {\r\n\t     *         execute: function () {\r\n\t     *             // do some synchronous code\r\n\t     *         }\r\n\t     *     }\r\n\t     *\r\n\t     *     izi.queue().execute(asynchronousTask,\r\n\t     *                         synchronousTask);\r\n\t     *\r\n\t     * You can find more synchronization methods in {@link Izi.queue.Synchronizer} documentation\r\n\t     *\r\n\t     * @class Izi.queue.Queue\r\n\t     * @since 1.2.0\r\n\t     * @constructor\r\n\t     * @private\r\n\t     * @param {Object} impl framework queue implementation\r\n\t     * @param {Object} config queue configuration\r\n\t     * @param {izi} iziApi\r\n\t     */\r\n\t    var Queue = function Izi_queue_Queue(impl, config, iziApi) {\r\n\t        var defaultConfig = {\r\n\t            scope: global,\r\n\t            defaultTimeout: 0,\r\n\t            debug: undefined\r\n\t        };\r\n\t\r\n\t        this.config = mergeObjects(defaultConfig, config);\r\n\t        this.iziApi = iziApi;\r\n\t        this.queue = [];\r\n\t        this.originalQueue = [];\r\n\t        if (this.config.debug) {\r\n\t            queueUniqueId++;\r\n\t            this.id = this.config.debug + \":\" + queueUniqueId;\r\n\t        }\r\n\t\r\n\t        this.delegatedIn = impl.createEventDispatcher();\r\n\t        this.dispatchEvent = impl.dispatchEvent;\r\n\t\r\n\t        this.synchronizer = new module.queue.Synchronizer(this);\r\n\t        new module.queue.TimeoutGuard(this);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Enqueue all given functions and tasks (object with execute function), and execute them sequentially\r\n\t     *\r\n\t     * @since 1.2.0\r\n\t     * @member Izi.queue.Queue\r\n\t     * @param {Function...|Object~execute()...} vararg of tasks or functions\r\n\t     * @return {Izi.queue.Queue}\r\n\t     */\r\n\t    Queue.prototype.execute = function () {\r\n\t        this.pushAll(arguments);\r\n\t        this.start();\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Enqueue all given functions and tasks (object with execute function)\r\n\t     *\r\n\t     * @since 1.2.0\r\n\t     * @member Izi.queue.Queue\r\n\t     * @param {Function...|Object~execute...} vararg of tasks or functions\r\n\t     * @return {Izi.queue.Queue}\r\n\t     */\r\n\t    Queue.prototype.push = function () {\r\n\t        this.pushAll(arguments);\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Start executing tasks synchronously\r\n\t     *\r\n\t     * @since 1.2.0\r\n\t     * @member Izi.queue.Queue\r\n\t     * @return {Izi.queue.Queue}\r\n\t     */\r\n\t    Queue.prototype.start = function () {\r\n\t        if (this.isExecutedTask()) {\r\n\t            throw new Error(\"Can't start already started queue until it's finished\");\r\n\t        }\r\n\t\r\n\t        this.queue = this.originalQueue.slice();\r\n\t        this.log(\"Queue started. Total tasks to execute: \" + this.countTasks());\r\n\t        this.proceed();\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Cancel executing tasks.\r\n\t     *\r\n\t     * @since 1.2.0\r\n\t     * @member Izi.queue.Queue\r\n\t     */\r\n\t    Queue.prototype.cancel = function () {\r\n\t        this.log(\"Queue canceled at executing task: \" + this.getCurrentTaskIndex() + \" of \" + this.countTasks());\r\n\t        this.dispatchTaskEvent(\"queueCanceled\", true);\r\n\t        this.queue = [];\r\n\t        this.clearAndProceed();\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Add \"taskStarted\" event listener\r\n\t     *\r\n\t     * @since 1.2.0\r\n\t     * @param {Function} fn\r\n\t     * @param {Object} [scope]\r\n\t     * @return {Izi.behavior.OnWidget}\r\n\t     */\r\n\t    Queue.prototype.onTaskStarted = function (fn, scope) {\r\n\t        return this.iziApi.perform(fn, scope || global).when(\"taskStarted\").on(this);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Add \"taskFinished\" event listener\r\n\t     *\r\n\t     * @since 1.2.0\r\n\t     * @param {Function} fn\r\n\t     * @param {Object} [scope]\r\n\t     * @return {Izi.behavior.OnWidget}\r\n\t     */\r\n\t    Queue.prototype.onTaskFinished = function (fn, scope) {\r\n\t        return this.iziApi.perform(fn, scope || global).when(\"taskFinished\").on(this);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Add \"taskTimeouted\" event listener\r\n\t     *\r\n\t     * @since 1.2.0\r\n\t     * @param {Function} fn\r\n\t     * @param {Object} [scope]\r\n\t     * @return {Izi.behavior.OnWidget}\r\n\t     */\r\n\t    Queue.prototype.onTaskTimeouted = function (fn, scope) {\r\n\t        return this.iziApi.perform(fn, scope || global).when(\"taskTimeouted\").on(this);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Add \"queueFinished\" event listener\r\n\t     *\r\n\t     * @since 1.2.0\r\n\t     * @param {Function} fn\r\n\t     * @param {Object} [scope]\r\n\t     * @return {Izi.behavior.OnWidget}\r\n\t     */\r\n\t    Queue.prototype.onQueueFinished = function (fn, scope) {\r\n\t        return this.iziApi.perform(fn, scope || global).when(\"queueFinished\").on(this);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Add \"queueCanceled\" event listener\r\n\t     *\r\n\t     * @since 1.2.0\r\n\t     * @param {Function} fn\r\n\t     * @param {Object} [scope]\r\n\t     * @return {Izi.behavior.OnWidget}\r\n\t     */\r\n\t    Queue.prototype.onQueueCanceled = function (fn, scope) {\r\n\t        return this.iziApi.perform(fn, scope || global).when(\"queueCanceled\").on(this);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.queue.Queue\r\n\t     * @private\r\n\t     * @param tasksOrFunctions\r\n\t     */\r\n\t    Queue.prototype.pushAll = function (tasksOrFunctions) {\r\n\t        var me = this;\r\n\t\r\n\t        forEach(tasksOrFunctions, function (taskOrFunction, index) {\r\n\t\r\n\t            if (typeOf(taskOrFunction) === 'Function') {\r\n\t                me.pushFunction(taskOrFunction);\r\n\t            } else if (typeOf(taskOrFunction) === 'Object' && typeOf(taskOrFunction.execute) === 'Function') {\r\n\t                me.pushTask(taskOrFunction);\r\n\t            } else {\r\n\t                throw new Error(\"Invalid queue element given at index: \" + index + \". Expected Function or Object with execute() function.\");\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.queue.Queue\r\n\t     * @private\r\n\t     * @param task\r\n\t     */\r\n\t    Queue.prototype.pushTask = function (task) {\r\n\t        this.originalQueue.push(task);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.queue.Queue\r\n\t     * @private\r\n\t     * @param fn\r\n\t     */\r\n\t    Queue.prototype.pushFunction = function (fn) {\r\n\t        this.pushTask(new module.queue.GenericTask(fn, this.getScope()));\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.queue.Queue\r\n\t     * @private\r\n\t     * @return {*}\r\n\t     */\r\n\t    Queue.prototype.getScope = function () {\r\n\t        return this.config.scope;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.queue.Queue\r\n\t     * @private\r\n\t     */\r\n\t    Queue.prototype.proceed = function () {\r\n\t        if (this.isExecutedTask())\r\n\t            return;\r\n\t\r\n\t        if (this.isEmptyQueue()) {\r\n\t            this.log(\"\");\r\n\t            this.log(\"Queue finished\");\r\n\t            this.dispatchTaskEvent(\"queueFinished\");\r\n\t            return;\r\n\t        }\r\n\t\r\n\t        this.executeSynchronously(this.queue.shift());\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.queue.Queue\r\n\t     * @private\r\n\t     * @return {boolean}\r\n\t     */\r\n\t    Queue.prototype.isEmptyQueue = function () {\r\n\t        return this.queue.length === 0\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.queue.Queue\r\n\t     * @private\r\n\t     * @return {boolean}\r\n\t     */\r\n\t    Queue.prototype.isExecutedTask = function () {\r\n\t        return !!this.currentTask;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.queue.Queue\r\n\t     * @private\r\n\t     * @param task\r\n\t     */\r\n\t    Queue.prototype.executeSynchronously = function (task) {\r\n\t        this.currentTask = task;\r\n\t        this.log(\"\");\r\n\t        this.log(\"    Task started: \" + this.getCurrentTaskIndex() + \" of \" + this.countTasks());\r\n\t        this.dispatchTaskEvent(\"taskStarted\", true);\r\n\t        task.execute(this.synchronizer);\r\n\t        this.awaitSynchronizerOrProceed();\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.queue.Queue\r\n\t     * @private\r\n\t     */\r\n\t    Queue.prototype.awaitSynchronizerOrProceed = function () {\r\n\t        if (this.synchronizer.hasPendingSynchronizations()) {\r\n\t            this.synchronizer.afterSynchronizingTaskCall(this.currentTask, {fn: this.taskSynchronized, scope: this});\r\n\t        }\r\n\t        else {\r\n\t            this.log(\"        No synchronizations used by task: \" + this.getCurrentTaskIndex() + \" of \" + this.countTasks());\r\n\t            this.taskSynchronized();\r\n\t        }\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.queue.Queue\r\n\t     * @private\r\n\t     */\r\n\t    Queue.prototype.taskSynchronized = function () {\r\n\t        this.log(\"    Task finished: \" + this.getCurrentTaskIndex() + \" of \" + this.countTasks());\r\n\t        this.dispatchTaskEvent(\"taskFinished\", true);\r\n\t        this.clearAndProceed();\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.queue.Queue\r\n\t     * @private\r\n\t     */\r\n\t    Queue.prototype.clearAndProceed = function () {\r\n\t        this.currentTask = undefined;\r\n\t        this.proceed();\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.queue.Queue\r\n\t     * @private\r\n\t     * @param type\r\n\t     * @param addStatistics\r\n\t     */\r\n\t    Queue.prototype.dispatchTaskEvent = function (type, addStatistics) {\r\n\t        var event = {\r\n\t            type: type,\r\n\t            queue: this,\r\n\t            task: this.currentTask\r\n\t        };\r\n\t        if (addStatistics) {\r\n\t            event.currentTask = this.getCurrentTaskIndex();\r\n\t            event.totalTasks = this.countTasks();\r\n\t        }\r\n\t        this.dispatchEvent(this.delegatedIn, type, event)\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.queue.Queue\r\n\t     * @private\r\n\t     * @return {number}\r\n\t     */\r\n\t    Queue.prototype.getCurrentTaskIndex = function () {\r\n\t        return this.originalQueue.length - this.queue.length;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.queue.Queue\r\n\t     * @private\r\n\t     * @return {Number}\r\n\t     */\r\n\t    Queue.prototype.countTasks = function () {\r\n\t        return this.originalQueue.length;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.queue.Queue\r\n\t     * @private\r\n\t     * @param task\r\n\t     * @return {Number}\r\n\t     */\r\n\t    Queue.prototype.timeoutForTask = function (task) {\r\n\t        // todo - specific timeouts for tasks\r\n\t        return this.config.defaultTimeout;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.queue.Queue\r\n\t     * @private\r\n\t     */\r\n\t    Queue.prototype.currentTaskTimeouted = function () {\r\n\t        this.synchronizer.taskTimeout(this.currentTask);\r\n\t        this.dispatchTaskEvent(\"taskTimeouted\", true);\r\n\t        this.clearAndProceed();\r\n\t    };\r\n\t\r\n\t    Queue.prototype.log = function (message) {\r\n\t        if (this.config.debug) {\r\n\t            log(\"[izi.queue:\" + this.id + \"] \" + formatTimeStamp() + \" \" + message);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    module.queue.Queue = Queue;\r\n\t\r\n\t}(Izi, this);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires Queue.js\r\n\t */\r\n\t!function (module) {\r\n\t    /**\r\n\t     * @member Izi.binding\r\n\t     * @method\r\n\t     * @private\r\n\t     * @param {Object} impl\r\n\t     * @param {izi} iziApi\r\n\t     */\r\n\t    module.queue.register = function (impl, iziApi) {\r\n\t\r\n\t        return function (config) {\r\n\t            return new module.queue.Queue(impl, config, iziApi);\r\n\t        };\r\n\t    };\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires indexOf.js\r\n\t */\r\n\t!function (module) {\r\n\t    /**\r\n\t     * @member Izi.utils\r\n\t     * @method\r\n\t     * @private\r\n\t     * @param {Array} array\r\n\t     * @param {*} item\r\n\t     * @return {Boolean}\r\n\t     */\r\n\t    module.utils.arrayContains = function (array, item) {\r\n\t        return module.utils.indexOf(array, item) !== -1;\r\n\t    };\r\n\t}(Izi);\r\n\t!function (module) {\r\n\t    /**\r\n\t     * @param {String} classString\r\n\t     * @private\r\n\t     * @constructor\r\n\t     */\r\n\t    module.utils.ClassNotFound = function (classString) {\r\n\t        this.message = \"Class name given as string: \\\"\" + classString + \"\\\" couldn't be resolved as a class\";\r\n\t    };\r\n\t\r\n\t    module.utils.ClassNotFound.prototype = new Error();\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires forEach.js\r\n\t * @requires ClassNotFound.js\r\n\t */\r\n\t!function (module) {\r\n\t    /**\r\n\t     * @member Izi.utils\r\n\t     * @method\r\n\t     * @private\r\n\t     * @param {String} classString\r\n\t     * @param {Object} globals\r\n\t     * @return {Function}\r\n\t     */\r\n\t    module.utils.getClassByName = function (classString, globals) {\r\n\t        var currentPart,\r\n\t            parts = classString.split(\".\");\r\n\t        currentPart = globals;\r\n\t\r\n\t        module.utils.forEach(parts, function (part) {\r\n\t            var nextPart = currentPart[part];\r\n\t            if (nextPart === undefined) {\r\n\t                throw new module.utils.ClassNotFound(classString);\r\n\t            }\r\n\t            currentPart = nextPart;\r\n\t        });\r\n\t\r\n\t        return currentPart;\r\n\t    };\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires ../utils/typeOf.js\r\n\t * @requires ../utils/getClassByName.js\r\n\t */\r\n\t!function (module) {\r\n\t\r\n\t    /**\r\n\t     * Configuration used in IoC/DI fluent API\r\n\t     * @class Izi.ioc.Config\r\n\t     * @constructor\r\n\t     * @private\r\n\t     * @param {Function|String|Object} Class Class constructor, dotted class definition string or ready instance of bean\r\n\t     * @param {Function} Strategy Strategy constructor\r\n\t     * @param {Object} globals\r\n\t     */\r\n\t    var Config = function Izi_ioc_Config(Class, Strategy, globals) {\r\n\t        this.Clazz = this._resolveClass(Class, globals);\r\n\t        this.Strategy = Strategy;\r\n\t        this.args = [];\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.ioc.Config\r\n\t     * @private\r\n\t     * @return {*}\r\n\t     */\r\n\t    Config.prototype.createStrategy = function () {\r\n\t        return new this.Strategy(this);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.ioc.Config\r\n\t     * @private\r\n\t     * @return {Array}\r\n\t     */\r\n\t    Config.prototype.getArguments = function () {\r\n\t        return this.args;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.ioc.Config\r\n\t     * @private\r\n\t     * @return {Array}\r\n\t     */\r\n\t    Config.prototype.getProperties = function () {\r\n\t        return this.props;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.ioc.Config\r\n\t     * @private\r\n\t     * @return {Function|String|Object}\r\n\t     */\r\n\t    Config.prototype.getClazz = function () {\r\n\t        return this.Clazz;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Arguments that will be used to object creation. It accept also {@link izi#inject izi.inject()} values.\r\n\t     *     izi.bakeBeans({\r\n\t     *         bean: izi.instantiate(Class).withArgs(\"Value\", izi.inject(\"beanId\")\r\n\t     *     });\r\n\t     *\r\n\t     * @member Izi.ioc.Config\r\n\t     * @noSanity\r\n\t     * @param {Object...|Izi.ioc.Injection...} vararg arguments\r\n\t     * @return {Izi.ioc.Config}\r\n\t     */\r\n\t    Config.prototype.withArgs = function () {\r\n\t        if (arguments.length > 10) {\r\n\t            throw new Error(\"Too many arguments passed. Ten arguments is maximum.\");\r\n\t        }\r\n\t\r\n\t        this.args = arguments;\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Properties that will be used to overwrite on created bean. It accept also {@link izi#inject izi.inject()} values.\r\n\t     *     izi.bakeBeans({\r\n\t     *         bean: izi.instantiate(Class).withProps({field1: \"Value 1\", field2: izi.inject(\"beanId\")})\r\n\t     *     });\r\n\t     *\r\n\t     * @member Izi.ioc.Config\r\n\t     * @noSanity\r\n\t     * @param {Object} props Map of property=>value used to overwrite on bean\r\n\t     * @return {Izi.ioc.Config}\r\n\t     */\r\n\t    Config.prototype.withProps = function (props) {\r\n\t        this.props = props;\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    Config.prototype._resolveClass = function (Class, globals) {\r\n\t        if (module.utils.typeOf(Class) === \"String\") {\r\n\t            Class = module.utils.getClassByName(Class, globals);\r\n\t        }\r\n\t        return Class;\r\n\t    };\r\n\t\r\n\t    module.ioc.Config = Config;\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires ../../utils/forEach.js\r\n\t * @requires ../../utils/some.js\r\n\t * @requires ../../utils/getClassByName.js\r\n\t */\r\n\t!function (module) {\r\n\t\r\n\t    function matchesById(selfId, otherId) {\r\n\t        return selfId === otherId;\r\n\t    }\r\n\t\r\n\t    function matchesByType(factory, type) {\r\n\t        return factory.matchesByType(type);\r\n\t    }\r\n\t\r\n\t    function injectDependenciesOnProperties(context, bean) {\r\n\t        var prop;\r\n\t        bean.iziInjectingInProgress = true;\r\n\t        for (prop in bean) {\r\n\t            var injection = bean[prop];\r\n\t            if (injection && injection.isIziInjection) {\r\n\t                injection.injector(bean, prop, injection.resolveBean(context));\r\n\t            }\r\n\t        }\r\n\t        delete bean.iziInjectingInProgress;\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * Bean instance builder based on given strategy.\r\n\t     * @class Izi.ioc.bean.BeanBuilder\r\n\t     * @private\r\n\t     * @constructor\r\n\t     * @param {String} id\r\n\t     * @param {Object} strategy\r\n\t     * @param {Function} strategy.init\r\n\t     * @param {Function} strategy.create\r\n\t     * @param {Function} strategy.matchesByType\r\n\t     * @param {Function} strategy.getArguments\r\n\t     * @param {Object} globals\r\n\t     */\r\n\t    var BeanBuilder = function Izi_ioc_bean_BeanBuilder(id, strategy, globals) {\r\n\t        this.id = id;\r\n\t        this.strategy = strategy;\r\n\t        this.globals = globals;\r\n\t        this.createdBeans = [];\r\n\t        if (!globals) {\r\n\t            throw new Error(\"`globals` not defined\");\r\n\t        }\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Delegates init on strategy\r\n\t     * @member Izi.ioc.bean.BeanBuilder\r\n\t     * @private\r\n\t     * @param beansContext\r\n\t     * @return {*}\r\n\t     */\r\n\t    BeanBuilder.prototype.init = function (beansContext) {\r\n\t        return this.strategy.init(beansContext);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Delegates create on strategy\r\n\t     * @member Izi.ioc.bean.BeanBuilder\r\n\t     * @private\r\n\t     * @param context\r\n\t     * @return {*}\r\n\t     */\r\n\t    BeanBuilder.prototype.create = function (context) {\r\n\t        var bean = this.strategy.create(context);\r\n\t\r\n\t        if (bean.iziInjectingInProgress) {\r\n\t            return bean;\r\n\t        }\r\n\t\r\n\t        injectDependenciesOnProperties(context, bean);\r\n\t\r\n\t        if (bean.iziContext && !bean.iziContextCalled) {\r\n\t            bean.iziContextCalled = true;\r\n\t            bean.iziContext(context);\r\n\t        }\r\n\t        if (bean.iziInit && !bean.iziInitCalled) {\r\n\t            bean.iziInitCalled = true;\r\n\t            bean.iziInit();\r\n\t        }\r\n\t\r\n\t        this.createdBeans.push(bean);\r\n\t\r\n\t        return bean;\r\n\t    };\r\n\t\r\n\t    BeanBuilder.prototype.destroyCreatedBeans = function () {\r\n\t        module.utils.forEach(this.createdBeans, function (createdBean) {\r\n\t            if (createdBean.iziDestroy) {\r\n\t                try {\r\n\t                    createdBean.iziDestroy();\r\n\t                } catch (e) {\r\n\t                }\r\n\t            }\r\n\t        });\r\n\t\r\n\t        this.id = undefined;\r\n\t        this.strategy = undefined;\r\n\t        this.createdBeans = undefined;\r\n\t    };\r\n\t\r\n\t    BeanBuilder.prototype.preDestroyCreatedBeans = function () {\r\n\t        module.utils.forEach(this.createdBeans, function (createdBean) {\r\n\t            if (createdBean.iziPreDestroy) {\r\n\t                createdBean.iziPreDestroy();\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Matches factory by id or class type\r\n\t     * @member Izi.ioc.bean.BeanBuilder\r\n\t     * @private\r\n\t     * @param {String|Function} idOrType\r\n\t     * @return {Boolean}\r\n\t     */\r\n\t    BeanBuilder.prototype.matches = function (idOrType) {\r\n\t        if ((typeof idOrType) === \"string\") {\r\n\t            return idOrType.indexOf(\".\") !== -1\r\n\t                ? matchesByType(this.strategy, module.utils.getClassByName(idOrType, this.globals))\r\n\t                : matchesById(this.id, idOrType);\r\n\t        } else {\r\n\t            return matchesByType(this.strategy, idOrType);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Matches whether bean has been created by this bean builder\r\n\t     * @member Izi.ioc.bean.BeanBuilder\r\n\t     * @private\r\n\t     * @param {Object} bean\r\n\t     * @return {Boolean}\r\n\t     */\r\n\t    BeanBuilder.prototype.matchesBeanInstance = function (bean) {\r\n\t        return module.utils.some(this.createdBeans || [], function (createdBean) {\r\n\t            return createdBean === bean;\r\n\t        });\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Get bean factories that are set as argument dependencies\r\n\t     * @member Izi.ioc.bean.BeanBuilder\r\n\t     * @private\r\n\t     * @param context\r\n\t     * @return {*}\r\n\t     */\r\n\t    BeanBuilder.prototype.getArgumentsDependencies = function (context) {\r\n\t\r\n\t        function findArgumentsDependencies(args) {\r\n\t            var results = [];\r\n\t            module.utils.forEach(args, function (arg) {\r\n\t                if (arg && arg.isIziInjection) {\r\n\t                    results.push(arg.findBeanBuilder(context));\r\n\t                }\r\n\t            });\r\n\t            return results;\r\n\t        }\r\n\t\r\n\t        return findArgumentsDependencies(this.strategy.getArguments());\r\n\t    };\r\n\t\r\n\t    module.ioc.bean.BeanBuilder = BeanBuilder;\r\n\t}(Izi);\r\n\t!function(module){\r\n\t    /**\r\n\t     * Ready instance strategy used in {@link Izi.ioc.bean.BeanBuilder}\r\n\t     * @class Izi.ioc.bean.InstanceStrategy\r\n\t     * @private\r\n\t     * @constructor\r\n\t     * @param {*} instance\r\n\t     */\r\n\t    var InstanceStrategy = function Izi_ioc_bean_InstanceStrategy(instance) {\r\n\t        this.instance = instance;\r\n\t    };\r\n\t\r\n\t    InstanceStrategy.prototype.init = function (beansContext) {\r\n\t        return this.instance;\r\n\t    };\r\n\t\r\n\t    InstanceStrategy.prototype.create = function (beansContext) {\r\n\t        return this.instance;\r\n\t    };\r\n\t\r\n\t    InstanceStrategy.prototype.matchesByType = function (type) {\r\n\t        return this.instance instanceof type;\r\n\t    };\r\n\t\r\n\t    InstanceStrategy.prototype.getArguments = function () {\r\n\t        return [];\r\n\t    };\r\n\t\r\n\t    module.ioc.bean.InstanceStrategy = InstanceStrategy;\r\n\t}(Izi);\r\n\t!function(module) {\r\n\t    /**\r\n\t     * @private\r\n\t     * @param {String|Function} beanIdOrType\r\n\t     * @constructor\r\n\t     */\r\n\t    module.ioc.bean.NoBeanMatched = function (beanIdOrType) {\r\n\t        this.message = \"No bean matched: \" + beanIdOrType;\r\n\t    };\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires ../utils/typeOf.js\r\n\t * @requires ../utils/forEach.js\r\n\t * @requires ../utils/hasOwnProperty.js\r\n\t * @requires ../utils/every.js\r\n\t * @requires ../utils/removeItem.js\r\n\t * @requires ../model/Observable.js\r\n\t * @requires Config.js\r\n\t * @requires bean/BeanBuilder.js\r\n\t * @requires bean/InstanceStrategy.js\r\n\t * @requires bean/NoBeanMatched.js\r\n\t */\r\n\t!function (module) {\r\n\t\r\n\t    function normalizeBeans(beans) {\r\n\t        if (module.utils.typeOf(beans) === 'Array') {\r\n\t            return mergeBeans(beans);\r\n\t        } else {\r\n\t            return beans;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function mergeBeans(beansCollection) {\r\n\t        var result = {};\r\n\t        module.utils.forEach(beansCollection, function (beans) {\r\n\t            iterateOwnProperties(beans, function (key, value) {\r\n\t                if (result[key] === undefined) {\r\n\t                    result[key] = value;\r\n\t                } else {\r\n\t                    throw new Error('Found duplicated bean ID: \"' + key + '\" in multiple configurations');\r\n\t                }\r\n\t            });\r\n\t        });\r\n\t        return result;\r\n\t    }\r\n\t\r\n\t    function iterateOwnProperties(object, callback) {\r\n\t        for (var key in object) {\r\n\t            if (module.utils.hasOwnProperty(object, key)) {\r\n\t                callback(key, object[key]);\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function createBeansBuilders(beans, beansBuilders, globals) {\r\n\t        var beanId, beanConfig, beanBuilder;\r\n\t\r\n\t        for (beanId in beans) {\r\n\t            if (module.utils.hasOwnProperty(beans, beanId)) {\r\n\t                beanConfig = beans[beanId];\r\n\t\r\n\t                if (beanConfig instanceof module.ioc.Config) {\r\n\t                    beanBuilder = new module.ioc.bean.BeanBuilder(beanId, beanConfig.createStrategy(), globals);\r\n\t                } else if (module.utils.typeOf(beanConfig) === \"Function\") {\r\n\t                    var config = new module.ioc.Config(beanConfig, module.ioc.bean.SingletonStrategy, globals);\r\n\t                    beanBuilder = new module.ioc.bean.BeanBuilder(beanId, config.createStrategy(), globals);\r\n\t                } else {\r\n\t                    beanBuilder = new module.ioc.bean.BeanBuilder(beanId, new module.ioc.bean.InstanceStrategy(beanConfig), globals);\r\n\t                }\r\n\t\r\n\t                beansBuilders.push(beanBuilder);\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function findCircularDependencies(beansContext, beanBuilder) {\r\n\t\r\n\t        function visitDependencies(visitedBuilder) {\r\n\t            var dependencies = visitedBuilder.getArgumentsDependencies(beansContext);\r\n\t\r\n\t            module.utils.forEach(dependencies, function (dependency) {\r\n\t                if (dependency === beanBuilder) {\r\n\t                    throw new Error(\"Circular dependencies found. If it is possible try inject those dependencies by properties instead by arguments.\");\r\n\t                }\r\n\t                visitDependencies(dependency);\r\n\t            });\r\n\t        }\r\n\t\r\n\t        visitDependencies(beanBuilder);\r\n\t    }\r\n\t\r\n\t    function initBean(beansContext, beanBuilder) {\r\n\t        findCircularDependencies(beansContext, beanBuilder);\r\n\t        return beanBuilder.init(beansContext);\r\n\t    }\r\n\t\r\n\t    function initAllBeans(beansContext, beansBuilders) {\r\n\t        var bean, beansToCreate = [];\r\n\t\r\n\t        module.utils.forEach(beansBuilders, function (beanBuilder) {\r\n\t            bean = initBean(beansContext, beanBuilder);\r\n\t            if (bean) {\r\n\t                beansToCreate.push(beanBuilder);\r\n\t            }\r\n\t        });\r\n\t\r\n\t        module.utils.forEach(beansToCreate, function (beanToCreate) {\r\n\t            beanToCreate.create(beansContext);\r\n\t        });\r\n\t    }\r\n\t\r\n\t    function createPreDestroyEvent() {\r\n\t        return {\r\n\t\r\n\t            isPrevented: false,\r\n\t\r\n\t            isDestroyPrevented: function () {\r\n\t                return this.isPrevented;\r\n\t            },\r\n\t\r\n\t            preventDestroy: function () {\r\n\t                this.isPrevented = true;\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * @ignore\r\n\t     * @param {Izi.ioc.BeansContext} beansContext\r\n\t     */\r\n\t    function handleDestroyFromParentContext(beansContext) {\r\n\t        var parentContext = beansContext.parentContext,\r\n\t            childrenDispatcher = beansContext.destroyDispatcher,\r\n\t            parentDispatcher = parentContext && parentContext.destroyDispatcher;\r\n\t\r\n\t        if (!parentDispatcher) {\r\n\t            return;\r\n\t        }\r\n\t\r\n\t        function handlePreDestroy(event) {\r\n\t            childrenDispatcher.dispatchEvent(\"preDestroy\", arguments);\r\n\t            if (event.isDestroyPrevented()) {\r\n\t                return;\r\n\t            }\r\n\t\r\n\t            var shouldDestroy = beansContext.doPreDestroy();\r\n\t            if (!shouldDestroy) {\r\n\t                event.preventDestroy();\r\n\t            }\r\n\t        }\r\n\t\r\n\t        function handleDestroy(event) {\r\n\t            parentDispatcher.removeListener(\"destroy\", handleDestroy);\r\n\t            parentDispatcher.removeListener(\"preDestroy\", handlePreDestroy);\r\n\t\r\n\t            childrenDispatcher.dispatchEvent(\"destroy\", arguments);\r\n\t            beansContext.doDestroy();\r\n\t        }\r\n\t\r\n\t        parentDispatcher.addListener(\"preDestroy\", handlePreDestroy);\r\n\t        parentDispatcher.addListener(\"destroy\", handleDestroy);\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * BeansContext instance is returned by {@link izi#bakeBeans izi.bakeBeans()} function. It is also available\r\n\t     * in <code>.iziContext(context)</code> function implemented on any bean, ie:\r\n\t     *\r\n\t     *     izi.bakeBeans({\r\n\t     *\r\n\t     *         bean: izi.instantiate(SomeDependency),\r\n\t     *\r\n\t     *         myBean: {\r\n\t     *\r\n\t     *             dependency: izi.inject(SomeDependency),\r\n\t     *\r\n\t     *             iziContext: function (context) {\r\n\t     *                 // iziContext function is called when all dependencies are provided and ready to use\r\n\t     *             }\r\n\t     *\r\n\t     *             iziInit: function () {\r\n\t     *                 // iziInit() is called after iziContext()\r\n\t     *             }\r\n\t     *         }\r\n\t     *     });\r\n\t     *\r\n\t     *  When you have BeansContext reference, you can:\r\n\t     *\r\n\t     *   * wire dependencies to object created outside the context: <code>context.wire(objectContainingIziInjects)</code>\r\n\t     *   * create descendant context: <code>izi.bakeBeans({...}, parentContext);</code>\r\n\t     *   * destroy context: <code>context.destroy()</code>\r\n\t     *\r\n\t     * @class Izi.ioc.BeansContext\r\n\t     * @constructor\r\n\t     * @private\r\n\t     * @param {Object} globals\r\n\t     * @param {Object|Object[]} beans Beans configuration as a map of beanId:bean or array of maps.\r\n\t     * @param {Izi.ioc.BeansContext} [parentContext]\r\n\t     */\r\n\t    var BeansContext = function Izi_ioc_BeansContext(globals, beans, parentContext) {\r\n\t        this.globals = globals;\r\n\t        this.beans = normalizeBeans(beans);\r\n\t        this.destroyDispatcher = new module.model.Observable();\r\n\t        this.parentContext = parentContext;\r\n\t        this.beansBuilders = [];\r\n\t\r\n\t        handleDestroyFromParentContext(this);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Init context\r\n\t     * @member Izi.ioc.BeansContext\r\n\t     * @private\r\n\t     * @return {Izi.ioc.BeansContext}\r\n\t     */\r\n\t    BeansContext.prototype.initContext = function () {\r\n\t\r\n\t        createBeansBuilders(this.beans, this.beansBuilders, this.globals);\r\n\t        initAllBeans(this, this.beansBuilders);\r\n\t\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Find bean by its id or class name\r\n\t     * @member Izi.ioc.BeansContext\r\n\t     * @param {String|Function} beanIdOrType\r\n\t     * @return {*}\r\n\t     */\r\n\t    BeansContext.prototype.getBean = function (beanIdOrType) {\r\n\t\r\n\t        var beanBuilder = this.findBeanBuilder(beanIdOrType);\r\n\t\r\n\t        if (!beanBuilder) {\r\n\t            throw new module.ioc.bean.NoBeanMatched(beanIdOrType);\r\n\t        }\r\n\t\r\n\t        return beanBuilder.create(this);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Injects needed dependencies from this context into passed object.\r\n\t     * @member Izi.ioc.BeansContext\r\n\t     * @since 1.3.0\r\n\t     * @param {Object} objectContainingIziInjects\r\n\t     * @return {Object}\r\n\t     */\r\n\t    BeansContext.prototype.wire = function (objectContainingIziInjects) {\r\n\t        var strategy = new module.ioc.bean.InstanceStrategy(objectContainingIziInjects),\r\n\t            beanBuilder = new module.ioc.bean.BeanBuilder(\"\", strategy, this.globals);\r\n\t        this.beansBuilders.push(beanBuilder);\r\n\t        return beanBuilder.create(this);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Detaches bean wired by context.wire() to prevent memory leaks.\r\n\t     * @member Izi.ioc.BeansContext\r\n\t     * @since 1.7.2\r\n\t     * @param {Object} bean\r\n\t     */\r\n\t    BeansContext.prototype.detachBean = function (bean) {\r\n\t        var beanBuilderToDestroy = null;\r\n\t        module.utils.some(this.beansBuilders || [], function (beanBuilder) {\r\n\t            if (beanBuilder.matchesBeanInstance(bean)) {\r\n\t                beanBuilderToDestroy = beanBuilder;\r\n\t                return true;\r\n\t            }\r\n\t            return false;\r\n\t        });\r\n\t\r\n\t        if (beanBuilderToDestroy) {\r\n\t            beanBuilderToDestroy.destroyCreatedBeans();\r\n\t            module.utils.removeItem(this.beansBuilders, beanBuilderToDestroy);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Destroys beans context and all descendant contexts. First it calls <code>.iziPreDestroy()</code> method on every\r\n\t     * created bean if implemented. Throwing an error inside <code>.iziPreDestroy()</code> stops destroying the context.\r\n\t     * After calling <code>.iziPreDestroy()</code> izi calls <code>.iziDestroy()</code> methods on every created bean\r\n\t     * if implemented. All thrown errors inside <code>.iziDestroy()</code> are caught and ignored.\r\n\t     *\r\n\t     * <code>.iziDestroy()</code> is a place where you should unregister all event listeners added within its class.\r\n\t     *\r\n\t     *     var context = izi.bakeBeans({\r\n\t     *\r\n\t     *         someBean: {\r\n\t     *\r\n\t     *             iziInit: function () {\r\n\t     *                 var bind = this.bind = izi.bind();\r\n\t     *\r\n\t     *                 bind.valueOf(loginInput).to(model, \"login\");\r\n\t     *                 bind.valueOf(passwordInput).to(model, \"password\");\r\n\t     *\r\n\t     *                 this.login = izi.perform(doLogin).when(\"click\").on(loginButton);\r\n\t     *             },\r\n\t     *\r\n\t     *             iziPreDestroy: function () {\r\n\t     *                 // you can throw new Error() here if you don't want to destroy context for any reason\r\n\t     *             }\r\n\t     *\r\n\t     *             iziDestroy: function () {\r\n\t     *                 this.bind.unbindAll();\r\n\t     *                 this.login.stopObserving();\r\n\t     *             }\r\n\t     *         }\r\n\t     *     });\r\n\t     *\r\n\t     *     context.destroy();\r\n\t     *\r\n\t     * @member Izi.ioc.BeansContext\r\n\t     * @return {boolean} true when destroying was successful, false when any of beans thrown an exception in iziPreDestroy() method\r\n\t     * @since 1.4.0\r\n\t     */\r\n\t    BeansContext.prototype.destroy = function () {\r\n\t        var destroyDispatcher = this.destroyDispatcher,\r\n\t            preDestroyEvent = createPreDestroyEvent();\r\n\t\r\n\t        destroyDispatcher.dispatchEvent(\"preDestroy\", [preDestroyEvent]);\r\n\t\r\n\t        if (preDestroyEvent.isDestroyPrevented()) {\r\n\t            return false;\r\n\t        }\r\n\t\r\n\t        var shouldDestroy = this.doPreDestroy();\r\n\t\r\n\t        if (!shouldDestroy) {\r\n\t            return false;\r\n\t        }\r\n\t\r\n\t        destroyDispatcher.dispatchEvent(\"destroy\");\r\n\t        this.doDestroy();\r\n\t\r\n\t        return true;\r\n\t    };\r\n\t\r\n\t    BeansContext.prototype.doPreDestroy = function () {\r\n\t        return module.utils.every(this.beansBuilders, function (beanBuilder) {\r\n\t            try {\r\n\t                beanBuilder.preDestroyCreatedBeans();\r\n\t                return true;\r\n\t            } catch (e) {\r\n\t                return false;\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t\r\n\t    BeansContext.prototype.doDestroy = function () {\r\n\t        module.utils.forEach(this.beansBuilders, function (beanBuilder) {\r\n\t            beanBuilder.destroyCreatedBeans();\r\n\t        });\r\n\t        this.beansBuilders = [];\r\n\t        this.beans = undefined;\r\n\t        this.parentContext = undefined;\r\n\t        this.destroyDispatcher = undefined;\r\n\t\r\n\t        return true;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Find bean builder by its id or type\r\n\t     * @member Izi.ioc.BeansContext\r\n\t     * @private\r\n\t     * @param {String/Function} beanIdOrType\r\n\t     * @return {Izi.ioc.bean.BeanBuilder}\r\n\t     */\r\n\t    BeansContext.prototype.findBeanBuilder = function (beanIdOrType) {\r\n\t        var foundBuilder = null;\r\n\t\r\n\t        module.utils.forEach(this.beansBuilders, function (factory) {\r\n\t            if (factory.matches(beanIdOrType)) {\r\n\t                if (foundBuilder) {\r\n\t                    throw new Error(\"Ambiguous reference to bean by type. Please refer by id.\");\r\n\t                }\r\n\t                foundBuilder = factory;\r\n\t            }\r\n\t        });\r\n\t\r\n\t        if (!foundBuilder && this.parentContext !== undefined) {\r\n\t            foundBuilder = this.parentContext.findBeanBuilder(beanIdOrType);\r\n\t        }\r\n\t\r\n\t        return foundBuilder;\r\n\t    };\r\n\t\r\n\t    module.ioc.BeansContext = BeansContext;\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires ../utils/getCallerLineProvider.js\r\n\t * @requires ../utils/typeOf.js\r\n\t * @requires ../utils/ClassNotFound.js\r\n\t * @requires ../utils/typeOf.js\r\n\t * @requires bean/NoBeanMatched.js\r\n\t */\r\n\t!function (module) {\r\n\t\r\n\t    function defaultInjector(target, prop, dependency) {\r\n\t        target[prop] = dependency;\r\n\t    }\r\n\t\r\n\t    function defaultDependencyConverter(dependency) {\r\n\t        return dependency;\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * Injection marker for beans arguments and properties.\r\n\t     * @class Izi.ioc.Injection\r\n\t     * @constructor\r\n\t     * @private\r\n\t     * @param {String|Function} beanIdOrType Bean id or constructor function or dotted string class definition\r\n\t     */\r\n\t    var Injection = function Izi_ioc_Injection(beanIdOrType) {\r\n\t        this.beanIdOrType = beanIdOrType;\r\n\t        this.getCallerLine = module.utils.getCallerLineProvider(2);\r\n\t        this.injector = defaultInjector;\r\n\t        this.dependencyConverter = defaultDependencyConverter;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @member Izi.ioc.Injection\r\n\t     * @private\r\n\t     * @return {String}\r\n\t     */\r\n\t    Injection.prototype.getBeanNotFoundMessage = function() {\r\n\t        var beanName;\r\n\t        if (module.utils.typeOf(this.beanIdOrType) === \"Function\") {\r\n\t            beanName = this.beanIdOrType.name || this.beanIdOrType;\r\n\t        } else {\r\n\t            beanName = this.beanIdOrType;\r\n\t        }\r\n\t        return \"Bean: `\" + beanName + \"` couldn't be found from injection at line:\\n\" + this.getCallerLine();\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Delegates get bean\r\n\t     * @member Izi.ioc.Injection\r\n\t     * @private\r\n\t     * @param {Izi.ioc.BeansContext} beansContext\r\n\t     * @return {*}\r\n\t     */\r\n\t    Injection.prototype.resolveBean = function (beansContext) {\r\n\t        var bean;\r\n\t        try {\r\n\t            bean = beansContext.getBean(this.beanIdOrType);\r\n\t        } catch (e) {\r\n\t            if (e instanceof module.utils.ClassNotFound || e instanceof module.ioc.bean.NoBeanMatched) {\r\n\t                throw new Error(this.getBeanNotFoundMessage());\r\n\t            }\r\n\t            else {\r\n\t                throw e;\r\n\t            }\r\n\t        }\r\n\t        return this.dependencyConverter(bean);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Warning: use only for property injection! It doesn't work for constructor argument injection.\r\n\t     *\r\n\t     * The default property injection just set dependency as property in following code:\r\n\t     *\r\n\t     *     function defaultInjector(target, prop, dependency) {\r\n\t     *         target[prop] = dependency;\r\n\t     *     }\r\n\t     *\r\n\t     * If you want to inject dependency in different way you may use custom injector function:\r\n\t     *\r\n\t     *     userModel: izi.inject(\"userModel\").by(function (target, prop, dependency) {\r\n\t     *         target.setUserModel(dependency);\r\n\t     *     });\r\n\t     *\r\n\t     * Notice: `dependency` argument is processed by dependency converter set by `.through()` or set by `.property()`\r\n\t     *\r\n\t     * @member Izi.ioc.Injection\r\n\t     * @param {function(target, prop, dependency)} injector function which will be used to inject dependency as property.\r\n\t     * @return {Izi.ioc.Injection}\r\n\t     * @since 1.7.0\r\n\t     */\r\n\t    Injection.prototype.by = function (injector) {\r\n\t        if (module.utils.typeOf(injector) !== \"Function\") {\r\n\t            throw new Error(\"Injector should be a function with target, prop, dependency arguments\");\r\n\t        }\r\n\t        this.injector = injector;\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * The default dependency converter returns just the dependency as in following code:\r\n\t     *\r\n\t     *     function defaultDependencyConverter(dependency) {\r\n\t     *         return dependency;\r\n\t     *     }\r\n\t     *\r\n\t     * If you want to inject transformed dependency, you may use custom dependency converter:\r\n\t     *\r\n\t     *     userModel: izi.inject(\"userModel\").trough(function (dependency) {\r\n\t     *         return dependency.toJSON();\r\n\t     *     });\r\n\t     *\r\n\t     * @member Izi.ioc.Injection\r\n\t     * @param {function(dependency):*} dependencyConverter function which will be used to inject dependency as property.\r\n\t     * @return {Izi.ioc.Injection}\r\n\t     * @since 1.7.0\r\n\t     */\r\n\t    Injection.prototype.through = function (dependencyConverter) {\r\n\t        if (module.utils.typeOf(dependencyConverter) !== \"Function\") {\r\n\t            throw new Error(\"Dependency converter should be a function with dependency argument\");\r\n\t        }\r\n\t        this.dependencyConverter = dependencyConverter;\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Inject value of `dependency[property]` instead of `dependency`\r\n\t     *\r\n\t     *     firstName: izi.inject(\"userModel\").property(\"firstName\")\r\n\t     *\r\n\t     * @param {String} property\r\n\t     * @return {Izi.ioc.Injection}\r\n\t     * @since 1.7.0\r\n\t     * @chainable\r\n\t     */\r\n\t    Injection.prototype.property = function (property) {\r\n\t        return this.through(function (dependency) {\r\n\t            return dependency[property];\r\n\t        });\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Delegates find bean builder\r\n\t     * @member Izi.ioc.Injection\r\n\t     * @private\r\n\t     * @param {Izi.ioc.BeansContext} beansContext\r\n\t     * @return {Izi.ioc.bean.BeanBuilder}\r\n\t     */\r\n\t    Injection.prototype.findBeanBuilder = function (beansContext) {\r\n\t        var beanBuilder = beansContext.findBeanBuilder(this.beanIdOrType);\r\n\t        if (beanBuilder === null) {\r\n\t            throw new Error(this.getBeanNotFoundMessage());\r\n\t        }\r\n\t        return beanBuilder;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Marker field to use instead of: ... instanceof Izi.ioc.Injection\r\n\t     * @member Izi.ioc.Injection\r\n\t     * @private\r\n\t     * @type {Boolean}\r\n\t     */\r\n\t    Injection.prototype.isIziInjection = true;\r\n\t\r\n\t    module.ioc.Injection = Injection;\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires ../../utils/hasOwnProperty.js\r\n\t * @requires ../../utils/getClassByName.js\r\n\t */\r\n\t!function(module) {\r\n\t    module.ioc.bean.createInstance = function (Clazz, args, props, beansContext) {\r\n\t\r\n\t        function resolveArguments(args, beansContext) {\r\n\t            var i, arg, result = [];\r\n\t            for (i = 0; i < args.length; i = i + 1) {\r\n\t                arg = args[i];\r\n\t                if (arg && arg.isIziInjection) {\r\n\t                    result.push(arg.resolveBean(beansContext));\r\n\t                } else {\r\n\t                    result.push(arg);\r\n\t                }\r\n\t            }\r\n\t            return result;\r\n\t        }\r\n\t\r\n\t        function applyProps(instance, props) {\r\n\t            if (props !== undefined) {\r\n\t                for (var prop in props) {\r\n\t                    if (module.utils.hasOwnProperty(props, prop)) {\r\n\t                        instance[prop] = props[prop];\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t\r\n\t        if (module.utils.typeOf(Clazz) === \"String\") {\r\n\t            Clazz = module.utils.getClassByName(Clazz, beansContext.globals);\r\n\t        }\r\n\t\r\n\t        var a = resolveArguments(args, beansContext),\r\n\t            argsCount = a.length,\r\n\t            instance;\r\n\t\r\n\t        if (argsCount === 0) {\r\n\t            instance = new Clazz();\r\n\t        } else if (argsCount === 1) {\r\n\t            instance = new Clazz(a[0]);\r\n\t        } else if (argsCount === 2) {\r\n\t            instance = new Clazz(a[0], a[1]);\r\n\t        } else if (argsCount === 3) {\r\n\t            instance = new Clazz(a[0], a[1], a[2]);\r\n\t        } else if (argsCount === 4) {\r\n\t            instance = new Clazz(a[0], a[1], a[2], a[3]);\r\n\t        } else if (argsCount === 5) {\r\n\t            instance = new Clazz(a[0], a[1], a[2], a[3], a[4]);\r\n\t        } else if (argsCount === 6) {\r\n\t            instance = new Clazz(a[0], a[1], a[2], a[3], a[4], a[5]);\r\n\t        } else if (argsCount === 7) {\r\n\t            instance = new Clazz(a[0], a[1], a[2], a[3], a[4], a[5], a[6]);\r\n\t        } else if (argsCount === 8) {\r\n\t            instance = new Clazz(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7]);\r\n\t        } else if (argsCount === 9) {\r\n\t            instance = new Clazz(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\r\n\t        } else if (argsCount === 10) {\r\n\t            instance = new Clazz(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9]);\r\n\t        } else {\r\n\t            throw new Error(\"Too many arguments given\");\r\n\t        }\r\n\t\r\n\t        applyProps(instance, props);\r\n\t\r\n\t        return instance;\r\n\t    };\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires createInstance.js\r\n\t */\r\n\t!function (module) {\r\n\t\r\n\t    /**\r\n\t     * Singleton strategy used in {@link Izi.ioc.bean.BeanBuilder}\r\n\t     * @class Izi.ioc.bean.SingletonStrategy\r\n\t     * @private\r\n\t     * @constructor\r\n\t     * @param {Izi.ioc.Config} config\r\n\t     */\r\n\t    var SingletonStrategy = function Izi_ioc_bean_SingletonStrategy(config) {\r\n\t        this.Clazz = config.getClazz();\r\n\t        this.args = config.getArguments();\r\n\t        this.props = config.getProperties();\r\n\t        this.instance = undefined;\r\n\t    };\r\n\t\r\n\t    SingletonStrategy.prototype.createInstance = function (beansContext) {\r\n\t        if (!this.instance) {\r\n\t            this.instance = module.ioc.bean.createInstance(this.Clazz, this.args, this.props, beansContext);\r\n\t        }\r\n\t\r\n\t        return this.instance;\r\n\t    };\r\n\t\r\n\t    SingletonStrategy.prototype.init = function (beansContext) {\r\n\t        return this.createInstance(beansContext);\r\n\t    };\r\n\t\r\n\t    SingletonStrategy.prototype.create = function (beansContext) {\r\n\t        return this.createInstance(beansContext);\r\n\t    };\r\n\t\r\n\t    SingletonStrategy.prototype.matchesByType = function (type) {\r\n\t        return type === this.Clazz;\r\n\t    };\r\n\t\r\n\t    SingletonStrategy.prototype.getArguments = function () {\r\n\t        return this.args;\r\n\t    };\r\n\t\r\n\t    module.ioc.bean.SingletonStrategy = SingletonStrategy;\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires createInstance.js\r\n\t */\r\n\t!function(module) {\r\n\t    /**\r\n\t     * Lazy Singleton strategy used in {@link Izi.ioc.bean.BeanBuilder}\r\n\t     * @class Izi.ioc.bean.LazySingletonStrategy\r\n\t     * @private\r\n\t     * @constructor\r\n\t     * @param {Izi.ioc.Config} config\r\n\t     */\r\n\t    var LazySingletonStrategy = function Izi_ioc_bean_LazySingletonStrategy(config) {\r\n\t        this.Clazz = config.getClazz();\r\n\t        this.args = config.getArguments();\r\n\t        this.props = config.getProperties();\r\n\t        this.instance = undefined;\r\n\t    };\r\n\t\r\n\t    LazySingletonStrategy.prototype.init = function (context) {\r\n\t        return null;\r\n\t    };\r\n\t\r\n\t    LazySingletonStrategy.prototype.create = function (context) {\r\n\t        if (!this.instance) {\r\n\t            this.instance = module.ioc.bean.createInstance(this.Clazz, this.args, this.props, context);\r\n\t        }\r\n\t\r\n\t        return this.instance;\r\n\t    };\r\n\t\r\n\t    LazySingletonStrategy.prototype.matchesByType = function (type) {\r\n\t        return type === this.Clazz;\r\n\t    };\r\n\t\r\n\t    LazySingletonStrategy.prototype.getArguments = function () {\r\n\t        return this.args;\r\n\t    };\r\n\t    \r\n\t    module.ioc.bean.LazySingletonStrategy = LazySingletonStrategy;\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires createInstance.js\r\n\t */\r\n\t!function(module) {\r\n\t    /**\r\n\t     * Prototype strategy used in {@link Izi.ioc.bean.BeanBuilder}\r\n\t     * @class Izi.ioc.bean.PrototypeStrategy\r\n\t     * @private\r\n\t     * @constructor\r\n\t     * @param {Izi.ioc.Config} config\r\n\t     */\r\n\t    var PrototypeStrategy = function Izi_ioc_bean_PrototypeStrategy(config) {\r\n\t        this.Clazz = config.getClazz();\r\n\t        this.args = config.getArguments();\r\n\t        this.props = config.getProperties();\r\n\t    };\r\n\t\r\n\t    PrototypeStrategy.prototype.init = function (beansContext) {\r\n\t        return null;\r\n\t    };\r\n\t\r\n\t    PrototypeStrategy.prototype.create = function (beansContext) {\r\n\t        return module.ioc.bean.createInstance(this.Clazz, this.args, this.props, beansContext);\r\n\t    };\r\n\t\r\n\t    PrototypeStrategy.prototype.matchesByType = function (type) {\r\n\t        return type === this.Clazz;\r\n\t    };\r\n\t\r\n\t    PrototypeStrategy.prototype.getArguments = function () {\r\n\t        return this.args;\r\n\t    };\r\n\t\r\n\t    module.ioc.bean.PrototypeStrategy = PrototypeStrategy;\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires capitalize.js\r\n\t */\r\n\t!function (module) {\r\n\t    /**\r\n\t     * @member Izi.utils\r\n\t     * @method\r\n\t     * @since 1.5.0\r\n\t     * @private\r\n\t     * @param {String} name\r\n\t     * @return {String}\r\n\t     */\r\n\t    module.utils.setterOf = function (name) {\r\n\t        return \"set\" + module.utils.capitalize(name);\r\n\t    };\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires Observable.js\r\n\t * @requires ../utils/getterOf.js\r\n\t * @requires ../utils/setterOf.js\r\n\t * @requires ../utils/typeOf.js\r\n\t */\r\n\t!function (module) {\r\n\t\r\n\t    var forEach = module.utils.forEach;\r\n\t\r\n\t    function normalizeFields(fields) {\r\n\t        var result = [];\r\n\t        forEach(fields, function (field) {\r\n\t            field = module.utils.typeOf(field) === \"Object\" ? field : {name: field};\r\n\t            field.getter = module.utils.getterOf(field.name);\r\n\t            field.setter = module.utils.setterOf(field.name);\r\n\t            result.push(field);\r\n\t        });\r\n\t        return result;\r\n\t    }\r\n\t\r\n\t    function hasToPlainObjectMethod(value) {\r\n\t        return value && module.utils.typeOf(value.toPlainObject) === \"Function\";\r\n\t    }\r\n\t\r\n\t    function implementGetterAndSetter(Class, name, getter, setter) {\r\n\t\r\n\t        Class.prototype[name] = function (value) {\r\n\t            if (arguments.length === 0) {\r\n\t                return this[getter]();\r\n\t            } else if (arguments.length === 1) {\r\n\t                return this[setter](value);\r\n\t            } else {\r\n\t                throw new Error(\"Too many arguments. Setter function requires exactly one argument\");\r\n\t            }\r\n\t        };\r\n\t\r\n\t        Class.prototype[getter] = function () {\r\n\t            return this.get(name);\r\n\t        };\r\n\t\r\n\t        Class.prototype[setter] = function (value) {\r\n\t            return this.set(name, value);\r\n\t        };\r\n\t    }\r\n\t\r\n\t    function createInitialData(fields) {\r\n\t        var data = {};\r\n\t\r\n\t        forEach(fields, function (field) {\r\n\t            if (field.hasOwnProperty(\"defaultValue\")) {\r\n\t                data[field.name] = field.defaultValue;\r\n\t            } else if (field.hasOwnProperty(\"initialValue\")) {\r\n\t                data[field.name] = field.initialValue;\r\n\t            }\r\n\t        });\r\n\t        return data;\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * See [Model guide](#guide/model) for usage documentation.\r\n\t     *\r\n\t     * @extends Izi.model.Observable\r\n\t     * @class Izi.model.Model\r\n\t     * @constructor\r\n\t     */\r\n\t    var Model = function Izi_Model() {\r\n\t        Model.upper.constructor.apply(this, arguments);\r\n\t        this.init();\r\n\t    };\r\n\t\r\n\t    module.utils.inherit(Model, module.model.Observable);\r\n\t\r\n\t    /**\r\n\t     * @member Izi.model.Model\r\n\t     * @private\r\n\t     * @type {Boolean}\r\n\t     */\r\n\t    Model.prototype.isIziModel = true;\r\n\t\r\n\t    /**\r\n\t     * Abstract init method called from constructor\r\n\t     * @member Izi.model.Model\r\n\t     * @protected\r\n\t     */\r\n\t    Model.prototype.init = function () {\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Retrieves value of given property name\r\n\t     * @member Izi.model.Model\r\n\t     * @param {String} propertyName\r\n\t     * @return {*}\r\n\t     */\r\n\t    Model.prototype.get = function (propertyName) {\r\n\t        return this.data[propertyName];\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Updates value of given property name and returns own model instance (this).\r\n\t     * @member Izi.model.Model\r\n\t     * @fires change\r\n\t     * @fires propertyNameChange\r\n\t     * @param {String|Object} propertyName or map of pairs property=>value\r\n\t     * @param {*} [value]\r\n\t     * @return {Izi.model.Model}\r\n\t     */\r\n\t    Model.prototype.set = function (propertyName, value) {\r\n\t\r\n\t        if (arguments.length === 1 && module.utils.typeOf(propertyName) === \"Object\") {\r\n\t            for (var prop in propertyName) {\r\n\t                if (propertyName.hasOwnProperty(prop)) {\r\n\t                    this.set(prop, propertyName[prop]);\r\n\t                }\r\n\t            }\r\n\t            return this;\r\n\t        }\r\n\t\r\n\t        var currentValue = this.data[propertyName];\r\n\t\r\n\t        if (!this.equals(currentValue, value)) {\r\n\t            this.data[propertyName] = value;\r\n\t            this.dispatchChange(propertyName, value, currentValue);\r\n\t        }\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Fires notifications about value changes. This method is used internally by {@link Izi.model.Model#set} method.\r\n\t     * Firstly is fired event `\"change\"` and after that is fired event with name corresponding to `propertyName`.\r\n\t     * For example for `dispatchChange(\"firstName\")` will be fired two events: `\"change\"` and `\"firstNameChange\"`.\r\n\t     *\r\n\t     * @fires change\r\n\t     * @fires propertyNameChange\r\n\t     * @param {String} propertyName\r\n\t     * @param {*} [newValue]\r\n\t     * @param {*} [oldValue]\r\n\t     */\r\n\t    Model.prototype.dispatchChange = function (propertyName, newValue, oldValue) {\r\n\t        this.dispatchEvent(propertyName + \"Change\", [newValue, oldValue]);\r\n\t        this.dispatchEvent(\"change\", [propertyName, newValue, oldValue]);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Method used to detect if new value that is pretended to be set is different to the old one. Override\r\n\t     * this method if you want to use custom equals function.\r\n\t     *\r\n\t     * @param {*} val1\r\n\t     * @param {*} val2\r\n\t     * @returns {Boolean}\r\n\t     */\r\n\t    Model.prototype.equals = function (val1, val2) {\r\n\t        if (module.utils.typeOf(val1) === \"Array\" && module.utils.typeOf(val2) === \"Array\") {\r\n\t            return this.equalsArray(val1, val2);\r\n\t        }\r\n\t\r\n\t        return val1 === val2;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * This method is used in default {@link Izi.model.Model#equals} method.\r\n\t     *\r\n\t     * @param arr1\r\n\t     * @param arr2\r\n\t     * @returns {boolean}\r\n\t     */\r\n\t    Model.prototype.equalsArray = function (arr1, arr2) {\r\n\t        if (arr1.length !== arr2.length) {\r\n\t            return false;\r\n\t        }\r\n\t\r\n\t        for (var i = 0; i < arr1.length; i++) {\r\n\t            if (arr1[i] !== arr2[i]) {\r\n\t                return false;\r\n\t            }\r\n\t        }\r\n\t\r\n\t        return true;\r\n\t    };\r\n\t\r\n\t    Model.prototype.iziObserveProperty = function (property, propertyChangeCallback) {\r\n\t        var me = this,\r\n\t            propertyChangeEvent = property + \"Change\";\r\n\t\r\n\t        me.addListener(propertyChangeEvent, propertyChangeCallback);\r\n\t        return function () {\r\n\t            me.removeListener(propertyChangeEvent, propertyChangeCallback);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    Model.prototype.iziObserveWidget = function (eventConfig, action, scope, eventOptions) {\r\n\t        var me = this,\r\n\t            eventType = eventConfig.getEventType();\r\n\t\r\n\t        me.addListener(eventType, action, scope);\r\n\t        return function () {\r\n\t            me.removeListener(eventType, action);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Exports all declared fields in `field: []` section using short getters like `firstName()`.\r\n\t     *\r\n\t     *     var User = izi.modelOf({\r\n\t     *         fields: [\"firstName\", \"lastName\"]\r\n\t     *     });\r\n\t     *\r\n\t     *     var john = new User().firstName(\"John\").lastName(\"Smith\");\r\n\t     *     john.toPlainObject(); // {firstName: \"John\", lastName: \"Smith\"}\r\n\t     *\r\n\t     * When field value is an Array, then it will be converted to array of values. If any field or array item has\r\n\t     * `.toPlainObject()` method, then it will be called to get result.\r\n\t     *\r\n\t     * Circular references between models are resolved as circular references between plain objects.\r\n\t     *\r\n\t     *     var TreeItem = izi.modelOf({\r\n\t     *         fields: [\"children\", \"parent\"]\r\n\t     *     });\r\n\t     *\r\n\t     *     var root = new TreeItem();\r\n\t     *     var child1 = new TreeItem().parent(root);\r\n\t     *     var child2 = new TreeItem().parent(root);\r\n\t     *     root.children([child1, child2]);\r\n\t     *\r\n\t     *     root.toPlainObject(); // {children: [{parent: *refToRoot*},\r\n\t     *                           //             {parent: *refToRoot*}] }\r\n\t     *\r\n\t     * If you have custom getter which is not declared in `fields` section you may override toPlainObject method:\r\n\t     *\r\n\t     *     var User = izi.modelOf({\r\n\t     *         fields: [\"firstName\", \"lastName\"],\r\n\t     *\r\n\t     *         getFullName: function () {\r\n\t     *             return this.firstName() + \" \" + this.lastName();\r\n\t     *         },\r\n\t     *\r\n\t     *         toPlainObject: function () {\r\n\t     *\r\n\t     *             // call original implementation that converts firstName and lastName\r\n\t     *             var plainObject = User.upper.toPlainObject.call(this);\r\n\t     *\r\n\t     *             // add your custom getters here\r\n\t     *             plainObject.fullName = this.getFullName();\r\n\t     *\r\n\t     *             return plainObject;\r\n\t     *         }\r\n\t     *     });\r\n\t     *\r\n\t     *     var john = new User().firstName(\"John\").lastName(\"Smith\");\r\n\t     *     john.toPlainObject(); // {firstName: \"John\", lastName: \"Smith\", fullName: \"John Smith\"}\r\n\t     *\r\n\t     * @returns {Object}\r\n\t     * @since 1.5.0\r\n\t     */\r\n\t    Model.prototype.toPlainObject = function () {\r\n\t        var result = {},\r\n\t            arrayResult,\r\n\t            circularCopyProp = \"__iziCircularCopy__\",\r\n\t            wasVisited = circularCopyProp in this,\r\n\t            cache = this[circularCopyProp];\r\n\t\r\n\t        if (wasVisited) {\r\n\t            return cache();\r\n\t        }\r\n\t\r\n\t        this[circularCopyProp] = function () {\r\n\t            return result;\r\n\t        };\r\n\t\r\n\t        forEach(this.fields, function (field) {\r\n\t            var value = this[field.getter]();\r\n\t\r\n\t            if (hasToPlainObjectMethod(value)) {\r\n\t                result[field.name] = value.toPlainObject();\r\n\t            } else if (module.utils.typeOf(value) === \"Array\") {\r\n\t                arrayResult = [];\r\n\t                forEach(value, function (item) {\r\n\t                    if (hasToPlainObjectMethod(item)) {\r\n\t                        arrayResult.push(item.toPlainObject());\r\n\t                    } else {\r\n\t                        arrayResult.push(item);\r\n\t                    }\r\n\t                });\r\n\t                result[field.name] = arrayResult;\r\n\t            } else if (value && module.utils.typeOf(value.forEach) === \"Function\") {\r\n\t                arrayResult = [];\r\n\t                value.forEach(function (item) {\r\n\t                    if (hasToPlainObjectMethod(item)) {\r\n\t                        arrayResult.push(item.toPlainObject());\r\n\t                    } else {\r\n\t                        arrayResult.push(item);\r\n\t                    }\r\n\t                });\r\n\t                result[field.name] = arrayResult;\r\n\t            } else {\r\n\t                result[field.name] = value;\r\n\t            }\r\n\t        }, this);\r\n\t\r\n\t        delete this[circularCopyProp];\r\n\t        return result;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @private\r\n\t     * @param config\r\n\t     * @return {Function}\r\n\t     */\r\n\t    Model.define = function (config) {\r\n\t\r\n\t        var fields = normalizeFields(config.fields),\r\n\t            Class = function () {\r\n\t                this.data = createInitialData(fields);\r\n\t                this.fields = fields;\r\n\t                Class.upper.constructor.apply(this);\r\n\t            };\r\n\t        module.utils.inherit(Class, Model);\r\n\t\r\n\t        forEach(fields, function (field) {\r\n\t            implementGetterAndSetter(Class, field.name, field.getter, field.setter);\r\n\t        });\r\n\t\r\n\t        for (var key in config) {\r\n\t            if (module.utils.hasOwnProperty(config, key) && key != 'fields') {\r\n\t                Class.prototype[key] = config[key];\r\n\t            }\r\n\t        }\r\n\t\r\n\t        return Class;\r\n\t    };\r\n\t\r\n\t\r\n\t    module.model.Model = Model;\r\n\t\r\n\t    /**\r\n\t     * @event propertyNameChange\r\n\t     * Fired when new value of property `\"propertyName\"` has been already set. Each property fires its own event so you should\r\n\t     * register listener of `firstName` property using following code: `model.addListener(\"firstNameChange\", handler)`\r\n\t     *\r\n\t     * @param {*} newValue new value\r\n\t     * @param {*} oldValue current value\r\n\t     */\r\n\t\r\n\t    /**\r\n\t     * @event change\r\n\t     * Fired when new value of property has been already set.\r\n\t     * @param {String} property property name that its value has changed\r\n\t     * @param {*} newValue current value\r\n\t     * @param {*} oldValue previous value\r\n\t     */\r\n\t\r\n\t    /** @ignore function: () { */\r\n\t}(Izi);\r\n\t\r\n\t/**\r\n\t * @ignore\r\n\t * @requires EventConfig.js\r\n\t */\r\n\t!function (module) {\r\n\t\r\n\t    /**\r\n\t     * @class Izi.events.KeyboardConfig\r\n\t     * @extends Izi.events.EventConfig\r\n\t     * @constructor\r\n\t     * @private\r\n\t     * @param {String} eventType\r\n\t     */\r\n\t    var KeyboardConfig = function Izi_events_KeyboardConfig(eventType) {\r\n\t        module.events.EventConfig.apply(this, arguments);\r\n\t        this.expectedKeyCode = 0;\r\n\t    };\r\n\t    KeyboardConfig.prototype = new module.events.EventConfig();\r\n\t    KeyboardConfig.prototype.constructor = KeyboardConfig;\r\n\t\r\n\t    /**\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @private\r\n\t     * @type {Boolean}\r\n\t     */\r\n\t    KeyboardConfig.prototype.isKeyboardEventConfig = true;\r\n\t\r\n\t    /**\r\n\t     * Setup custom expected keyCode. Use it only when you can't find desired key in methods below:\r\n\t     * <code>izi.events.keyDown().ENTER()</code> etc.\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @param {Number} value\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.keyCode = function (value) {\r\n\t        this.expectedKeyCode = value;\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Returns expected key code\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @private\r\n\t     * @return {Number}\r\n\t     */\r\n\t    KeyboardConfig.prototype.getExpectedKeyCode = function () {\r\n\t        return this.expectedKeyCode;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup BACKSPACE key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.BACKSPACE = function () {\r\n\t        return this.keyCode(8);\r\n\t    };\r\n\t    \r\n\t    /**\r\n\t     * Setup TAB key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.TAB = function () {\r\n\t        return this.keyCode(9);\r\n\t    };\r\n\t    \r\n\t    /**\r\n\t     * Setup NUM_CENTER key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.NUM_CENTER = function () {\r\n\t        return this.keyCode(12);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup ENTER key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.ENTER = function () {\r\n\t        return this.keyCode(13);\r\n\t    };\r\n\t    \r\n\t    /**\r\n\t     * Setup RETURN key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.RETURN = function () {\r\n\t        return this.keyCode(13);\r\n\t    };\r\n\t    \r\n\t    /**\r\n\t     * Setup SHIFT key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.SHIFT = function () {\r\n\t        this.shift(); // If you press SHIFT key - event modifier will be set to true, so we need to also expect that.\r\n\t        return this.keyCode(16);\r\n\t    };\r\n\t    \r\n\t    /**\r\n\t     * Setup CTRL key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.CTRL = function () {\r\n\t        this.ctrl(); // If you press CTRL key - event modifier will be set to true, so we need to also expect that.\r\n\t        return this.keyCode(17);\r\n\t    };\r\n\t    \r\n\t    /**\r\n\t     * Setup ALT key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.ALT = function () {\r\n\t        this.alt(); // If you press ALT key - event modifier will be set to true, so we need to also expect that.\r\n\t        return this.keyCode(18);\r\n\t    };\r\n\t    \r\n\t    /**\r\n\t     * Setup PAUSE key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.PAUSE = function () {\r\n\t        return this.keyCode(19);\r\n\t    };\r\n\t    \r\n\t    /**\r\n\t     * Setup CAPS_LOCK key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.CAPS_LOCK = function () {\r\n\t        return this.keyCode(20);\r\n\t    };\r\n\t    \r\n\t    /**\r\n\t     * Setup ESC key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.ESC = function () {\r\n\t        return this.keyCode(27);\r\n\t    };\r\n\t    \r\n\t    /**\r\n\t     * Setup SPACE key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.SPACE = function () {\r\n\t        return this.keyCode(32);\r\n\t    };\r\n\t    \r\n\t    /**\r\n\t     * Setup PAGE_UP key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.PAGE_UP = function () {\r\n\t        return this.keyCode(33);\r\n\t    };\r\n\t    \r\n\t    /**\r\n\t     * Setup PAGE_DOWN key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.PAGE_DOWN = function () {\r\n\t        return this.keyCode(34);\r\n\t    };\r\n\t    \r\n\t    /**\r\n\t     * Setup END key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.END = function () {\r\n\t        return this.keyCode(35);\r\n\t    };\r\n\t    \r\n\t    /**\r\n\t     * Setup HOME key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.HOME = function () {\r\n\t        return this.keyCode(36);\r\n\t    };\r\n\t    \r\n\t    /**\r\n\t     * Setup LEFT key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.LEFT = function () {\r\n\t        return this.keyCode(37);\r\n\t    };\r\n\t    \r\n\t    /**\r\n\t     * Setup UP key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.UP = function () {\r\n\t        return this.keyCode(38);\r\n\t    };\r\n\t    \r\n\t    /**\r\n\t     * Setup RIGHT key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.RIGHT = function () {\r\n\t        return this.keyCode(39);\r\n\t    };\r\n\t    \r\n\t    /**\r\n\t     * Setup DOWN key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.DOWN = function () {\r\n\t        return this.keyCode(40);\r\n\t    };\r\n\t    \r\n\t    /**\r\n\t     * Setup PRINT_SCREEN key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.PRINT_SCREEN = function () {\r\n\t        return this.keyCode(44);\r\n\t    };\r\n\t    \r\n\t    /**\r\n\t     * Setup INSERT key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.INSERT = function () {\r\n\t        return this.keyCode(45);\r\n\t    };\r\n\t                                                                //\r\n\t    /**\r\n\t     * Setup DELETE key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.DELETE = function () {\r\n\t        return this.keyCode(46);\r\n\t    };\r\n\t    \r\n\t    /**\r\n\t     * Setup ZERO key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.ZERO = function () {\r\n\t        return this.keyCode(48);\r\n\t    };\r\n\t    \r\n\t    /**\r\n\t     * Setup ONE key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.ONE = function () {\r\n\t        return this.keyCode(49);\r\n\t    };\r\n\t    \r\n\t    /**\r\n\t     * Setup TWO key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.TWO = function () {\r\n\t        return this.keyCode(50);\r\n\t    };\r\n\t    \r\n\t    /**\r\n\t     * Setup THREE key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.THREE = function () {\r\n\t        return this.keyCode(51);\r\n\t    };\r\n\t    \r\n\t    /**\r\n\t     * Setup FOUR key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.FOUR = function () {\r\n\t        return this.keyCode(52);\r\n\t    };\r\n\t    \r\n\t    /**\r\n\t     * Setup FIVE key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.FIVE = function () {\r\n\t        return this.keyCode(53);\r\n\t    };\r\n\t    \r\n\t    /**\r\n\t     * Setup SIX key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.SIX = function () {\r\n\t        return this.keyCode(54);\r\n\t    };\r\n\t    \r\n\t    /**\r\n\t     * Setup SEVEN key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.SEVEN = function () {\r\n\t        return this.keyCode(55);\r\n\t    };\r\n\t    \r\n\t    /**\r\n\t     * Setup EIGHT key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.EIGHT = function () {\r\n\t        return this.keyCode(56);\r\n\t    };\r\n\t    \r\n\t    /**\r\n\t     * Setup NINE key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.NINE = function () {\r\n\t        return this.keyCode(57);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup A key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.A = function () {\r\n\t        return this.keyCode(65);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup B key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.B = function () {\r\n\t        return this.keyCode(66);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup C key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.C = function () {\r\n\t        return this.keyCode(67);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup D key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.D = function () {\r\n\t        return this.keyCode(68);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup E key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.E = function () {\r\n\t        return this.keyCode(69);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup F key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.F = function () {\r\n\t        return this.keyCode(70);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup G key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.G = function () {\r\n\t        return this.keyCode(71);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup H key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.H = function () {\r\n\t        return this.keyCode(72);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup I key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.I = function () {\r\n\t        return this.keyCode(73);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup J key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.J = function () {\r\n\t        return this.keyCode(74);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup K key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.K = function () {\r\n\t        return this.keyCode(75);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup L key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.L = function () {\r\n\t        return this.keyCode(76);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup M key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.M = function () {\r\n\t        return this.keyCode(77);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup N key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.N = function () {\r\n\t        return this.keyCode(78);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup O key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.O = function () {\r\n\t        return this.keyCode(79);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup P key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.P = function () {\r\n\t        return this.keyCode(80);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup Q key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.Q = function () {\r\n\t        return this.keyCode(81);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup R key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.R = function () {\r\n\t        return this.keyCode(82);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup S key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.S = function () {\r\n\t        return this.keyCode(83);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup T key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.T = function () {\r\n\t        return this.keyCode(84);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup U key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.U = function () {\r\n\t        return this.keyCode(85);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup V key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.V = function () {\r\n\t        return this.keyCode(86);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup W key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.W = function () {\r\n\t        return this.keyCode(87);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup X key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.X = function () {\r\n\t        return this.keyCode(88);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup Y key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.Y = function () {\r\n\t        return this.keyCode(89);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup Z key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.Z = function () {\r\n\t        return this.keyCode(90);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup NUM_ZERO key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.NUM_ZERO = function () {\r\n\t        return this.keyCode(96);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup NUM_ONE key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.NUM_ONE = function () {\r\n\t        return this.keyCode(97);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup NUM_TWO key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.NUM_TWO = function () {\r\n\t        return this.keyCode(98);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup NUM_THREE key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.NUM_THREE = function () {\r\n\t        return this.keyCode(99);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup NUM_FOUR key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.NUM_FOUR = function () {\r\n\t        return this.keyCode(100);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup NUM_FIVE key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.NUM_FIVE = function () {\r\n\t        return this.keyCode(101);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup NUM_SIX key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.NUM_SIX = function () {\r\n\t        return this.keyCode(102);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup NUM_SEVEN key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.NUM_SEVEN = function () {\r\n\t        return this.keyCode(103);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup NUM_EIGHT key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.NUM_EIGHT = function () {\r\n\t        return this.keyCode(104);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup NUM_NINE key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.NUM_NINE = function () {\r\n\t        return this.keyCode(105);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup NUM_MULTIPLY key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.NUM_MULTIPLY = function () {\r\n\t        return this.keyCode(106);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup NUM_PLUS key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.NUM_PLUS = function () {\r\n\t        return this.keyCode(107);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup NUM_MINUS key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.NUM_MINUS = function () {\r\n\t        return this.keyCode(109);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup NUM_PERIOD key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.NUM_PERIOD = function () {\r\n\t        return this.keyCode(110);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup NUM_DIVISION key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.NUM_DIVISION = function () {\r\n\t        return this.keyCode(111);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup F1 key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.F1 = function () {\r\n\t        return this.keyCode(112);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup F2 key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.F2 = function () {\r\n\t        return this.keyCode(113);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup F3 key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.F3 = function () {\r\n\t        return this.keyCode(114);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup F4 key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.F4 = function () {\r\n\t        return this.keyCode(115);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup F5 key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.F5 = function () {\r\n\t        return this.keyCode(116);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup F6 key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.F6 = function () {\r\n\t        return this.keyCode(117);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup F7 key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.F7 = function () {\r\n\t        return this.keyCode(118);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup F8 key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.F8 = function () {\r\n\t        return this.keyCode(119);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup F9 key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.F9 = function () {\r\n\t        return this.keyCode(120);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup F10 key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.F10 = function () {\r\n\t        return this.keyCode(121);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup F11 key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.F11 = function () {\r\n\t        return this.keyCode(122);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Setup F12 key as expected to be pressed\r\n\t     * @member Izi.events.KeyboardConfig\r\n\t     * @method\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    KeyboardConfig.prototype.F12 = function () {\r\n\t        return this.keyCode(123);\r\n\t    };\r\n\t\r\n\t    module.events.KeyboardConfig = KeyboardConfig;\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires EventConfig.js\r\n\t * @requires KeyboardConfig.js\r\n\t */\r\n\t!function (module) {\r\n\t\r\n\t    /**\r\n\t     * <code>izi.events.*</code> fluent API entry points. You can use them to define izi behaviors based on more complex events, like:\r\n\t     *\r\n\t     *      izi.perform(behavior).when(izi.events.click().shift()).on(button);\r\n\t     *\r\n\t     *      izi.perform(behavior).when(izi.events.keyDown().ENTER()).on(textInput);\r\n\t     *\r\n\t     *      izi.perform(behavior).when(izi.events.keyDown().F5().preventDefault()).on(document);\r\n\t     *\r\n\t     *      izi.perform(behavior).when(izi.events.keyDown().ctrl().alt().ONE()).on(document);\r\n\t     *\r\n\t     * @class Izi.events.Events\r\n\t     */\r\n\t    var Events = function Izi_events_Events() {\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for desired event type. If you need to watch keyboard events, please use\r\n\t     * <code>izi.events.keyDown()</code> or <code>izi.events.keyUp()</code> or <code>izi.events.keyboardEvent('keypress')</code>\r\n\t     * @member Izi.events.Events\r\n\t     * @param {String} eventType\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.event = function (eventType) {\r\n\t        return new module.events.EventConfig(eventType);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder. It is recommended to use only\r\n\t     * <code>izi.events.keyDown()</code> or <code>izi.events.keyUp()</code>, because of not cross browsers\r\n\t     * compatibility of \"keyPress\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @param {String} eventType\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    Events.prototype.keyboardEvent = function (eventType) {\r\n\t        return new module.events.KeyboardConfig(eventType);\r\n\t    };\r\n\t\r\n\t    // -------------------- Keyboard -----------------\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for keyboard \"keydown\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    Events.prototype.keyDown = function () {\r\n\t        return this.keyboardEvent('keydown');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for keyboard \"keyup\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.KeyboardConfig}\r\n\t     */\r\n\t    Events.prototype.keyUp = function () {\r\n\t        return this.keyboardEvent('keyup');\r\n\t    };\r\n\t\r\n\t    // -------------------- HTML Window -----------------\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for html window \"afterprint\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.afterPrint = function () {\r\n\t        return this.event('afterprint');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for html window \"beforeprint\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.beforePrint = function () {\r\n\t        return this.event('beforeprint');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for html window \"beforeonload\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.beforeOnLoad = function () {\r\n\t        return this.event('beforeonload');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for html window \"error\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.error = function () {\r\n\t        return this.event('error');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for html window \"haschange\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.hasChange = function () {\r\n\t        return this.event('haschange');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for html window \"load\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.load = function () {\r\n\t        return this.event('load');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for html window \"message\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.message = function () {\r\n\t        return this.event('message');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for html window \"offline\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.offline = function () {\r\n\t        return this.event('offline');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for html window \"line\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.line = function () {\r\n\t        return this.event('line');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for html window \"pagehide\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.pageHide = function () {\r\n\t        return this.event('pagehide');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for html window \"pageshow\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.pageShow = function () {\r\n\t        return this.event('pageshow');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for html window \"popstate\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.popState = function () {\r\n\t        return this.event('popstate');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for html window \"redo\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.redo = function () {\r\n\t        return this.event('redo');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for html window \"resize\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.resize = function () {\r\n\t        return this.event('resize');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for html window \"storage\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.storage = function () {\r\n\t        return this.event('storage');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for html window \"undo\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.undo = function () {\r\n\t        return this.event('undo');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for html window \"unload\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.unload = function () {\r\n\t        return this.event('unload');\r\n\t    };\r\n\t\r\n\t    // -------------------- Form element -----------------\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for form element \"blur\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.blur = function () {\r\n\t        return this.event('blur');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for form element \"change\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.change = function () {\r\n\t        return this.event('change');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for form element \"contextmenu\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.contextMenu = function () {\r\n\t        return this.event('contextmenu');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for form element \"focus\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.focus = function () {\r\n\t        return this.event('focus');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for form element \"formchange\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.formChange = function () {\r\n\t        return this.event('formchange');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for form element \"forminput\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.formInput = function () {\r\n\t        return this.event('forminput');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for form element \"input\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.input = function () {\r\n\t        return this.event('input');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for form element \"invalid\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.invalid = function () {\r\n\t        return this.event('invalid');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for form element \"reset\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.reset = function () {\r\n\t        return this.event('reset');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for form element \"select\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.select = function () {\r\n\t        return this.event('select');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for form element \"submit\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.submit = function () {\r\n\t        return this.event('submit');\r\n\t    };\r\n\t\r\n\t    // -------------------- Mouse -----------------\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for mouse \"click\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.click = function () {\r\n\t        return this.event('click');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for mouse \"dblclick\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.dblClick = function () {\r\n\t        return this.event('dblclick');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for mouse \"drag\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.drag = function () {\r\n\t        return this.event('drag');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for mouse \"dragend\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.dragEnd = function () {\r\n\t        return this.event('dragend');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for mouse \"dragenter\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.dragEnter = function () {\r\n\t        return this.event('dragenter');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for mouse \"dragleave\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.dragLeave = function () {\r\n\t        return this.event('dragleave');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for mouse \"dragover\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.dragOver = function () {\r\n\t        return this.event('dragover');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for mouse \"dragstart\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.dragStart = function () {\r\n\t        return this.event('dragstart');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for mouse \"drop\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.drop = function () {\r\n\t        return this.event('drop');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for mouse \"mousedown\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.mouseDown = function () {\r\n\t        return this.event('mousedown');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for mouse \"mousemove\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.mouseMove = function () {\r\n\t        return this.event('mousemove');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for mouse \"mouseout\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.mouseOut = function () {\r\n\t        return this.event('mouseout');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for mouse \"mouseover\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.mouseOver = function () {\r\n\t        return this.event('mouseover');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for mouse \"mouseup\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.mouseUp = function () {\r\n\t        return this.event('mouseup');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for mouse \"mousewheel\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.mouseWheel = function () {\r\n\t        return this.event('mousewheel');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for mouse \"scroll\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.scroll = function () {\r\n\t        return this.event('scroll');\r\n\t    };\r\n\t\r\n\t    // -------------------- Media -----------------\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for media \"abort\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.abort = function () {\r\n\t        return this.event('abort');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for media \"canplay\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.canPlay = function () {\r\n\t        return this.event('canplay');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for media \"canplaythrough\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.canPlayThrough = function () {\r\n\t        return this.event('canplaythrough');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for media \"durationchange\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.durationChange = function () {\r\n\t        return this.event('durationchange');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for media \"emptied\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.emptied = function () {\r\n\t        return this.event('emptied');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for media \"ended\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.ended = function () {\r\n\t        return this.event('ended');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for media \"loadeddata\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.loadedData = function () {\r\n\t        return this.event('loadeddata');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for media \"loadedmetadata\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.loadedMetaData = function () {\r\n\t        return this.event('loadedmetadata');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for media \"loadstart\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.loadStart = function () {\r\n\t        return this.event('loadstart');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for media \"pause\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.pause = function () {\r\n\t        return this.event('pause');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for media \"play\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.play = function () {\r\n\t        return this.event('play');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for media \"playing\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.playing = function () {\r\n\t        return this.event('playing');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for media \"progress\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.progress = function () {\r\n\t        return this.event('progress');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for media \"ratechange\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.rateChange = function () {\r\n\t        return this.event('ratechange');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for media \"readystatechange\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.readyStateChange = function () {\r\n\t        return this.event('readystatechange');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for media \"seeked\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.seeked = function () {\r\n\t        return this.event('seeked');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for media \"seeking\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.seeking = function () {\r\n\t        return this.event('seeking');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for media \"stalled\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.stalled = function () {\r\n\t        return this.event('stalled');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for media \"suspend\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.suspend = function () {\r\n\t        return this.event('suspend');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for media \"timeupdate\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.timeUpdate = function () {\r\n\t        return this.event('timeupdate');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for media \"volumechange\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.volumeChange = function () {\r\n\t        return this.event('volumechange');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for media \"waiting\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.waiting = function () {\r\n\t        return this.event('waiting');\r\n\t    };\r\n\t\r\n\t    // -------------------- Mobile -----------------\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for mobile \"touchstart\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.touchStart = function () {\r\n\t        return this.event('touchstart');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for mobile \"touchmove\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.touchMove = function () {\r\n\t        return this.event('touchmove');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for mobile \"touchend\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.touchEnd = function () {\r\n\t        return this.event('touchend');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for mobile \"touchcancel\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.touchCancel = function () {\r\n\t        return this.event('touchcancel');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for mobile \"touchenter\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.touchEnter = function () {\r\n\t        return this.event('touchenter');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for mobile \"touchlave\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.touchLave = function () {\r\n\t        return this.event('touchlave');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for mobile \"gesturestart\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.gestureStart = function () {\r\n\t        return this.event('gesturestart');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for mobile \"gesturechange\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.gestureChange = function () {\r\n\t        return this.event('gesturechange');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for mobile \"gestureend\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.gestureEnd = function () {\r\n\t        return this.event('gestureend');\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates fluent builder for mobile \"orientationchange\" event.\r\n\t     * @member Izi.events.Events\r\n\t     * @return {Izi.events.EventConfig}\r\n\t     */\r\n\t    Events.prototype.orientationChange = function () {\r\n\t        return this.event('orientationchange');\r\n\t    };\r\n\t\r\n\t    module.events.Events = Events;\r\n\t\r\n\t}(Izi);\r\n\t/**\r\n\t * @ignore\r\n\t * @requires debug.js\r\n\t * @requires behavior/register.js\r\n\t * @requires binding/register.js\r\n\t * @requires queue/register.js\r\n\t * @requires utils/typeOf.js\r\n\t * @requires utils/forEach.js\r\n\t * @requires utils/arrayContains.js\r\n\t * @requires ioc/BeansContext.js\r\n\t * @requires ioc/Config.js\r\n\t * @requires ioc/Injection.js\r\n\t * @requires ioc/bean/SingletonStrategy.js\r\n\t * @requires ioc/bean/LazySingletonStrategy.js\r\n\t * @requires ioc/bean/PrototypeStrategy.js\r\n\t * @requires model/Model.js\r\n\t * @requires events/Events.js\r\n\t */\r\n\t!function (module, global) {\r\n\t\r\n\t    var frameworks = {},\r\n\t        sanityCheckMethods = [\"arg\", \"sanityInjectTo\", \"sanityOf\", \"varargOf\"];\r\n\t\r\n\t    function initFramework(izi, framework) {\r\n\t        if (framework.behavior) {\r\n\t            izi.registerBehaviorImpl(framework.behavior);\r\n\t        }\r\n\t        if (framework.binding) {\r\n\t            izi.registerBindingImpl(framework.binding);\r\n\t        }\r\n\t        if (framework.queue) {\r\n\t            izi.registerQueueImpl(framework.queue);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function enableCompatibility(izi) {\r\n\t        if (global.izi) {\r\n\t            module.utils.forEach(sanityCheckMethods, function (method) {\r\n\t                if (global.izi[method]) {\r\n\t                    izi[method] = global.izi[method];\r\n\t                }\r\n\t            });\r\n\t        }\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * @class izi\r\n\t     * @constructor\r\n\t     * @param {String|Object} [framework]\r\n\t     * @param {Object} [globals]\r\n\t     *\r\n\t     * All <strong>izi</strong> fluent API entry points.\r\n\t     */\r\n\t    var Api = function Izi_Api(framework, globals) {\r\n\t        this.globals = globals || global;\r\n\t\r\n\t        enableCompatibility(this);\r\n\t\r\n\t        if (module.utils.typeOf(framework) === \"String\") {\r\n\t            framework = frameworks[framework];\r\n\t        }\r\n\t\r\n\t        if (framework) {\r\n\t            this._framework = framework;\r\n\t            initFramework(this, framework);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates beans context using passed config. It can be one configuration, like:\r\n\t     *\r\n\t     *     izi.bakeBeans({beanId: 'value'});\r\n\t     *\r\n\t     * Or multiple configurations as an array:\r\n\t     *\r\n\t     *     var config1 = {\r\n\t     *         bean1: 'value 1'\r\n\t     *     };\r\n\t     *     var config2 = {\r\n\t     *         bean2: 'value 2'\r\n\t     *     };\r\n\t     *\r\n\t     *     izi.bakeBeans([config1, config2]);\r\n\t     *\r\n\t     * @param {Object|Object[]} config One or multiple configurations\r\n\t     * @param {Izi.ioc.BeansContext} [parentContext]\r\n\t     * @return {Izi.ioc.BeansContext}\r\n\t     */\r\n\t    Api.prototype.bakeBeans = function (config, parentContext) {\r\n\t        return new module.ioc.BeansContext(this.globals, config, parentContext).initContext();\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates singleton bean definition using passed class type\r\n\t     *\r\n\t     * @param {Function|String} clazz constructor function or dotted string class definition\r\n\t     * @return {Izi.ioc.Config}\r\n\t     */\r\n\t    Api.prototype.instantiate = function (clazz) {\r\n\t        return new module.ioc.Config(clazz, module.ioc.bean.SingletonStrategy, this.globals);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates lazy singleton bean definition using passed class type\r\n\t     *\r\n\t     * @param {Function|String} clazz constructor function or dotted string class definition\r\n\t     * @return {Izi.ioc.Config}\r\n\t     */\r\n\t    Api.prototype.lazy = function (clazz) {\r\n\t        return new module.ioc.Config(clazz, module.ioc.bean.LazySingletonStrategy, this.globals);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates prototype bean definition using passed class type\r\n\t     * @param {Function|String} clazz constructor function or dotted string class definition\r\n\t     * @return {Izi.ioc.Config}\r\n\t     */\r\n\t    Api.prototype.protoOf = function (clazz) {\r\n\t        return new module.ioc.Config(clazz, module.ioc.bean.PrototypeStrategy, this.globals);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Injects dependency by its beanId or class type. It can be used as constructor dependency injection or by\r\n\t     * property dependency injection.\r\n\t     *\r\n\t     * @param {String|Function} beanIdOrType Bean id or constructor function or dotted string class definition\r\n\t     * @return {Izi.ioc.Injection}\r\n\t     */\r\n\t    Api.prototype.inject = function (beanIdOrType) {\r\n\t        if (!beanIdOrType) {\r\n\t            throw new Error(\"Trying to inject invalid empty bean\");\r\n\t        }\r\n\t        return new module.ioc.Injection(beanIdOrType);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Init behavior API. You can specify function and scope:\r\n\t     *\r\n\t     *     izi.perform(behavior.perform, behavior).when('click').on(button)\r\n\t     *\r\n\t     * ... or only behavior ('perform' function will be called by default):\r\n\t     *\r\n\t     *     izi.perform(behavior).when('click').on(button)\r\n\t     *\r\n\t     * ... or custom event registrar ('register' and 'unregister' functions are required):\r\n\t     *\r\n\t     *     var registrar = {\r\n\t     *\r\n\t     *         register: function (target) {\r\n\t     *             target.addEventListener(...);\r\n\t     *             target.addEventListener(...);\r\n\t     *             target.addEventListener(...);\r\n\t     *         },\r\n\t     *\r\n\t     *         unregister: function (target) {\r\n\t     *             target.removeEventListener(...);\r\n\t     *             target.removeEventListener(...);\r\n\t     *             target.removeEventListener(...);\r\n\t     *         }\r\n\t     *     };\r\n\t     *\r\n\t     *     izi.perform(registrar).on(target);\r\n\t     *\r\n\t     * ... or nothing to get grouping method:\r\n\t     *\r\n\t     *     var perform = izi.perform();\r\n\t     *\r\n\t     *     perform(behavior1).when(\"click\").on(button1);\r\n\t     *     perform(behavior2).when(\"click\").on(button2);\r\n\t     *\r\n\t     *     perform.stopObserving(); // will stop observing them all\r\n\t     *\r\n\t     * @noSanity\r\n\t     * @param {Function|Object} functionOrBehaviorOrRegistrar\r\n\t     * @param {Object} [scope]\r\n\t     * @return {Izi.behavior.Perform}\r\n\t     */\r\n\t    Api.prototype.perform = function (functionOrBehaviorOrRegistrar, scope) {\r\n\t        throw new Error(\"Register your behavior implementation first: izi.registerBehaviorImpl(Izi.behavior.impl.SomeImpl)\");\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Registers behavior implementation\r\n\t     *\r\n\t     * @sanity izi.sanityOf(\"registerBehaviorImpl()\").args(izi.arg(\"impl\").ofObject().havingFunctions(\"observeWidget\", \"observeKeyStroke\").havingProperty(\"defaultPerformFunction\")).check(arguments);\r\n\t     * @param {Object} impl Behavior implementation config\r\n\t     * @param {String} impl.defaultPerformFunction Name of default perform function called on behavior\r\n\t     * @param {Function} impl.observeWidget Function that starts observing widget and returns function that stops observing. This function gets following arguments: <code>widget, eventConfig, action, scope, options</code>\r\n\t     * @param {Function} impl.observeKeyStroke Function that starts observing keyboard and returns function that stops observing. This function gets following arguments: <code>widget, keyboardConfig, action, scope, options</code>\r\n\t     */\r\n\t    Api.prototype.registerBehaviorImpl = function (impl) {\r\n\t        this.perform = module.behavior.register(impl, this);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Init binding API\r\n\t     * @sanity izi.sanityOf(\"bind()\").args().args(izi.arg(\"options\").ofObject()).check(arguments);\r\n\t     * @param {Object} [options] Advanced options\r\n\t     * @param {Boolean} [options.auto=true] Start listen for changes automatically.\r\n\t     * @param {Boolean} [options.executeAtStartup=true] Execute binding immediately after creation. It works only when <code>auto=true</code>.\r\n\t     * @param {Boolean} [options.debug=false] Log every binding execution on browser's console.\r\n\t     * @return {Izi.binding.Bind}\r\n\t     */\r\n\t    Api.prototype.bind = function (options) {\r\n\t        throw new Error(\"Register your binding implementation first: izi.registerBindingImpl(Izi.binding.impl.SomeImpl)\");\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Registers binding implementation\r\n\t     * @sanity izi.sanityOf(\"registerBindingImpl()\").args(izi.arg(\"impl\").ofObject().havingProperties(\"changeObservers\", \"valueReaders\", \"valueWriters\")).check(arguments);izi.sanityOf(\"impl.changeObservers\").args(izi.varargOf(izi.arg().ofFunction())).check(impl.changeObservers);izi.sanityOf(\"impl.valueReaders\").args(izi.varargOf(izi.arg().ofFunction())).check(impl.valueReaders);izi.sanityOf(\"impl.valueWriters\").args(izi.varargOf(izi.arg().ofFunction())).check(impl.valueWriters);\r\n\t     * @param impl Binding implementation config\r\n\t     * @param {Function[]} impl.changeObservers Array of change observers functions. These functions get following parameters: <code>source, sourceProperty, target, targetProperty, transferValueFn</code>\r\n\t     * @param {Function[]} impl.valueReaders Array of functions that can read value from given object and property. These functions get following arguments: <code>object, property</code>\r\n\t     * @param {Function[]} impl.valueWriters Array of functions that can write value on given object and property. These functions get following arguments: <code>object, property, value</code>\r\n\t     */\r\n\t    Api.prototype.registerBindingImpl = function (impl) {\r\n\t        this.bind = module.binding.register(impl);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Creates class of izi model. Use this model in your project for data binding only when your framework\r\n\t     * doesn't provide 'observable' model.\r\n\t     *\r\n\t     * @sanity izi.sanityOf(\"izi.modelOf()\").args(izi.arg(\"config\").ofObject().havingProperty(\"fields\")).check(arguments);izi.sanityOf(\"config.fields\").args(izi.varargOf(izi.arg(\"field\").ofObject().havingProperty(\"name\"), izi.arg(\"fieldName\").ofString())).check(config.fields);\r\n\t     * @param {Object} config Model fields configuration. It must contain <strong>fields</strong> array of fields objects.\r\n\t     * @param {Array} config.fields Configuration of model fields\r\n\t     * @return {Function}\r\n\t     */\r\n\t    Api.prototype.modelOf = function (config) {\r\n\t        return module.model.Model.define(config);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     *\r\n\t     * @type {Izi.events.Events}\r\n\t     */\r\n\t    Api.prototype.events = new module.events.Events();\r\n\t\r\n\t    /**\r\n\t     * Init synchronized queue API\r\n\t     * @nosanity\r\n\t     * @param {Object} [config] Queue configuration\r\n\t     * @param {Object} [config.scope] default scope for all functions executions\r\n\t     * @param {Number} [config.timeout=\"0\"] default timeout for synchronized tasks - 0 is a default which means no timeout\r\n\t     * @param {String} [config.debug] use any String as an identifier of the queue that will be logged in browser console\r\n\t     * @return {Izi.queue.Queue}\r\n\t     */\r\n\t    Api.prototype.queue = function (config) {\r\n\t        throw new Error(\"Register your queue implementation first: izi.registerQueueImpl(Izi.queue.impl.SomeImpl)\");\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * Registers queue implementation\r\n\t     * @sanity izi.sanityOf(\"registerQueueImpl()\").args(izi.arg(\"impl\").ofObject().havingFunctions(\"dispatchEvent\", \"createEventDispatcher\")).check(arguments);\r\n\t     * @param {Object} impl\r\n\t     * @param {Function} impl.dispatchEvent\r\n\t     * @param {Function} impl.createEventDispatcher\r\n\t     */\r\n\t    Api.prototype.registerQueueImpl = function (impl) {\r\n\t        this.queue = module.queue.register(impl, this);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     *\r\n\t     * @param {String|Object|null} [framework]\r\n\t     * @param {Object} [globals]\r\n\t     * @returns {izi}\r\n\t     */\r\n\t    Api.prototype.newInstance = function (framework, globals) {\r\n\t        return new Api(framework || this._framework, globals);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     *\r\n\t     * @param {Object} globals\r\n\t     * @returns {izi}\r\n\t     */\r\n\t    Api.prototype.sandboxed = function (globals) {\r\n\t        return this.newInstance(null, globals);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     *\r\n\t     * @param {String} name\r\n\t     * @param {Object} impl\r\n\t     * @param {Object} impl.behavior\r\n\t     * @param {Object} impl.binding\r\n\t     * @param {Object} impl.queue\r\n\t     */\r\n\t    module.registerFramework = function (name, impl) {\r\n\t        frameworks[name] = impl;\r\n\t    };\r\n\t\r\n\t    Api.prototype.module = module;\r\n\t    module.Api = Api;\r\n\t\r\n\t    izi = new Api();\r\n\t\r\n\t}(Izi, this);\r\n\t        return izi;\r\n\t    }\r\n\t    if (\"function\" === \"function\" && typeof __webpack_require__(3) === \"object\" && __webpack_require__(3).vendor !== \"dojotoolkit.org\") {\r\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (amdFactory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t    } else if (true) {\r\n\t        module.exports = amdFactory();\r\n\t    } else {\r\n\t        global.izi = amdFactory();\r\n\t    }\r\n\t})(this);\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {module.exports = __webpack_amd_options__;\r\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, {}))\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _assign = __webpack_require__(5);\n\t\n\tvar _assign2 = _interopRequireDefault(_assign);\n\t\n\tvar _classCallCheck2 = __webpack_require__(42);\n\t\n\tvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\t\n\tvar _createClass2 = __webpack_require__(43);\n\t\n\tvar _createClass3 = _interopRequireDefault(_createClass2);\n\t\n\texports.default = mainViewFactory;\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction mainViewFactory(Vue) {\n\t\n\t    return function () {\n\t        function MainView() {\n\t            var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n\t                el = _ref.el,\n\t                component = _ref.component,\n\t                _ref$proxyMethods = _ref.proxyMethods,\n\t                proxyMethods = _ref$proxyMethods === undefined ? true : _ref$proxyMethods;\n\t\n\t            (0, _classCallCheck3.default)(this, MainView);\n\t\n\t            this.el = el;\n\t            this.component = component;\n\t            this.proxyMethods = proxyMethods;\n\t        }\n\t\n\t        (0, _createClass3.default)(MainView, [{\n\t            key: \"iziContext\",\n\t            value: function iziContext(context) {\n\t                requireOption(\"el\", this.el);\n\t                requireOption(\"component\", this.component);\n\t\n\t                this.context = context;\n\t                this.vueInstance = this._createVueInstance();\n\t\n\t                if (this.proxyMethods) {\n\t                    this._createProxyMethods();\n\t                }\n\t            }\n\t        }, {\n\t            key: \"iziDestroy\",\n\t            value: function iziDestroy() {\n\t                if (this.vueInstance) {\n\t                    this.vueInstance.$destroy(true);\n\t                    this.vueInstance = null;\n\t                }\n\t            }\n\t        }, {\n\t            key: \"getVueInstance\",\n\t            value: function getVueInstance() {\n\t                return this.vueInstance;\n\t            }\n\t        }, {\n\t            key: \"_createVueInstance\",\n\t            value: function _createVueInstance() {\n\t                var context = this.context;\n\t                var el = this.el;\n\t\n\t                if (typeof this.component === \"function\") {\n\t                    var VueComponent = this.component.extend({\n\t                        methods: {\n\t                            __iziWire: function __iziWire(child) {\n\t                                context.wire(child);\n\t                            },\n\t                            __iziDetach: function __iziDetach(bean) {\n\t                                context.detachBean(bean);\n\t                            }\n\t                        }\n\t                    });\n\t                    return new VueComponent({ el: el });\n\t                } else {\n\t                    var componentConfig = {};\n\t\n\t                    (0, _assign2.default)(componentConfig, this.component, {\n\t                        el: this.el,\n\t                        methods: (0, _assign2.default)(componentConfig || {}, {\n\t                            __iziWire: function __iziWire(child) {\n\t                                context.wire(child);\n\t                            }\n\t                        })\n\t                    });\n\t\n\t                    return new Vue(componentConfig);\n\t                }\n\t            }\n\t        }, {\n\t            key: \"_createProxyMethods\",\n\t            value: function _createProxyMethods() {\n\t                var vueInstance = this.getVueInstance();\n\t                var methods = getMethodNames(vueInstance);\n\t\n\t                methods.forEach(function (methodName) {\n\t                    this[methodName] = function () {\n\t                        return vueInstance[methodName].apply(vueInstance, arguments);\n\t                    };\n\t                }, this);\n\t            }\n\t        }]);\n\t        return MainView;\n\t    }();\n\t}\n\t\n\tfunction requireOption(name, value) {\n\t    if (!value) {\n\t        throw new Error(\"Option \" + name + \" is required\");\n\t    }\n\t}\n\t\n\tfunction getMethodNames(obj) {\n\t    var methods = [];\n\t\n\t    for (var methodName in obj) {\n\t        var method = obj[methodName];\n\t\n\t        if (typeof method === \"function\" && !/^_/.test(methodName)) {\n\t            methods.push(methodName);\n\t        }\n\t    }\n\t\n\t    return methods;\n\t}\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(6), __esModule: true };\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(7);\n\tmodule.exports = __webpack_require__(10).Object.assign;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// 19.1.3.1 Object.assign(target, source)\n\tvar $export = __webpack_require__(8);\n\t\n\t$export($export.S + $export.F, 'Object', { assign: __webpack_require__(23) });\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar global = __webpack_require__(9);\n\tvar core = __webpack_require__(10);\n\tvar ctx = __webpack_require__(11);\n\tvar hide = __webpack_require__(13);\n\tvar PROTOTYPE = 'prototype';\n\t\n\tvar $export = function (type, name, source) {\n\t  var IS_FORCED = type & $export.F;\n\t  var IS_GLOBAL = type & $export.G;\n\t  var IS_STATIC = type & $export.S;\n\t  var IS_PROTO = type & $export.P;\n\t  var IS_BIND = type & $export.B;\n\t  var IS_WRAP = type & $export.W;\n\t  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n\t  var expProto = exports[PROTOTYPE];\n\t  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n\t  var key, own, out;\n\t  if (IS_GLOBAL) source = name;\n\t  for (key in source) {\n\t    // contains in native\n\t    own = !IS_FORCED && target && target[key] !== undefined;\n\t    if (own && key in exports) continue;\n\t    // export native or passed\n\t    out = own ? target[key] : source[key];\n\t    // prevent global pollution for namespaces\n\t    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n\t    // bind timers to global for call from export context\n\t    : IS_BIND && own ? ctx(out, global)\n\t    // wrap global constructors for prevent change them in library\n\t    : IS_WRAP && target[key] == out ? (function (C) {\n\t      var F = function (a, b, c) {\n\t        if (this instanceof C) {\n\t          switch (arguments.length) {\n\t            case 0: return new C();\n\t            case 1: return new C(a);\n\t            case 2: return new C(a, b);\n\t          } return new C(a, b, c);\n\t        } return C.apply(this, arguments);\n\t      };\n\t      F[PROTOTYPE] = C[PROTOTYPE];\n\t      return F;\n\t    // make static versions for prototype methods\n\t    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n\t    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n\t    if (IS_PROTO) {\n\t      (exports.virtual || (exports.virtual = {}))[key] = out;\n\t      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n\t      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n\t    }\n\t  }\n\t};\n\t// type bitmap\n\t$export.F = 1;   // forced\n\t$export.G = 2;   // global\n\t$export.S = 4;   // static\n\t$export.P = 8;   // proto\n\t$export.B = 16;  // bind\n\t$export.W = 32;  // wrap\n\t$export.U = 64;  // safe\n\t$export.R = 128; // real proto method for `library`\n\tmodule.exports = $export;\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n\t// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n\tvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n\t  ? window : typeof self != 'undefined' && self.Math == Math ? self\n\t  // eslint-disable-next-line no-new-func\n\t  : Function('return this')();\n\tif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\n\tvar core = module.exports = { version: '2.5.0' };\n\tif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// optional / simple context binding\n\tvar aFunction = __webpack_require__(12);\n\tmodule.exports = function (fn, that, length) {\n\t  aFunction(fn);\n\t  if (that === undefined) return fn;\n\t  switch (length) {\n\t    case 1: return function (a) {\n\t      return fn.call(that, a);\n\t    };\n\t    case 2: return function (a, b) {\n\t      return fn.call(that, a, b);\n\t    };\n\t    case 3: return function (a, b, c) {\n\t      return fn.call(that, a, b, c);\n\t    };\n\t  }\n\t  return function (/* ...args */) {\n\t    return fn.apply(that, arguments);\n\t  };\n\t};\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function (it) {\n\t  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n\t  return it;\n\t};\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar dP = __webpack_require__(14);\n\tvar createDesc = __webpack_require__(22);\n\tmodule.exports = __webpack_require__(18) ? function (object, key, value) {\n\t  return dP.f(object, key, createDesc(1, value));\n\t} : function (object, key, value) {\n\t  object[key] = value;\n\t  return object;\n\t};\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar anObject = __webpack_require__(15);\n\tvar IE8_DOM_DEFINE = __webpack_require__(17);\n\tvar toPrimitive = __webpack_require__(21);\n\tvar dP = Object.defineProperty;\n\t\n\texports.f = __webpack_require__(18) ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n\t  anObject(O);\n\t  P = toPrimitive(P, true);\n\t  anObject(Attributes);\n\t  if (IE8_DOM_DEFINE) try {\n\t    return dP(O, P, Attributes);\n\t  } catch (e) { /* empty */ }\n\t  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n\t  if ('value' in Attributes) O[P] = Attributes.value;\n\t  return O;\n\t};\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(16);\n\tmodule.exports = function (it) {\n\t  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n\t  return it;\n\t};\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function (it) {\n\t  return typeof it === 'object' ? it !== null : typeof it === 'function';\n\t};\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = !__webpack_require__(18) && !__webpack_require__(19)(function () {\n\t  return Object.defineProperty(__webpack_require__(20)('div'), 'a', { get: function () { return 7; } }).a != 7;\n\t});\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Thank's IE8 for his funny defineProperty\n\tmodule.exports = !__webpack_require__(19)(function () {\n\t  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n\t});\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function (exec) {\n\t  try {\n\t    return !!exec();\n\t  } catch (e) {\n\t    return true;\n\t  }\n\t};\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(16);\n\tvar document = __webpack_require__(9).document;\n\t// typeof document.createElement is 'object' in old IE\n\tvar is = isObject(document) && isObject(document.createElement);\n\tmodule.exports = function (it) {\n\t  return is ? document.createElement(it) : {};\n\t};\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// 7.1.1 ToPrimitive(input [, PreferredType])\n\tvar isObject = __webpack_require__(16);\n\t// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n\t// and the second argument - flag - preferred type is a string\n\tmodule.exports = function (it, S) {\n\t  if (!isObject(it)) return it;\n\t  var fn, val;\n\t  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n\t  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n\t  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n\t  throw TypeError(\"Can't convert object to primitive value\");\n\t};\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function (bitmap, value) {\n\t  return {\n\t    enumerable: !(bitmap & 1),\n\t    configurable: !(bitmap & 2),\n\t    writable: !(bitmap & 4),\n\t    value: value\n\t  };\n\t};\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// 19.1.2.1 Object.assign(target, source, ...)\n\tvar getKeys = __webpack_require__(24);\n\tvar gOPS = __webpack_require__(39);\n\tvar pIE = __webpack_require__(40);\n\tvar toObject = __webpack_require__(41);\n\tvar IObject = __webpack_require__(28);\n\tvar $assign = Object.assign;\n\t\n\t// should work with symbols and should have deterministic property order (V8 bug)\n\tmodule.exports = !$assign || __webpack_require__(19)(function () {\n\t  var A = {};\n\t  var B = {};\n\t  // eslint-disable-next-line no-undef\n\t  var S = Symbol();\n\t  var K = 'abcdefghijklmnopqrst';\n\t  A[S] = 7;\n\t  K.split('').forEach(function (k) { B[k] = k; });\n\t  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n\t}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n\t  var T = toObject(target);\n\t  var aLen = arguments.length;\n\t  var index = 1;\n\t  var getSymbols = gOPS.f;\n\t  var isEnum = pIE.f;\n\t  while (aLen > index) {\n\t    var S = IObject(arguments[index++]);\n\t    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n\t    var length = keys.length;\n\t    var j = 0;\n\t    var key;\n\t    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n\t  } return T;\n\t} : $assign;\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.14 / 15.2.3.14 Object.keys(O)\n\tvar $keys = __webpack_require__(25);\n\tvar enumBugKeys = __webpack_require__(38);\n\t\n\tmodule.exports = Object.keys || function keys(O) {\n\t  return $keys(O, enumBugKeys);\n\t};\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar has = __webpack_require__(26);\n\tvar toIObject = __webpack_require__(27);\n\tvar arrayIndexOf = __webpack_require__(31)(false);\n\tvar IE_PROTO = __webpack_require__(35)('IE_PROTO');\n\t\n\tmodule.exports = function (object, names) {\n\t  var O = toIObject(object);\n\t  var i = 0;\n\t  var result = [];\n\t  var key;\n\t  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n\t  // Don't enum bug & hidden keys\n\t  while (names.length > i) if (has(O, key = names[i++])) {\n\t    ~arrayIndexOf(result, key) || result.push(key);\n\t  }\n\t  return result;\n\t};\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\n\tvar hasOwnProperty = {}.hasOwnProperty;\n\tmodule.exports = function (it, key) {\n\t  return hasOwnProperty.call(it, key);\n\t};\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// to indexed object, toObject with fallback for non-array-like ES3 strings\n\tvar IObject = __webpack_require__(28);\n\tvar defined = __webpack_require__(30);\n\tmodule.exports = function (it) {\n\t  return IObject(defined(it));\n\t};\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// fallback for non-array-like ES3 and non-enumerable old V8 strings\n\tvar cof = __webpack_require__(29);\n\t// eslint-disable-next-line no-prototype-builtins\n\tmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n\t  return cof(it) == 'String' ? it.split('') : Object(it);\n\t};\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports) {\n\n\tvar toString = {}.toString;\n\t\n\tmodule.exports = function (it) {\n\t  return toString.call(it).slice(8, -1);\n\t};\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports) {\n\n\t// 7.2.1 RequireObjectCoercible(argument)\n\tmodule.exports = function (it) {\n\t  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n\t  return it;\n\t};\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// false -> Array#indexOf\n\t// true  -> Array#includes\n\tvar toIObject = __webpack_require__(27);\n\tvar toLength = __webpack_require__(32);\n\tvar toAbsoluteIndex = __webpack_require__(34);\n\tmodule.exports = function (IS_INCLUDES) {\n\t  return function ($this, el, fromIndex) {\n\t    var O = toIObject($this);\n\t    var length = toLength(O.length);\n\t    var index = toAbsoluteIndex(fromIndex, length);\n\t    var value;\n\t    // Array#includes uses SameValueZero equality algorithm\n\t    // eslint-disable-next-line no-self-compare\n\t    if (IS_INCLUDES && el != el) while (length > index) {\n\t      value = O[index++];\n\t      // eslint-disable-next-line no-self-compare\n\t      if (value != value) return true;\n\t    // Array#indexOf ignores holes, Array#includes - not\n\t    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n\t      if (O[index] === el) return IS_INCLUDES || index || 0;\n\t    } return !IS_INCLUDES && -1;\n\t  };\n\t};\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// 7.1.15 ToLength\n\tvar toInteger = __webpack_require__(33);\n\tvar min = Math.min;\n\tmodule.exports = function (it) {\n\t  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n\t};\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\n\t// 7.1.4 ToInteger\n\tvar ceil = Math.ceil;\n\tvar floor = Math.floor;\n\tmodule.exports = function (it) {\n\t  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n\t};\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar toInteger = __webpack_require__(33);\n\tvar max = Math.max;\n\tvar min = Math.min;\n\tmodule.exports = function (index, length) {\n\t  index = toInteger(index);\n\t  return index < 0 ? max(index + length, 0) : min(index, length);\n\t};\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar shared = __webpack_require__(36)('keys');\n\tvar uid = __webpack_require__(37);\n\tmodule.exports = function (key) {\n\t  return shared[key] || (shared[key] = uid(key));\n\t};\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar global = __webpack_require__(9);\n\tvar SHARED = '__core-js_shared__';\n\tvar store = global[SHARED] || (global[SHARED] = {});\n\tmodule.exports = function (key) {\n\t  return store[key] || (store[key] = {});\n\t};\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports) {\n\n\tvar id = 0;\n\tvar px = Math.random();\n\tmodule.exports = function (key) {\n\t  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n\t};\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\n\t// IE 8- don't enum bug keys\n\tmodule.exports = (\n\t  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n\t).split(',');\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports) {\n\n\texports.f = Object.getOwnPropertySymbols;\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports) {\n\n\texports.f = {}.propertyIsEnumerable;\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// 7.1.13 ToObject(argument)\n\tvar defined = __webpack_require__(30);\n\tmodule.exports = function (it) {\n\t  return Object(defined(it));\n\t};\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\texports.default = function (instance, Constructor) {\n\t  if (!(instance instanceof Constructor)) {\n\t    throw new TypeError(\"Cannot call a class as a function\");\n\t  }\n\t};\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tvar _defineProperty = __webpack_require__(44);\n\t\n\tvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = function () {\n\t  function defineProperties(target, props) {\n\t    for (var i = 0; i < props.length; i++) {\n\t      var descriptor = props[i];\n\t      descriptor.enumerable = descriptor.enumerable || false;\n\t      descriptor.configurable = true;\n\t      if (\"value\" in descriptor) descriptor.writable = true;\n\t      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n\t    }\n\t  }\n\t\n\t  return function (Constructor, protoProps, staticProps) {\n\t    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n\t    if (staticProps) defineProperties(Constructor, staticProps);\n\t    return Constructor;\n\t  };\n\t}();\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(45), __esModule: true };\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(46);\n\tvar $Object = __webpack_require__(10).Object;\n\tmodule.exports = function defineProperty(it, key, desc) {\n\t  return $Object.defineProperty(it, key, desc);\n\t};\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar $export = __webpack_require__(8);\n\t// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n\t$export($export.S + $export.F * !__webpack_require__(18), 'Object', { defineProperty: __webpack_require__(14).f });\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = vueDataInjectorFactory;\n\tfunction vueDataInjectorFactory(Vue) {\n\t\n\t    return function vueDataInjector(target, prop, dependency) {\n\t        if (dependency && !dependency.__ob__) {\n\t            new Vue({\n\t                data: {\n\t                    dependency: dependency\n\t                }\n\t            });\n\t        }\n\t        Vue.set(target, prop, dependency);\n\t    };\n\t}\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\texports.default = function (vueDataInjector) {\n\t    return {\n\t        created: function created() {\n\t            unwrap$optionsIziInject(this.$options, _iziJsDebug2.default, vueDataInjector);\n\t            moveInjectionsToVueInstance(this);\n\t            var parent = this.__iziFindParent();\n\t            if (parent) {\n\t                parent.__iziWire(this);\n\t            }\n\t        },\n\t\n\t        methods: {\n\t            __iziFindParent: function __iziFindParent() {\n\t                var $parent = this;\n\t                var found = false;\n\t                while ($parent && !found) {\n\t                    if ($parent.__iziWire) {\n\t                        found = true;\n\t                        break;\n\t                    }\n\t                    $parent = $parent.$parent;\n\t                }\n\t                if (found) {\n\t                    return $parent;\n\t                } else {\n\t                    return null;\n\t                }\n\t            }\n\t        },\n\t\n\t        beforeDestroy: function beforeDestroy() {\n\t            console.log('before destroy izi wired component');\n\t            var parent = this.__iziFindParent();\n\t            if (parent) {\n\t                console.log('found parent');\n\t                parent.__iziDetach(this);\n\t            }\n\t        }\n\t    };\n\t};\n\t\n\tvar _iziJsDebug = __webpack_require__(2);\n\t\n\tvar _iziJsDebug2 = _interopRequireDefault(_iziJsDebug);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction unwrap$optionsIziInject($options, izi, vueDataInjector) {\n\t    if (!$options.iziInject) {\n\t        return;\n\t    }\n\t\n\t    for (var prop in $options.iziInject) {\n\t        var beanId = $options.iziInject[prop];\n\t        if (prop !== \"data\") {\n\t            $options[prop] = izi.inject(beanId);\n\t        } else {\n\t            unwrapDataInjection($options, izi, vueDataInjector);\n\t        }\n\t    }\n\t}\n\t\n\tfunction unwrapDataInjection($options, izi, vueDataInjector) {\n\t    var data = $options.iziInject.data;\n\t\n\t    if (!data) {\n\t        return;\n\t    }\n\t\n\t    for (var prop in data) {\n\t        var beanId = data[prop];\n\t        $options[prop] = izi.inject(beanId).by(vueDataInjector);\n\t    }\n\t}\n\t\n\tfunction moveInjectionsToVueInstance(vueInstance) {\n\t    for (var prop in vueInstance.$options) {\n\t        var injection = vueInstance.$options[prop];\n\t        if (injection && injection.isIziInjection) {\n\t            vueInstance[prop] = injection;\n\t        }\n\t    }\n\t}\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// izi-vue.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f561fc7484a6747914e5","import izi from \"./izi-vue\";\r\n\r\nmodule.exports = izi;\n\n\n// WEBPACK FOOTER //\n// ./src/main/index.js","import izi from \"../../../node_modules/izi-js/dist/izi-js-debug\";\r\n\r\nimport mainViewFactory from \"./mainViewFactory\";\r\nimport vueDataInjectorFactory from \"./vueDataInjectorFactory\";\r\nimport iziInjectMixinFactory from \"./iziInjectMixinFactory\";\r\n\r\nizi.iziInjectMixinFactory = iziInjectMixinFactory;\r\n\r\nizi.createVueHelpers = function (Vue, vueDataInjector = vueDataInjectorFactory(Vue)) {\r\n    return {\r\n        MainView: mainViewFactory(Vue),\r\n        iziInjectMixin: iziInjectMixinFactory(vueDataInjector)\r\n    }\r\n};\r\n\r\nexport default izi;\n\n\n// WEBPACK FOOTER //\n// ./src/main/izi-vue/index.js","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2014 izi-js contributors\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n(function (global) {\r\n    function amdFactory() {\r\n\r\nvar izi,\r\n    Izi = {\r\n        ioc: {\r\n            bean: {}\r\n        },\r\n        utils: {},\r\n        model: {},\r\n        behavior: {\r\n            impl: {}\r\n        },\r\n        binding: {\r\n            impl: {\r\n                nested: {}\r\n            }\r\n        },\r\n        events: {\r\n        },\r\n        queue: {\r\n            impl: {}\r\n        }\r\n    };\r\n// #ifdef DEBUG\r\nIzi.isDebug = true;\r\n// #endif\r\n!function (module) {\r\n    /**\r\n     * @member Izi.utils\r\n     * @method\r\n     * @private\r\n     * @param {Array} array\r\n     * @param {Function} item\r\n     * @param {Object} scope\r\n     */\r\n    module.utils.forEach = (function () {\r\n\r\n        function byForEach(array, fn, scope) {\r\n            Array.prototype.forEach.call(array, fn, scope);\r\n        }\r\n\r\n        function byLoop(array, fn, scope) {\r\n            var i,\r\n                ln = array.length;\r\n\r\n            for (i = 0; i < ln; i = i + 1) {\r\n                fn.call(scope, array[i], i, array);\r\n            }\r\n        }\r\n\r\n        function hasForEach() {\r\n            return (typeof Array.prototype.forEach) === 'function';\r\n        }\r\n\r\n        return hasForEach() ? byForEach : byLoop;\r\n    }());\r\n}(Izi);\r\n!function (module) {\r\n    /**\r\n     * @member Izi.utils\r\n     * @private\r\n     * @param value\r\n     * @return {String}\r\n     */\r\n    module.utils.typeOf = function (value) {\r\n        if (value === undefined) {\r\n            return 'undefined';\r\n        } else if (value === null) {\r\n            return 'null';\r\n        }\r\n\r\n        switch (typeof value)  {\r\n            case 'string':\r\n                return 'String';\r\n            case 'number':\r\n                return 'Number';\r\n            case 'boolean':\r\n                return 'Boolean';\r\n            case 'function':\r\n                return 'Function';\r\n        }\r\n\r\n        switch (Object.prototype.toString.call(value)) {\r\n            case '[object Array]':\r\n                return 'Array';\r\n            case '[object Date]':\r\n                return 'Date';\r\n            case '[object RegExp]':\r\n                return 'RegExp';\r\n            case '[object Boolean]':\r\n                return 'Boolean';\r\n            case '[object Number]':\r\n                return 'Number';\r\n        }\r\n\r\n        if (typeof value === 'object') {\r\n            return 'Object';\r\n        } else {\r\n            throw new Error(\"Couldn't find type of given value\");\r\n        }\r\n    };\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires ../utils/forEach.js\r\n * @requires ../utils/typeOf.js\r\n */\r\n!function (module) {\r\n\r\n    /**\r\n     * After <code>izi.perform(behavior).when('click').on(widget)...</code> behavior API\r\n     * @class Izi.behavior.OnWidget\r\n     * @constructor\r\n     * @private\r\n     * @param {Izi.behavior.Config} config\r\n     */\r\n    var OnWidget = function Izi_behavior_OnWidget(config) {\r\n        var action = config.getAction(),\r\n            scope = config.getScope(),\r\n            events = config.getEvents(),\r\n            eventOptions = config.getEventOptions(),\r\n            widget = config.getDispatcher(),\r\n            impl = config.getImpl(),\r\n            me = this;\r\n\r\n\r\n        function startObserving() {\r\n            me.observers = [];\r\n\r\n            module.utils.forEach(events, function (eventConfig) {\r\n\r\n                if (eventConfig.isKeyboardEventConfig) {\r\n                    if (widget.iziObserveKeyStroke) {\r\n                        me.observers.push(widget.iziObserveKeyStroke(eventConfig, action, scope, eventOptions));\r\n                    } else {\r\n                        me.observers.push(impl.observeKeyStroke(widget, eventConfig, action, scope, eventOptions));\r\n                    }\r\n\r\n                } else if (eventConfig.isEventConfig) {\r\n                    if (widget.iziObserveWidget) {\r\n                        me.observers.push(widget.iziObserveWidget(eventConfig, action, scope, eventOptions));\r\n                    } else {\r\n                        me.observers.push(impl.observeWidget(widget, eventConfig, action, scope, eventOptions));\r\n                    }\r\n\r\n                } else if (module.utils.typeOf(eventConfig) === \"Function\") {\r\n                    me.observers.push(eventConfig(widget, action, scope, eventOptions));\r\n\r\n                } else {\r\n                    throw new Error(\"Incorrect event type. Expecting izi.event.* or 'eventType' or function(target, action, scope, eventOptions)\");\r\n                }\r\n            });\r\n        }\r\n\r\n        startObserving();\r\n        config.behavior = this;\r\n    };\r\n\r\n    /**\r\n     * Stops observing the widget\r\n     * @member Izi.behavior.OnWidget\r\n     */\r\n    OnWidget.prototype.stopObserving = function () {\r\n        module.utils.forEach(this.observers, function (observer) {\r\n            observer();\r\n        });\r\n    };\r\n\r\n    module.behavior.OnWidget = OnWidget;\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires OnWidget.js\r\n */\r\n!function (module) {\r\n\r\n    /**\r\n     * After `izi.perform(behavior).when('click')...` behavior API\r\n     * @class Izi.behavior.WhenWidget\r\n     * @constructor\r\n     * @private\r\n     * @param {Izi.behavior.Config} config\r\n     */\r\n    var WhenWidget = function Izi_behavior_WhenWidget(config) {\r\n        this.config = config;\r\n    };\r\n\r\n    /**\r\n     * Widget declaration. You can pass directly widget instance or object containing widget on **delegatedIn** property.\r\n     *\r\n     *     var showMessage = new ShowMessage();\r\n     *     var button = new Button();\r\n     *     var wrapper = {\r\n     *         delegatedIn: button\r\n     *     };\r\n     *\r\n     *     izi.perform(showMessage).when('click').on(button);\r\n     *\r\n     *     // will work also for:\r\n     *     izi.perform(showMessage).when('click').on(wrapper);\r\n     *\r\n     *\r\n     * @member Izi.behavior.WhenWidget\r\n     * @param {*} widget Widget that should be observed.\r\n     * @return {Izi.behavior.OnWidget}\r\n     */\r\n    WhenWidget.prototype.on = function (widget) {\r\n        return new module.behavior.OnWidget(this.config.withDispatcher(widget));\r\n    };\r\n\r\n    module.behavior.WhenWidget = WhenWidget;\r\n\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires ../utils/forEach.js\r\n */\r\n!function (module) {\r\n\r\n    /**\r\n     * After <code>izi.perform(behavior).whenChangeOf('property1', 'property2').on(model)...</code> behavior API\r\n     * @class Izi.behavior.OnModel\r\n     * @constructor\r\n     * @private\r\n     * @param {Izi.behavior.Config} config\r\n     */\r\n    module.behavior.OnModel = function Izi_behavior_OnModel(config) {\r\n        var action = config.getAction(),\r\n            scope = config.getScope(),\r\n            model = config.getDispatcher(),\r\n            modelProperties = config.getModelProperties(),\r\n            bindings = [];\r\n\r\n        config.behavior = this;\r\n\r\n        function triggerAction() {\r\n            action.apply(scope, arguments);\r\n        }\r\n\r\n        module.utils.forEach(modelProperties, function (property) {\r\n            bindings.push(config.iziApi.bind({executeAtStartup: false}).valueOf(model, property).to(triggerAction));\r\n        });\r\n\r\n        /**\r\n         * Stops observing the model\r\n         */\r\n        this.stopObserving = function () {\r\n            module.utils.forEach(bindings, function (binding) {\r\n                binding.unbind();\r\n            });\r\n        };\r\n    };\r\n\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires OnModel.js\r\n */\r\n!function (module) {\r\n\r\n    /**\r\n     * After `izi.perform(behavior).whenChangeOf('firstName')...` behavior API\r\n     * @class Izi.behavior.WhenModel\r\n     * @constructor\r\n     * @private\r\n     * @param {Izi.behavior.Config} config\r\n     */\r\n    var WhenModel = function Izi_behavior_WhenModel(config) {\r\n        this.config = config;\r\n    };\r\n\r\n    /**\r\n     * Model declaration. You can pass directly model instance or object containing model on <strong>delegatedIn</strong> property.\r\n     *\r\n     *     var showFullName = new ShowFullName();\r\n     *     var model = new UserModel();\r\n     *     var wrapper = {\r\n     *         delegatedIn: model\r\n     *     };\r\n     *\r\n     *     izi.perform(showFullName).whenChangeOf('firstName', 'lastName').on(model);\r\n     *\r\n     *     // will work also for:\r\n     *     izi.perform(showFullName).whenChangeOf('firstName', 'lastName').on(wrapper);\r\n     *\r\n     * @member Izi.behavior.WhenModel\r\n     * @param {Object} model Model that should be observed for properties changes.\r\n     * @return {Izi.behavior.OnModel}\r\n     */\r\n    WhenModel.prototype.on = function (model) {\r\n        return new module.behavior.OnModel(this.config.withDispatcher(model));\r\n    };\r\n\r\n    module.behavior.WhenModel = WhenModel;\r\n\r\n}(Izi);\r\n!function (module) {\r\n\r\n    var PREVENT_DEFAULT = 'preventDefault',\r\n        STOP_PROPAGATION = 'stopPropagation',\r\n        BOTH = 'both';\r\n\r\n\r\n    /**\r\n     * @class Izi.events.EventConfig\r\n     * @constructor\r\n     * @private\r\n     * @param {String} [eventType]\r\n     */\r\n    var EventConfig = function Izi_events_EventConfig(eventType) {\r\n\r\n        /**\r\n         * @private\r\n         * @member Izi.events.EventConfig\r\n         * @type {String}\r\n         */\r\n        this.eventType = eventType;\r\n\r\n        /**\r\n         * @private\r\n         * @member Izi.events.EventConfig\r\n         * @type {Object}\r\n         */\r\n        this.modifiers = {\r\n            shift: false,\r\n            ctrl: false,\r\n            alt: false\r\n        };\r\n\r\n        /**\r\n         * @private\r\n         * @member Izi.events.EventConfig\r\n         * @type {String}\r\n         */\r\n        this.stopEventType = undefined;\r\n    };\r\n\r\n    /**\r\n     * @member Izi.events.EventConfig\r\n     * @private\r\n     * @type {Boolean}\r\n     */\r\n    EventConfig.prototype.isEventConfig = true;\r\n\r\n    /**\r\n     * Setup if SHIFT key is expected to be pressed during user interaction\r\n     * @member Izi.events.EventConfig\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    EventConfig.prototype.shift = function () {\r\n        this.modifiers.shift = true;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Setup if CTRL key is expected to be pressed during user interaction\r\n     * @member Izi.events.EventConfig\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    EventConfig.prototype.ctrl = function () {\r\n        this.modifiers.ctrl = true;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Setup if ALT key is expected to be pressed during user interaction\r\n     * @member Izi.events.EventConfig\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    EventConfig.prototype.alt = function () {\r\n        this.modifiers.alt = true;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Setup if stopPropagation() and preventDefaults() should be called on triggered event\r\n     * @member Izi.events.EventConfig\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    EventConfig.prototype.stopEvent = function () {\r\n        this.stopEventType = BOTH;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Setup if stopPropagation() should be called on triggered event\r\n     * @member Izi.events.EventConfig\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    EventConfig.prototype.stopPropagation = function () {\r\n        this.stopEventType = STOP_PROPAGATION;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Setup if preventDefaults() should be called on triggered event\r\n     * @member Izi.events.EventConfig\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    EventConfig.prototype.preventDefault = function () {\r\n        this.stopEventType = PREVENT_DEFAULT;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Returns flag for SHIFT key modifier\r\n     * @private\r\n     * @member Izi.events.EventConfig\r\n     * @return {Boolean}\r\n     */\r\n    EventConfig.prototype.isExpectedShiftKey = function () {\r\n        return this.modifiers.shift;\r\n    };\r\n\r\n    /**\r\n     * Returns flag for CTRL key modifier\r\n     * @private\r\n     * @member Izi.events.EventConfig\r\n     * @return {Boolean}\r\n     */\r\n    EventConfig.prototype.isExpectedCtrlKey = function () {\r\n        return this.modifiers.ctrl;\r\n    };\r\n\r\n    /**\r\n     * Returns flag for ALT key modifier\r\n     * @private\r\n     * @member Izi.events.EventConfig\r\n     * @return {Boolean}\r\n     */\r\n    EventConfig.prototype.isExpectedAltKey = function () {\r\n        return this.modifiers.alt;\r\n    };\r\n\r\n    /**\r\n     * Returns event type\r\n     * @private\r\n     * @member Izi.events.EventConfig\r\n     * @return {String}\r\n     */\r\n    EventConfig.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n\r\n    /**\r\n     * Returns if event should be stopped for further propagation\r\n     * @private\r\n     * @member Izi.events.EventConfig\r\n     * @return {Boolean}\r\n     */\r\n    EventConfig.prototype.shouldStopPropagation = function () {\r\n        return this.stopEventType === STOP_PROPAGATION || this.stopEventType === BOTH;\r\n    };\r\n\r\n    /**\r\n     * Returns if event should prevent default behavior\r\n     * @private\r\n     * @member Izi.events.EventConfig\r\n     * @return {Boolean}\r\n     */\r\n    EventConfig.prototype.shouldPreventDefault = function () {\r\n        return this.stopEventType === PREVENT_DEFAULT || this.stopEventType === BOTH;\r\n    };\r\n\r\n    /**\r\n     * Returns true if all given modifiers matches configured modifiers.\r\n     * @member Izi.events.EventConfig\r\n     * @private\r\n     * @param {Boolean} shiftKey\r\n     * @param {Boolean} ctrlKey\r\n     * @param {Boolean} altKey\r\n     * @return {Boolean}\r\n     */\r\n    EventConfig.prototype.matchesModifiers = function (shiftKey, ctrlKey, altKey) {\r\n        return this.isExpectedShiftKey() === shiftKey &&\r\n               this.isExpectedCtrlKey() === ctrlKey &&\r\n               this.isExpectedAltKey() === altKey;\r\n    };\r\n\r\n    module.events.EventConfig = EventConfig;\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires WhenWidget.js\r\n * @requires WhenModel.js\r\n * @requires ../utils/typeOf.js\r\n * @requires ../events/EventConfig.js\r\n */\r\n!function (module) {\r\n    /**\r\n     * After <code>izi.perform(behavior)...</code> behavior API\r\n     * @class Izi.behavior.Perform\r\n     * @constructor\r\n     * @private\r\n     * @param {Izi.behavior.Config} config\r\n     */\r\n    var Perform = function Izi_behavior_Perform(config) {\r\n        this.config = config;\r\n    };\r\n\r\n    /**\r\n     * Specifies when your behavior should be executed. This method accept multiple inputs:\r\n     *\r\n     * String:\r\n     *\r\n     *     izi.perform(behavior).when('click').on(button);\r\n     *\r\n     * EventConfig:\r\n     *\r\n     *     izi.perform(behavior).when(izi.events.click().shift()).on(button);\r\n     *     izi.perform(behavior).when(izi.events.keyDown().F4().shift().stopEvent()).on(document);\r\n     *\r\n     * Multiple events:\r\n     *\r\n     *     izi.perform(behavior).when('mouseup', 'mousedown').on(button);\r\n     *     izi.perform(behavior).when(izi.events.click(), izi.events.keyDown().ENTER()).on(button);\r\n     *\r\n     * Event registration function: (since 1.5.0)\r\n     *\r\n     *     // target - is a button in this example\r\n     *     // action - is a reference to `behavior.perform` function\r\n     *     // scope - is a reference to `behavior`\r\n     *     function click(target, action, scope, eventOptions) {\r\n     *\r\n     *         // You may use any custom registration here\r\n     *         target.addListener(\"click\", action, scope);\r\n     *\r\n     *         return function stopObserving() {\r\n     *\r\n     *             // You must return function that will unregister listener\r\n     *             target.removeListener(\"click\", action, scope);\r\n     *         }\r\n     *     }\r\n     *     izi.perform(behavior).when(click).on(button);\r\n     *\r\n     * @member Izi.behavior.Perform\r\n     * @param {String.../Izi.events.EventConfig.../Function...|Object...} events Event type which should be observed for triggering behavior\r\n     * or event config created by izi.events.click() etc...\r\n     * @param {Object} [eventOptions] Optionally you can pass also event options if your framework implementation supports it.\r\n     * @return {Izi.behavior.WhenWidget}\r\n     */\r\n    Perform.prototype.when = function () {\r\n        var events = [],\r\n            eventOptions,\r\n            arg, argType;\r\n\r\n        for (var i = arguments.length - 1; i >= 0; i--) {\r\n            arg = arguments[i];\r\n            argType = module.utils.typeOf(arg);\r\n\r\n            if (argType === 'String') {\r\n                events.push(new module.events.EventConfig(arg));\r\n            } else if (arg.isEventConfig || argType === 'Function') {\r\n                events.push(arg);\r\n            } else if (argType === 'Object') {\r\n                eventOptions = arg;\r\n            } else {\r\n                throw new Error(\"Incorrect event types/options arguments\");\r\n            }\r\n        }\r\n\r\n        return new module.behavior.WhenWidget(this.config.withEvents(events).withEventOptions(eventOptions));\r\n    };\r\n\r\n    /**\r\n     * Model properties names which should be observed for changes\r\n     * @member Izi.behavior.Perform\r\n     * @param {String...} properties\r\n     * @return {Izi.behavior.WhenModel}\r\n     */\r\n    Perform.prototype.whenChangeOf = function (properties) {\r\n\r\n        return new module.behavior.WhenModel(this.config.withModelProperties(Array.prototype.slice.call(arguments)));\r\n    };\r\n\r\n\r\n    /**\r\n     * Target object for custom registrar\r\n     *     var registrar = {\r\n     *\r\n     *         register: function (target) {\r\n     *             target.addEventListener(...);\r\n     *             target.addEventListener(...);\r\n     *             target.addEventListener(...);\r\n     *         },\r\n     *\r\n     *         unregister: function (target) {\r\n     *             target.removeEventListener(...);\r\n     *             target.removeEventListener(...);\r\n     *             target.removeEventListener(...);\r\n     *         }\r\n     *     };\r\n     *\r\n     *     izi.perform(registrar).on(target);\r\n     *\r\n     * @param {*} target\r\n     */\r\n    Perform.prototype.on = function (target) {\r\n        var registrar = this.config.action;\r\n\r\n        if (module.utils.typeOf(registrar.register) === 'Function') {\r\n\r\n            registrar.register(target);\r\n\r\n            return {\r\n                stopObserving: function () {\r\n                    registrar.unregister(target);\r\n                }\r\n            }\r\n        } else {\r\n            throw new Error(\"Use on(target) method only for custom registrars: izi.perform({register: function (target){...}).on(target)\");\r\n        }\r\n    };\r\n\r\n    module.behavior.Perform = Perform;\r\n\r\n}(Izi);\r\n!function (module) {\r\n    /**\r\n     * Internal configuration used in behavior fluent API\r\n     * @class Izi.behavior.Config\r\n     * @constructor\r\n     * @private\r\n     * @param {Object} impl izi behavior implementation\r\n     * @param {izi} iziApi izi behavior implementation\r\n     */\r\n    var Config = function Izi_behavior_Config(impl, iziApi) {\r\n        this.impl = impl;\r\n        this.iziApi = iziApi;\r\n    };\r\n\r\n    /**\r\n     * Set dispatcher\r\n     * @member Izi.behavior.Config\r\n     * @private\r\n     * @param dispatcher\r\n     * @return {Izi.behavior.Config}\r\n     */\r\n    Config.prototype.withDispatcher = function (dispatcher) {\r\n        this.dispatcher = dispatcher;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Set event type\r\n     * @member Izi.behavior.Config\r\n     * @private\r\n     * @param {Izi.events.EventConfig[]} events\r\n     * @return {Izi.behavior.Config}\r\n     */\r\n    Config.prototype.withEvents = function (events) {\r\n        this.events = events;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Set event options\r\n     * @member Izi.behavior.Config\r\n     * @private\r\n     * @param eventOptions\r\n     * @return {Izi.behavior.Config}\r\n     */\r\n    Config.prototype.withEventOptions = function (eventOptions) {\r\n        this.eventOptions = eventOptions;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Set action\r\n     * @member Izi.behavior.Config\r\n     * @private\r\n     * @param action\r\n     * @return {Izi.behavior.Config}\r\n     */\r\n    Config.prototype.withAction = function (action) {\r\n        this.action = action;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Set scope\r\n     * @member Izi.behavior.Config\r\n     * @private\r\n     * @param scope\r\n     * @return {Izi.behavior.Config}\r\n     */\r\n    Config.prototype.withScope = function (scope) {\r\n        this.scope = scope;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Set model properties\r\n     * @member Izi.behavior.Config\r\n     * @private\r\n     * @param modelProperties\r\n     * @return {Izi.behavior.Config}\r\n     */\r\n    Config.prototype.withModelProperties = function (modelProperties) {\r\n        this.modelProperties = modelProperties;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * In case of usage: <code>izi.perform(behavior)</code> - it will return <code>behavior.perform</code> function\r\n     * In case of usage: <code>izi.perform(scope.function)</code> - it will return <code>scope.function</code>\r\n     * @member Izi.behavior.Config\r\n     * @return {Function}\r\n     */\r\n    Config.prototype.getAction = function () {\r\n        if ((typeof this.action) !== \"function\" && (!this.scope)) {\r\n            return this.getScope()[this.getImpl().defaultPerformFunction];\r\n        }\r\n\r\n        return this.action;\r\n    };\r\n\r\n    /**\r\n     * In case of usage: <code>izi.perform(behavior)</code> - it will return <code>behavior</code>\r\n     * In case of usage: <code>izi.perform(scope.function, scope)</code> - it will return <code>scope</code>\r\n     * @member Izi.behavior.Config\r\n     * @return {Object}\r\n     */\r\n    Config.prototype.getScope = function () {\r\n        if ((typeof this.action) !== \"function\" && (!this.scope)) {\r\n            return this.action;\r\n        }\r\n\r\n        return this.scope;\r\n    };\r\n\r\n    /**\r\n     * Get event type\r\n     * @member Izi.behavior.Config\r\n     * @return {Izi.events.EventConfig[]}\r\n     */\r\n    Config.prototype.getEvents = function () {\r\n        return this.events;\r\n    };\r\n\r\n    /**\r\n     * Get event options\r\n     * @member Izi.behavior.Config\r\n     * @return {Object}\r\n     */\r\n    Config.prototype.getEventOptions = function () {\r\n        return this.eventOptions;\r\n    };\r\n\r\n    /**\r\n     * Get event dispatcher\r\n     * @member Izi.behavior.Config\r\n     * @return {*}\r\n     */\r\n    Config.prototype.getDispatcher = function () {\r\n        return this.dispatcher.delegatedIn || this.dispatcher;\r\n    };\r\n\r\n    /**\r\n     * Get behavior implementation\r\n     * @member Izi.behavior.Config\r\n     * @return {*}\r\n     */\r\n    Config.prototype.getImpl = function () {\r\n        return this.impl;\r\n    };\r\n\r\n    /**\r\n     * Get model properties\r\n     * @member Izi.behavior.Config\r\n     * @return {String[]}\r\n     */\r\n    Config.prototype.getModelProperties = function () {\r\n        return this.modelProperties;\r\n    };\r\n\r\n    module.behavior.Config = Config;\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires Perform.js\r\n * @requires Config.js\r\n * @requires ../utils/forEach.js\r\n */\r\n!function(module) {\r\n\r\n    /**\r\n     * @member Izi.behavior\r\n     * @method\r\n     * @private\r\n     * @param {Object} impl\r\n     * @param {izi} iziApi\r\n     */\r\n    module.behavior.register = function (impl, iziApi) {\r\n\r\n        if (!impl.defaultPerformFunction) {\r\n            throw new Error(\"Behavior implementation must have defined property: defaultPerformFunction: 'someFunctionName'\");\r\n        }\r\n        if (!impl.observeWidget) {\r\n            throw new Error(\"Behavior implementation must have defined function observeWidget (widget, eventConfig, action, scope, options)\");\r\n        }\r\n        if (!impl.observeKeyStroke) {\r\n            throw new Error(\"Behavior implementation must have defined function observeKeyStroke (widget, keyboardConfig, action, scope, options)\");\r\n        }\r\n\r\n        /**\r\n         * @ignore\r\n         * @sanity izi.sanityOf(\"izi.perform()\").args().args(izi.arg(\"behavior\").ofObject().havingFunction(impl.defaultPerformFunction)).args(izi.arg(\"behaviorWrapper\").ofObject().havingProperty(\"delegatedIn\")).args(izi.arg(\"callback\").ofFunction()).args(izi.arg(\"callback\").ofFunction(), izi.arg(\"scope\").ofObject()).args(izi.arg(\"registrar\").ofObject().havingFunctions(\"register\", \"unregister\")).check(arguments);\r\n         */\r\n        return function (action, scope) {\r\n\r\n            if (arguments.length === 0) {\r\n                var configs = [];\r\n\r\n                var registerBehaviors = function (action, scope) {\r\n                    var config = new module.behavior.Config(impl, iziApi).withAction(action).withScope(scope);\r\n                    configs.push(config);\r\n                    return new module.behavior.Perform(config);\r\n                };\r\n\r\n                registerBehaviors.stopObserving = function () {\r\n                    module.utils.forEach(configs, function (config) {\r\n                        config.behavior.stopObserving();\r\n                    });\r\n                };\r\n\r\n                return registerBehaviors;\r\n            }\r\n\r\n            return new module.behavior.Perform(new module.behavior.Config(impl, iziApi).withAction(action).withScope(scope));\r\n        };\r\n    };\r\n}(Izi);\r\n!function (module) {\r\n    /**\r\n     * @member Izi.utils\r\n     * @method\r\n     * @private\r\n     * @param {Object} object host object\r\n     * @param {String} property to be examined to\r\n     */\r\n    module.utils.hasOwnProperty = function (object, property) {\r\n        return Object.prototype.hasOwnProperty.call(object, property);\r\n    };\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires hasOwnProperty.js\r\n */\r\n!function (module) {\r\n    /**\r\n     * @member Izi.utils\r\n     * @method\r\n     * @private\r\n     * @param {Object...} vararg of any Objects\r\n     */\r\n    module.utils.mergeObjects = function () {\r\n\r\n        function copyProperties(source, target) {\r\n            for (var key in source) {\r\n                if (module.utils.hasOwnProperty(source, key)) {\r\n                    target[key] = source[key];\r\n                }\r\n            }\r\n        }\r\n\r\n        return function () {\r\n            var result = {};\r\n            for (var i = 0; i < arguments.length; i++) {\r\n                copyProperties(arguments[i], result);\r\n            }\r\n            return result;\r\n        }\r\n    }();\r\n}(Izi);\r\n!function (module) {\r\n    /**\r\n     * @member Izi.utils\r\n     * @method\r\n     * @private\r\n     * @param {Array} array\r\n     * @param {*} item\r\n     * @return {Number}\r\n     */\r\n    module.utils.indexOf = (function () {\r\n\r\n        function byIndexOf(array, item) {\r\n            return Array.prototype.indexOf.call(array, item);\r\n        }\r\n\r\n        function byLoop(array, item) {\r\n            var i, ln = array.length;\r\n\r\n            for (i = 0; i < ln; i = i + 1) {\r\n                if (array[i] === item) {\r\n                    return i;\r\n                }\r\n            }\r\n\r\n            return -1;\r\n        }\r\n\r\n        function hasIndexOf() {\r\n            return (typeof Array.prototype.indexOf) === 'function';\r\n        }\r\n\r\n        return hasIndexOf() ? byIndexOf : byLoop;\r\n    }());\r\n\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires indexOf.js\r\n */\r\n!function (module) {\r\n    /**\r\n     * @member Izi.utils\r\n     * @method\r\n     * @private\r\n     * @param {Array} array\r\n     * @param {*} item\r\n     */\r\n    module.utils.removeItem = function (array, item) {\r\n        var start = module.utils.indexOf(array, item);\r\n        if (start !== -1) {\r\n            array.splice(start, 1);\r\n        }\r\n    };\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires ../utils/mergeObjects.js\r\n * @requires ../utils/removeItem.js\r\n */\r\n!function (module) {\r\n\r\n    /**\r\n     * Internal configuration used in binding fluent API\r\n     * @private\r\n     * @class Izi.binding.Config\r\n     * @constructor\r\n     * @param {Object} impl izi binding implementation\r\n     */\r\n    var Config = function Izi_binding_Config(impl) {\r\n        this.options = {\r\n            auto: true,\r\n            executeAtStartup: true,\r\n            debug: false\r\n        };\r\n        this.impl = impl;\r\n        this.triggerProperties = [];\r\n        this.bindings = [];\r\n    };\r\n\r\n    /**\r\n     * @member Izi.binding.Config\r\n     * @private\r\n     * @param {Object} options\r\n     * @return {Izi.binding.Config}\r\n     * @since 1.1.0\r\n     */\r\n    Config.prototype.withOptions = function (options) {\r\n        this.options = module.utils.mergeObjects(this.options, options);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @member Izi.binding.Config\r\n     * @private\r\n     * @param {Izi.binding.Binding[]} bindings\r\n     * @return {Izi.binding.Config}\r\n     * @since 1.1.0\r\n     */\r\n    Config.prototype.withBindings = function (bindings) {\r\n        this.bindings = bindings;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @member Izi.binding.Config\r\n     * @private\r\n     * @param {Function} callerLineProvider\r\n     * @return {Izi.binding.Config}\r\n     * @since 1.1.0\r\n     */\r\n    Config.prototype.withCallerLineProvider = function (callerLineProvider) {\r\n        this.callerLineProvider = callerLineProvider;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @member Izi.binding.Config\r\n     * @private\r\n     * @param source\r\n     * @return {Izi.binding.Config}\r\n     */\r\n    Config.prototype.withSource = function (source) {\r\n        this.source = source;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @member Izi.binding.Config\r\n     * @private\r\n     * @param sourceProperties\r\n     * @return {Izi.binding.Config}\r\n     */\r\n    Config.prototype.withSourceProperties = function (sourceProperties) {\r\n        this.sourceProperties = sourceProperties.constructor === Array ? sourceProperties : [sourceProperties];\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @member Izi.binding.Config\r\n     * @private\r\n     * @param target\r\n     * @return {Izi.binding.Config}\r\n     */\r\n    Config.prototype.withTarget = function (target) {\r\n        this.target = target;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @member Izi.binding.Config\r\n     * @private\r\n     * @param value\r\n     * @return {Izi.binding.Config}\r\n     */\r\n    Config.prototype.withTargetProperty = function (value) {\r\n        this.targetProperty = value;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @member Izi.binding.Config\r\n     * @private\r\n     * @param formatter\r\n     * @return {Izi.binding.Config}\r\n     */\r\n    Config.prototype.withFormatter = function (formatter) {\r\n        this.formatter = formatter;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @member Izi.binding.Config\r\n     * @private\r\n     * @param property\r\n     */\r\n    Config.prototype.addTriggerProperty = function (property) {\r\n        this.triggerProperties.push(property);\r\n    };\r\n\r\n    /**\r\n     * @member Izi.binding.Config\r\n     * @private\r\n     * @param {Izi.binding.Binding} binding\r\n     */\r\n    Config.prototype.addBinding = function (binding) {\r\n        this.bindings.push(binding);\r\n    };\r\n\r\n    /**\r\n     * @member Izi.binding.Config\r\n     * @private\r\n     * @param {Izi.binding.Binding} binding\r\n     */\r\n    Config.prototype.removeBinding = function (binding) {\r\n        module.utils.removeItem(this.bindings, binding);\r\n    };\r\n\r\n    module.binding.Config = Config;\r\n}(Izi);\r\n!function (module) {\r\n    /**\r\n     * @member Izi.utils\r\n     * @method\r\n     * @since 1.1.0\r\n     * @private\r\n     * @param {Function} fn\r\n     * @param {Object} scope\r\n     * @return {Function}\r\n     */\r\n    module.utils.curry = function (fn, scope) {\r\n        return function () {\r\n            fn.apply(scope, arguments);\r\n        }\r\n    };\r\n}(Izi);\r\n!function (module) {\r\n    /**\r\n     * @member Izi.utils\r\n     * @method\r\n     * @private\r\n     * @param {Array} factories\r\n     * @param {Array} args\r\n     * @param {Object} scope\r\n     */\r\n    module.utils.findClosure = function Izi_utils_findClosure(factories, args, scope) {\r\n        var i, factory, closure;\r\n        for (i = 0; i < factories.length; i = i + 1) {\r\n            factory = factories[i];\r\n            closure = factory.apply(scope, args);\r\n            if (closure) {\r\n                return closure;\r\n            }\r\n        }\r\n\r\n        throw new Error(\"Closure not found\");\r\n    };\r\n}(Izi);\r\n!function (module) {\r\n    /**\r\n     * @member Izi.utils\r\n     * @method\r\n     * @since 1.1.0\r\n     * @private\r\n     * @param {String} text\r\n     * @return {String}\r\n     */\r\n    module.utils.trim = function (text) {\r\n        return text.replace(/^\\W+/, '').replace(/\\W+$/, '');\r\n    };\r\n}(Izi);\r\n!function (module, global) {\r\n    /**\r\n     * @member Izi.utils\r\n     * @method\r\n     * @since 1.2.0\r\n     * @private\r\n     */\r\n    var logImpl;\r\n    if (\"console\" in global) {\r\n        logImpl = function () {\r\n            if (global.console.log.apply) {\r\n                global.console.log.apply(global.console, arguments);\r\n            } else {\r\n                // IE :)\r\n                global.console.log(Array.prototype.slice.call(arguments));\r\n            }\r\n\r\n        }\r\n    } else {\r\n        logImpl = function () {\r\n            // no loggers other than window.console\r\n        }\r\n    }\r\n\r\n    module.utils.log = function () {\r\n        logImpl.apply(global, arguments);\r\n    }\r\n\r\n}(Izi, this);\r\n/**\r\n * @ignore\r\n * @requires Config.js\r\n * @requires ../utils/typeOf.js\r\n * @requires ../utils/forEach.js\r\n * @requires ../utils/curry.js\r\n * @requires ../utils/findClosure.js\r\n * @requires ../utils/trim.js\r\n * @requires ../utils/log.js\r\n */\r\n!function (module) {\r\n    var forEach = module.utils.forEach,\r\n        curry = module.utils.curry,\r\n        findClosure = module.utils.findClosure,\r\n        trim = module.utils.trim,\r\n        log = module.utils.log,\r\n        INVALID_VALUE = {};\r\n\r\n    function onlyOnceError() {\r\n        throw new Error(\"twoWay() method may be used only once\");\r\n    }\r\n\r\n    /**\r\n     * Binding initializer - the last part of\r\n     * <code>izi.bind().valueOf(source, 'sourceProperty').to(target, 'targetProperty')</code> fluent API\r\n     * @class Izi.binding.Binding\r\n     * @constructor\r\n     * @private\r\n     * @param {Izi.binding.Config} config\r\n     */\r\n    var Binding = function Izi_binding_Binding(config) {\r\n\r\n        this.impl = config.impl;\r\n        this.source = config.source.delegatedIn || config.source;\r\n        this.sourceProperties = config.sourceProperties;\r\n        this.triggerProperties = config.triggerProperties;\r\n        this.target = config.target.delegatedIn || config.target;\r\n        this.targetProperty = config.targetProperty;\r\n        this.formatter = config.formatter;\r\n        this.sourceReaders = {};\r\n        this.targetReader = undefined;\r\n        this.targetWriter = undefined;\r\n        this.observers = [];\r\n        this.options = config.options;\r\n        this.getCallerLine = config.callerLineProvider;\r\n\r\n        this.registerReadersAndWriters();\r\n\r\n        if (this.options.auto) {\r\n            if (this.options.executeAtStartup) {\r\n                this.transferValue();\r\n            }\r\n            this.bind();\r\n        }\r\n\r\n        config.addBinding(this);\r\n    };\r\n\r\n    /**\r\n     * @member Izi.binding.Binding\r\n     * @private\r\n     * @param object\r\n     * @param properties\r\n     * @return {*}\r\n     */\r\n    Binding.prototype.getFormattedValues = function (object, properties) {\r\n        var values = [],\r\n            sourceReader,\r\n            sourceReaders = this.sourceReaders,\r\n            formatter = this.formatter;\r\n\r\n\r\n        forEach(properties, function (property) {\r\n            sourceReader = sourceReaders[property];\r\n            values.push(sourceReader(object, property));\r\n        });\r\n\r\n        if (formatter && (typeof formatter === \"function\")) {\r\n            return formatter.apply(null, values);\r\n        } else if (values.length === 1) {\r\n            return values[0];\r\n        } else {\r\n            throw new Error(\"You must use formatter if you want to bind more properties than one. Ex: izi.bind().valueOf(model, 'firstName', 'lastName').through(concatFormatter)...\");\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     * @param sourceValue\r\n     */\r\n    Binding.prototype.debugBinding = function (sourceValue) {\r\n        var callerLine;\r\n\r\n        if (this.options.debug) {\r\n            callerLine = trim(this.getCallerLine());\r\n            log('[BINDING] ' + callerLine, {\r\n                source: this.source,\r\n                sourceProperties: this.sourceProperties,\r\n                target: this.target,\r\n                targetProperty: this.targetProperty,\r\n                triggerProperties: this.triggerProperties,\r\n                value: sourceValue\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @member Izi.binding.Binding\r\n     * @private\r\n     */\r\n    Binding.prototype.transferValue = function () {\r\n        var source = this.source,\r\n            sourceProperties = this.sourceProperties,\r\n            sourceValue = this.getFormattedValues(source, sourceProperties),\r\n            targetReader = this.targetReader,\r\n            targetWriter = this.targetWriter,\r\n            target = this.target,\r\n            targetProperty = this.targetProperty,\r\n            targetValue;\r\n\r\n        try {\r\n            targetValue = targetReader(target, targetProperty);\r\n        } catch (error) {\r\n            targetValue = INVALID_VALUE;\r\n        }\r\n\r\n        if (sourceValue !== targetValue) {\r\n            this.debugBinding(sourceValue);\r\n            targetWriter(target, targetProperty, sourceValue);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @member Izi.binding.Binding\r\n     * @private\r\n     * @param source\r\n     * @param sourceProperty\r\n     * @param target\r\n     * @param targetProperty\r\n     * @param transferValueFn\r\n     * @return {*}\r\n     */\r\n    Binding.prototype.getChangeObserver = function (source, sourceProperty, target, targetProperty, transferValueFn) {\r\n        var impl = this.impl;\r\n\r\n        try {\r\n            return findClosure(impl.changeObservers, [source, sourceProperty, target, targetProperty, transferValueFn], this);\r\n        } catch (error) {\r\n            if (!this.options.allowNotWatchable) {\r\n                throw new Error(\"Could not find change observer for: \" + source + \" and property: \" + sourceProperty);\r\n            }\r\n\r\n            if (module.isDebug) {\r\n                log(\"[BINDING] Could not find change observer for:\", source, \"and property:\", sourceProperty);\r\n            }\r\n\r\n            return function notWatchableObserver() {\r\n                return function doNothing() {\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @member Izi.binding.Binding\r\n     * @private\r\n     */\r\n    Binding.prototype.registerReadersAndWriters = function () {\r\n        var source = this.source,\r\n            target = this.target,\r\n            targetProperty = this.targetProperty,\r\n            sourceProperties = this.sourceProperties,\r\n            sourceReaders = this.sourceReaders,\r\n            valueReaders = this.impl.valueReaders,\r\n            valueWriters = this.impl.valueWriters,\r\n            me = this;\r\n\r\n        forEach(sourceProperties, function (sourceProperty) {\r\n            try {\r\n                sourceReaders[sourceProperty] = findClosure(valueReaders, [source, sourceProperty, \"sourceReader\"], this);\r\n            } catch (e) {\r\n                throw new Error(\"Could not find reader function for: \" + source + \" using property: \" + sourceProperty);\r\n            }\r\n        });\r\n\r\n        try {\r\n            this.targetReader = findClosure(valueReaders, [target, targetProperty, \"targetReader\"], this);\r\n        } catch (e) {\r\n            this.targetReader = function () {\r\n                return INVALID_VALUE;\r\n            }\r\n        }\r\n\r\n        try {\r\n            this.targetWriter = findClosure(valueWriters, [target, targetProperty], this);\r\n        } catch (e) {\r\n            throw new Error(\"Could not find writer function for: \" + target + \" using property: \" + targetProperty);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Bind target to source (start listening for source changes). When you use <code>izi.bind()</code> this is called\r\n     * automatically. You should call it only when you use <code>izi.bind({auto:false})</code> option.\r\n     * This method doesn't transfer value from source to target - {@link Izi.binding.Binding#execute} does it.\r\n     * @member Izi.binding.Binding\r\n     * @since 1.1.0\r\n     */\r\n    Binding.prototype.bind = function () {\r\n        var sourceProperties = this.sourceProperties,\r\n            triggerProperties = this.triggerProperties,\r\n            source = this.source,\r\n            target = this.target,\r\n            targetProperty = this.targetProperty,\r\n            allTriggerProperties = triggerProperties.concat(sourceProperties),\r\n            observers = this.observers,\r\n            transferValueFn = curry(this.transferValue, this),\r\n            me = this;\r\n\r\n        forEach(allTriggerProperties, function (sourceProperty) {\r\n            var changeObserver = me.getChangeObserver(source, sourceProperty, target, targetProperty, transferValueFn);\r\n            observers.push(changeObserver(source, sourceProperty, target, targetProperty, transferValueFn));\r\n        });\r\n\r\n        this.reverseBinding && this.reverseBinding.bind();\r\n    };\r\n\r\n    /**\r\n     * @member Izi.binding.Binding\r\n     * @deprecated 1.1.0 Use {@link Izi.binding.Binding#unbind} instead.\r\n     * @return {void}\r\n     */\r\n    Binding.prototype.stopObserving = function () {\r\n        this.unbind();\r\n    };\r\n\r\n    /**\r\n     * Unbind target from source (stop listening for source changes).\r\n     * @member Izi.binding.Binding\r\n     * @since 1.1.0\r\n     */\r\n    Binding.prototype.unbind = function () {\r\n        forEach(this.observers, function (observer) {\r\n            observer();\r\n        });\r\n\r\n        this.reverseBinding && this.reverseBinding.unbind()\r\n    };\r\n\r\n    /**\r\n     * Creates two way binding between source and target. There are following limitations for using this feature:\r\n     *\r\n     *  * source property must be only one\r\n     *  * `through()` function can't be defined\r\n     *  * target can't be a function\r\n     *\r\n     * @member Izi.binding.Binding\r\n     * @since 1.5.0\r\n     * @returns {*}\r\n     */\r\n    Binding.prototype.twoWay = function () {\r\n        if (this.formatter) {\r\n            throw new Error(\"Two way binding doesn't allow to use .through(fn) function\");\r\n        }\r\n\r\n        if (module.utils.typeOf(this.target) === \"Function\") {\r\n            throw new Error(\"Two way binding doesn't allow to use function as a target\");\r\n        }\r\n\r\n        var reverseConfig = new module.binding.Config(this.impl)\r\n            .withOptions(this.options)\r\n            .withSource(this.target)\r\n            .withSourceProperties(this.targetProperty)\r\n            .withTarget(this.source)\r\n            .withTargetProperty(this.sourceProperties[0])\r\n            .withCallerLineProvider(this.getCallerLine);\r\n\r\n        this.reverseBinding = new module.binding.Binding(reverseConfig);\r\n        this.twoWay = onlyOnceError;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Execute binding (transfer value from source to target). In case of two way binding it will be triggered\r\n     * just binging from source to target.\r\n     * @member Izi.binding.Binding\r\n     * @since 1.1.0\r\n     */\r\n    Binding.prototype.execute = function () {\r\n        this.transferValue();\r\n    };\r\n\r\n    module.binding.Binding = Binding;\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires Binding.js\r\n */\r\n!function (module) {\r\n\r\n    /**\r\n     * After `izi.bind().valueOf(widget)...` fluent API\r\n     * @class Izi.binding.ValueOf\r\n     * @constructor\r\n     * @private\r\n     * @param {Izi.binding.Config} config\r\n     */\r\n    var ValueOf = function Izi_binding_ValueOf(config) {\r\n        this.config = config;\r\n    };\r\n\r\n    /**\r\n     * Binding target setup.\r\n     * You can pass directly target instance or object containing target on <strong>delegatedIn</strong> property.\r\n     * \r\n     *     var label = new Label();\r\n     *     var wrapper = {\r\n     *         delegatedIn: label\r\n     *     }\r\n     *     izi.bind().valueOf(model).to(label, \"text\");\r\n     *\r\n     *     //will work also for:\r\n     *     izi.bind().valueOf(model).to(wrapper, \"text\");\r\n     * \r\n     * You can skip both parameters in order to more elegant notation:\r\n     * \r\n     *     izi.bind().valueOf(model).to().textOf(label);\r\n     * \r\n     *\r\n     * As a target you can also use a function with given scope:\r\n     *\r\n     *     var scope = {\r\n     *         firstName: null,\r\n     *\r\n     *         firstNameChangeHandler: function (value) {\r\n     *             this.firstName = value;\r\n     *         }\r\n     *     }\r\n     *\r\n     *     izi.bind().valueOf(model, \"firstName\").to(scope.firstNameChangeHandler, scope);\r\n     *     model.firstName(\"John\");\r\n     *\r\n     * You can also skip the scope:\r\n     *\r\n     *     function firstNameChangeHandler(value) {\r\n     *         console.log(value); // \"John\"\r\n     *     }\r\n     *\r\n     *     izi.bind().valueOf(model, \"firstName\").to(firstNameChangeHandler);\r\n     *     model.firstName(\"John\");\r\n     *\r\n     * @member Izi.binding.ValueOf\r\n     * @sanity izi.sanityOf(\"to()\").args().args(izi.arg(\"targetFunction\").ofFunction()).args(izi.arg(\"targetFunction\").ofFunction(), izi.arg(\"scope\").ofObject()).args(izi.arg(\"target\").ofObject(), izi.arg(\"targetProperty\").ofString()).args(izi.arg(\"target\").ofObject().havingProperty(\"delegatedIn\"), izi.arg(\"targetProperty\").ofString()).check(arguments);\r\n     * @param {Object/Function} [target] Model or widget or Function\r\n     * @param {String/Object} [targetProperty] Target property name or Function scope\r\n     * @return {Izi.binding.Binding|Izi.binding.ValueOf} `.to()` returns Izi.binding.ValueOf, `.to(target, \"property\")` returns Izi.binding.Binding\r\n     */\r\n    ValueOf.prototype.to = function (target, targetProperty) {\r\n        if (arguments.length === 0) {\r\n            return this;\r\n        } else {\r\n            return new module.binding.Binding(this.config.withTarget(target).withTargetProperty(targetProperty));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Binding target setup for 'value' property.\r\n     *\r\n     * @member Izi.binding.ValueOf\r\n     * @sanity izi.sanityOf(\"valueOf()\").args(izi.arg(\"target\").ofObject()).args(izi.arg(\"target\").ofObject().havingProperty(\"delegatedIn\")).check(arguments);\r\n     * @param {Object} target\r\n     * @return {Izi.binding.Binding}\r\n     */\r\n    ValueOf.prototype.valueOf = function (target) {\r\n        return this.to(target, \"value\");\r\n    };\r\n\r\n    /**\r\n     * Binding target setup for 'text' property.\r\n     *\r\n     * @member Izi.binding.ValueOf\r\n     * @sanity izi.sanityOf(\"textOf()\").args(izi.arg(\"target\").ofObject()).args(izi.arg(\"target\").ofObject().havingProperty(\"delegatedIn\")).check(arguments);\r\n     * @param {Object} target\r\n     * @return {Izi.binding.Binding}\r\n     */\r\n    ValueOf.prototype.textOf = function (target) {\r\n        return this.to(target, \"text\");\r\n    };\r\n\r\n    /**\r\n     * Binding target setup for 'selectedItems' property.\r\n     *\r\n     * @member Izi.binding.ValueOf\r\n     * @sanity izi.sanityOf(\"selectedItemsOf()\").args(izi.arg(\"target\").ofObject()).args(izi.arg(\"target\").ofObject().havingProperty(\"delegatedIn\")).check(arguments);\r\n     * @param {Object} target\r\n     * @return {Izi.binding.Binding}\r\n     */\r\n    ValueOf.prototype.selectedItemsOf = function (target) {\r\n        return this.to(target, \"selectedItems\");\r\n    };\r\n\r\n    /**\r\n     * Formatter function which is used before set value on target.\r\n     * If you specified more than one source properties - you must also specify formatter function.\r\n     * \r\n     *     var fullNameFormatter = function (firstName, lastName) {\r\n     *         return firstName + ' ' + lastName;\r\n     *     }\r\n     *     izi.bind().valueOf(model, 'firstName', 'lastName').through(fullNameFormatter)\r\n     * \r\n     *\r\n     * @member Izi.binding.ValueOf\r\n     * @param {Function} formatter Function that combines all source values to one value\r\n     * @return {Izi.binding.ValueOf}\r\n     */\r\n    ValueOf.prototype.through = function (formatter) {\r\n        this.config.withFormatter(formatter);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Additional source property which change will trigger binding execution.\r\n     * \r\n     *     var label = new Label();\r\n     *     var model = new User();\r\n     *     model.getFullName = function () {\r\n     *       return this.get(\"firstName\") + ' ' + this.get(\"lastName\");\r\n     *     }\r\n     *\r\n     *     izi.bind().valueOf(model, \"fullName\")\r\n     *               .onChangeOf(\"firstName\")\r\n     *               .onChangeOf(\"lastName\")\r\n     *               .to().textOf(label);\r\n     * \r\n     *\r\n     * @member Izi.binding.ValueOf\r\n     * @param {String} property Model property that triggers binding execution\r\n     * @return {Izi.binding.ValueOf}\r\n     */\r\n    ValueOf.prototype.onChangeOf = function (property) {\r\n        this.config.addTriggerProperty(property);\r\n        return this;\r\n    };\r\n\r\n    module.binding.ValueOf = ValueOf;\r\n\r\n}(Izi);\r\n!function (module) {\r\n    /**\r\n     * @member Izi.utils\r\n     * @method\r\n     * @private\r\n     * @param {Number} stackOffset\r\n     * @return {Function}\r\n     */\r\n    module.utils.getCallerLineProvider = function (stackOffset) {\r\n        if (!module.isDebug) {\r\n            return function () {\r\n                return \"Line numbers are available only in debug version of izi-js\";\r\n            }\r\n        }\r\n        var error = Error();\r\n\r\n        return function getCallerLine() {\r\n            if (error.stack) {\r\n                // WebKit / FireFox / Opera\r\n                var callStack = error.stack.split(\"\\n\");\r\n                var index = navigator.userAgent.indexOf(\"WebKit\") > -1\r\n                    ? 3 + stackOffset // Chrome\r\n                    : 1 + stackOffset; // Firefox and Opera\r\n                return callStack[index];\r\n            } else {\r\n                // IE\r\n                return \" [IE doesn't provide line number in call stack]\";\r\n            }\r\n        }\r\n    }\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires ValueOf.js\r\n * @requires Config.js\r\n * @requires ../utils/getCallerLineProvider.js\r\n * @requires ../utils/forEach.js\r\n */\r\n!function (module) {\r\n\r\n    /**\r\n     * After `izi.bind()...` fluent API\r\n     * @class Izi.binding.Bind\r\n     * @constructor\r\n     * @private\r\n     * @param {Izi.binding.Config} config\r\n     */\r\n    var Bind = function Izi_binding_Bind(config) {\r\n        this.config = config;\r\n    };\r\n\r\n    /**\r\n     * @param source\r\n     * @param sourceProperty\r\n     * @return {Izi.binding.ValueOf}\r\n     * @private\r\n     */\r\n    Bind.prototype._valueOf = function (source, sourceProperty) {\r\n\r\n        if (arguments.length > 2) {\r\n            sourceProperty = Array.prototype.slice.call(arguments, 1);\r\n        }\r\n        var config = this.cloneConfig()\r\n            .withSource(source)\r\n            .withSourceProperties(sourceProperty || \"value\")\r\n            .withCallerLineProvider(module.utils.getCallerLineProvider(2));\r\n\r\n        return new module.binding.ValueOf(config);\r\n    };\r\n\r\n    /**\r\n     * Binding source setup.\r\n     *\r\n     * You can pass directly source instance or object containing source on <strong>delegatedIn</strong> property.\r\n     *\r\n     *     var model = new User();\r\n     *     var wrapper = {\r\n     *         delegatedIn: model\r\n     *     }\r\n     *     izi.bind().valueOf(model, 'firstName');\r\n     *\r\n     *     // will work also for:\r\n     *     izi.bind().valueOf(wrapper, 'firstName');\r\n     *\r\n     * You can also specify more than one property:\r\n     *\r\n     *     izi.bind().valueOf(model, 'firstName', 'lastName', 'title');\r\n     *\r\n     *\r\n     * @sanity izi.sanityOf(\"valueOf()\").args(izi.arg(\"source\").ofObject()).args(izi.arg(\"source\").ofObject().havingProperty(\"delegatedIn\")).args(izi.arg(\"source\").ofObject(), izi.varargOf(izi.arg(\"sourceProperty\").ofString())).args(izi.arg(\"source\").ofObject().havingProperty(\"delegatedIn\"), izi.varargOf(izi.arg(\"sourceProperty\").ofString())).check(arguments);\r\n     * @member Izi.binding.Bind\r\n     * @param {*} source Model or widget\r\n     * @param {String...} [sourceProperty=\"value\"] Property name or properties names\r\n     * @return {Izi.binding.ValueOf}\r\n     */\r\n    Bind.prototype.valueOf = function (source, sourceProperty) {\r\n        return this._valueOf.apply(this, arguments);\r\n    };\r\n\r\n    /**\r\n     * Binding source setup for selected items of lists, grids, etc.\r\n     * This is an alias to `this.valueOf(source, \"selectedItems\")`\r\n     * You can pass directly model instance or object containing model on <strong>delegatedIn</strong> property.\r\n     *\r\n     *     var dataGrid = new DataGrid();\r\n     *     var wrapper = {\r\n     *         delegatedIn: dataGrid\r\n     *     }\r\n     *     izi.bind().selectedItemsOf(dataGrid);\r\n     *\r\n     *     // will work also for:\r\n     *     izi.bind().selectedItemsOf(wrapper);\r\n     *\r\n     * @member Izi.binding.Bind\r\n     * @sanity izi.sanityOf(\"selectedItemsOf()\").args(izi.arg(\"source\").ofObject()).args(izi.arg(\"source\").ofObject().havingProperty(\"delegatedIn\")).check(arguments);\r\n     * @param {*} source Grid, list or any other 'selectedItems' holder\r\n     * @return {Izi.binding.ValueOf}\r\n     */\r\n    Bind.prototype.selectedItemsOf = function (source) {\r\n        return this._valueOf(source, \"selectedItems\");\r\n    };\r\n\r\n    /**\r\n     * @member Izi.binding.Bind\r\n     * @private\r\n     * @return {Izi.binding.Config}\r\n     */\r\n    Bind.prototype.cloneConfig = function () {\r\n        return new module.binding.Config(this.config.impl)\r\n            .withBindings(this.config.bindings)\r\n            .withOptions(this.config.options);\r\n    };\r\n\r\n    /**\r\n     * Unbind all registered bindings created by one `izi.bind()` instance.\r\n     *\r\n     *     var model = new User();\r\n     *     var firstNameEditor, lastNameEditor;\r\n     *\r\n     *     var bind = izi.bind();\r\n     *\r\n     *     bind.valueOf(model, \"firstName\").to().valueOf(firstNameEditor);\r\n     *     bind.valueOf(model, \"lastName\").to().valueOf(lastNameEditor);\r\n     *\r\n     *     bind.unbindAll(); // will stop listening for changes of both properties (firstName and lastName)\r\n     *\r\n     * @since 1.1.0\r\n     * @member Izi.binding.Bind\r\n     */\r\n    Bind.prototype.unbindAll = function () {\r\n        module.utils.forEach(this.config.bindings, function (binding) {\r\n            binding.unbind();\r\n        })\r\n    };\r\n\r\n    /**\r\n     * Execute manually all registered bindings created by one `izi.bind({auto: false})` instance.\r\n     *\r\n     *     var model = new User();\r\n     *     var firstNameEditor, lastNameEditor;\r\n     *\r\n     *     var bind = izi.bind();\r\n     *\r\n     *     bind.valueOf(model, \"firstName\").to().valueOf(firstNameEditor);\r\n     *     bind.valueOf(model, \"lastName\").to().valueOf(lastNameEditor);\r\n     *\r\n     *     bind.executeAll(); // will execute bindings for both properties (firstName and lastName)\r\n     *\r\n     * @since 1.1.0\r\n     * @member Izi.binding.Bind\r\n     */\r\n    Bind.prototype.executeAll = function () {\r\n        module.utils.forEach(this.config.bindings, function (binding) {\r\n            binding.execute();\r\n        })\r\n    };\r\n\r\n    module.binding.Bind = Bind;\r\n\r\n}(Izi);\r\n!function (module) {\r\n    module.binding.impl.createObserver = function (matcher, observer) {\r\n        return function () {\r\n            return matcher.apply(this, arguments) ? observer : null;\r\n        }\r\n    };\r\n}(Izi);\r\n\r\n/**\r\n * @ignore\r\n * @requires createObserver.js\r\n */\r\n!function(module) {\r\n\r\n    function matcher(source, sourceProperty, target, targetProperty, transferValueFn) {\r\n        return source.iziObserveProperty;\r\n    }\r\n\r\n    function observer(source, sourceProperty, target, targetProperty, transferValueFn) {\r\n        return source.iziObserveProperty(sourceProperty, transferValueFn);\r\n    }\r\n\r\n    module.binding.impl.customPropertyObserver = module.binding.impl.createObserver(matcher, observer);\r\n}(Izi);\r\n!function (module) {\r\n    module.binding.impl.createReader = function (matcher, reader) {\r\n        return function () {\r\n            return matcher.apply(this, arguments) ? reader : null;\r\n        }\r\n    };\r\n}(Izi);\r\n!function (module) {\r\n    /**\r\n     * @member Izi.utils\r\n     * @method\r\n     * @private\r\n     * @param {String} text\r\n     * @return {String}\r\n     */\r\n    module.utils.capitalize = function (text) {\r\n        return text.charAt(0).toUpperCase() + text.substr(1);\r\n    };\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires capitalize.js\r\n */\r\n!function (module) {\r\n    /**\r\n     * @member Izi.utils\r\n     * @method\r\n     * @since 1.5.0\r\n     * @private\r\n     * @param {String} name\r\n     * @return {String}\r\n     */\r\n    module.utils.getterOf = function (name) {\r\n        return \"get\" + module.utils.capitalize(name);\r\n    };\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires createReader.js\r\n * @requires ../../utils/getterOf.js\r\n * @requires ../../utils/typeOf.js\r\n * @requires ../../utils/hasOwnProperty.js\r\n */\r\n!function (module) {\r\n\r\n    module.binding.impl.readByGet = function () {\r\n\r\n        function matcher(object, property) {\r\n            return (typeof object.get) === \"function\";\r\n        }\r\n\r\n        function reader(object, property) {\r\n            return object.get(property);\r\n        }\r\n\r\n        return module.binding.impl.createReader(matcher, reader);\r\n    }();\r\n\r\n    module.binding.impl.readByCapitalizedGetter = function () {\r\n\r\n        function reader(object, property) {\r\n            return object[module.utils.getterOf(property)]();\r\n        }\r\n\r\n        function matcher(object, property) {\r\n            return module.utils.typeOf(property) === \"String\" &&  (typeof object[module.utils.getterOf(property)]) === \"function\";\r\n        }\r\n\r\n        return module.binding.impl.createReader(matcher, reader);\r\n    }();\r\n\r\n    module.binding.impl.readByFunction = function () {\r\n\r\n        function reader(object, property) {\r\n            return object[property]();\r\n        }\r\n\r\n        function matcher(object, property) {\r\n            return (typeof object[property] === 'function');\r\n        }\r\n\r\n        return module.binding.impl.createReader(matcher, reader);\r\n    }();\r\n\r\n    module.binding.impl.readFromProperty = function () {\r\n\r\n        function reader(object, property) {\r\n            return object[property];\r\n        }\r\n\r\n        function matcher(object, property) {\r\n            return true;\r\n        }\r\n\r\n        return module.binding.impl.createReader(matcher, reader);\r\n    }();\r\n\r\n    module.binding.impl.readFromOwnedProperty = function () {\r\n\r\n        function reader(object, property) {\r\n            return object[property];\r\n        }\r\n\r\n        function matcher(object, property) {\r\n            return module.utils.hasOwnProperty(object, property);\r\n        }\r\n\r\n        return module.binding.impl.createReader(matcher, reader);\r\n    }();\r\n    \r\n}(Izi);\r\n!function(module) {\r\n    module.binding.impl.createWriter = function (matcher, writer) {\r\n        return function () {\r\n            return matcher.apply(this, arguments) ? writer : null;\r\n        }\r\n    };\r\n}(Izi);\r\n\r\n/**\r\n * @ignore\r\n * @requires createWriter.js\r\n * @requires ../../utils/capitalize.js\r\n * @requires ../../utils/typeOf.js\r\n * @requires ../../utils/hasOwnProperty.js\r\n */\r\n!function(module){\r\n\r\n    module.binding.impl.writeBySet = function () {\r\n\r\n        function matcher(object, property) {\r\n            return (typeof object.set) === \"function\";\r\n        }\r\n\r\n        function writer(object, property, value) {\r\n            object.set(property, value);\r\n        }\r\n\r\n        return module.binding.impl.createWriter(matcher, writer);\r\n    }();\r\n\r\n    module.binding.impl.writeByCapitalizedSetter = function () {\r\n\r\n        var capitalize = module.utils.capitalize;\r\n\r\n        function matcher(object, property) {\r\n            return module.utils.typeOf(property) === \"String\" &&  (typeof object[\"set\" + capitalize(property)]) === \"function\";\r\n        }\r\n\r\n        function writer(object, property, value) {\r\n            object[\"set\" + capitalize(property)](value);\r\n        }\r\n\r\n        return module.binding.impl.createWriter(matcher, writer);\r\n    }();\r\n\r\n    module.binding.impl.writeToProperty = function () {\r\n\r\n        function matcher(object, property) {\r\n            return true;\r\n        }\r\n\r\n        function writer(object, property, value) {\r\n            object[property] = value;\r\n        }\r\n\r\n        return module.binding.impl.createWriter(matcher, writer);\r\n    }();\r\n\r\n    module.binding.impl.writeToOwnedProperty = function () {\r\n\r\n        function matcher(object, property) {\r\n            return module.utils.hasOwnProperty(object, property);\r\n        }\r\n\r\n        function writer(object, property, value) {\r\n            object[property] = value;\r\n        }\r\n\r\n        return module.binding.impl.createWriter(matcher, writer);\r\n    }();\r\n\r\n    module.binding.impl.writeByFunction = function () {\r\n\r\n        function matcher(object, property) {\r\n            return module.utils.typeOf(object) === 'Function';\r\n        }\r\n\r\n        function writer(fn, scope, value) {\r\n            fn.call(scope, value);\r\n        }\r\n\r\n        return module.binding.impl.createWriter(matcher, writer);\r\n    }();\r\n\r\n    module.binding.impl.writeToFunction = function () {\r\n\r\n        function matcher(object, property) {\r\n            return module.utils.typeOf(object[property]) === 'Function';\r\n        }\r\n\r\n        function writer(object, property, value) {\r\n            object[property](value);\r\n        }\r\n\r\n        return module.binding.impl.createWriter(matcher, writer);\r\n    }();\r\n\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires ../../../utils/typeOf.js\r\n */\r\n!function (module) {\r\n\r\n    module.binding.impl.nested.isNestedProperty = function Izi_binding_impl_nested_isNestedProperty(property) {\r\n        return module.utils.typeOf(property) === \"String\" && property.indexOf(\".\") > -1\r\n    }\r\n}(Izi);\r\n\r\n/**\r\n * @ignore\r\n * @requires isNestedProperty.js\r\n * @requires ../createObserver.js\r\n * @requires ../../../utils/curry.js\r\n */\r\n!function (module) {\r\n\r\n    function matcher(source, sourceProperty, target, targetProperty, transferValueFn) {\r\n        return module.binding.impl.nested.isNestedProperty(sourceProperty);\r\n    }\r\n\r\n    function observer(source, sourceProperty, target, targetProperty, transferValueFn) {\r\n\r\n        var nestedWatcher = source.iziNestedWatchers[sourceProperty];\r\n        nestedWatcher.onValueChanged(transferValueFn);\r\n\r\n        return module.utils.curry(nestedWatcher.stopObserving, nestedWatcher);\r\n    }\r\n\r\n    module.binding.impl.nested.nestedObserver = module.binding.impl.createObserver(matcher, observer);\r\n\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires ../../../utils/findClosure.js\r\n */\r\n!function (module) {\r\n\r\n    var TargetFinder = function Izi_binding_impl_nested_TargetFinder(path, readers) {\r\n        this.path = path.split(\".\");\r\n        this.path.pop();\r\n        this.readers = readers;\r\n    };\r\n\r\n    TargetFinder.prototype.findFor = function (object) {\r\n        var currentObject = object;\r\n        for (var i = 0; i < this.path.length; i++) {\r\n            var property = this.path[i];\r\n\r\n            try {\r\n                var reader = module.utils.findClosure(this.readers, [currentObject, property, \"targetReader\"]);\r\n                currentObject = reader(currentObject, property);\r\n                if (!currentObject) {\r\n                    break;\r\n                }\r\n            } catch (e) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (i === this.path.length) {\r\n            return currentObject;\r\n        } else {\r\n            return undefined;\r\n        }\r\n    };\r\n\r\n    module.binding.impl.nested.TargetFinder = TargetFinder;\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires ../../../utils/findClosure\r\n */\r\n!function (module){\r\n\r\n    var TargetWriter = function Izi_binding_impl_nested_TargetWriter(path, writers) {\r\n        this.property = path.split(\".\").pop();\r\n        this.writers = writers;\r\n    };\r\n\r\n    TargetWriter.prototype.writeValue = function (object, value) {\r\n        try {\r\n            var writer = module.utils.findClosure(this.writers, [object, this.property, value]);\r\n            writer(object, this.property, value);\r\n        } catch (e) {\r\n        }\r\n    };\r\n\r\n    module.binding.impl.nested.TargetWriter = TargetWriter;\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires isNestedProperty.js\r\n * @requires TargetFinder.js\r\n * @requires TargetWriter.js\r\n * @requires ../../../utils/log.js\r\n */\r\n!function (module) {\r\n\r\n    module.binding.impl.nested.nestedWriter = function () {\r\n        var impl = this.impl, targetFinder, targetWriter;\r\n\r\n        function matcher(object, property) {\r\n            var result = module.binding.impl.nested.isNestedProperty(property);\r\n            if (result) {\r\n                targetFinder = new module.binding.impl.nested.TargetFinder(property, impl.valueReaders);\r\n                targetWriter = new module.binding.impl.nested.TargetWriter(property, impl.valueWriters);\r\n\r\n                if (module.isDebug && property.split(\".\").length > 3) {\r\n                    module.utils.log(\"[BINDING]\" + this.getCallerLine() + \" Binding target path \\\"\" + property +\"\\\" has more than 3 parts. Consider using .to(function(value) { target.x.y.x = value; }) instead.\");\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n\r\n        function writer(object, property, value) {\r\n            var target = targetFinder.findFor(object);\r\n\r\n            if (target) {\r\n                targetWriter.writeValue(target, value);\r\n            }\r\n        }\r\n\r\n        return matcher.apply(this, arguments) ? writer : null;\r\n    }\r\n\r\n}(Izi);\r\n!function (module) {\r\n    module.utils.inherit = function (Child, Parent) {\r\n        var Proxy = function () {\r\n        };\r\n        Proxy.prototype = Parent.prototype;\r\n        Child.prototype = new Proxy();\r\n        Child.upper = Parent.prototype;\r\n        Child.prototype.constructor = Child;\r\n    };\r\n}(Izi);\r\n!function (module) {\r\n    /**\r\n     * @member Izi.utils\r\n     * @method\r\n     * @private\r\n     * @param {Array} array\r\n     * @param {Function} item\r\n     * @param {Object} scope\r\n     */\r\n    module.utils.every = (function () {\r\n\r\n        function byEvery(array, fn, scope) {\r\n            return Array.prototype.every.call(array, fn, scope);\r\n        }\r\n\r\n        function byLoop(array, fn, scope) {\r\n\r\n            var len = array.length >>> 0;\r\n\r\n            for (var i = 0; i < len; i++) {\r\n                if (i in array && !fn.call(scope, array[i], i, array))\r\n                    return false;\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        function hasEvery() {\r\n            return (typeof Array.prototype.every) === 'function';\r\n        }\r\n\r\n        return hasEvery() ? byEvery : byLoop;\r\n    }());\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires ../utils/forEach.js\r\n * @requires ../utils/every.js\r\n * @requires ../utils/removeItem.js\r\n */\r\n!function (module) {\r\n\r\n    var forEach = module.utils.forEach,\r\n        every = module.utils.every;\r\n\r\n    var Observable = function Izi_model_Observable() {\r\n        this.listeners = {};\r\n    };\r\n\r\n    Observable.prototype = {\r\n\r\n        constructor: Observable,\r\n\r\n        /**\r\n         * @member Izi.model.Observable\r\n         * @noSanity\r\n         * @param {String} type\r\n         * @return {Object[]} array of objects containing fields: 'fn' and 'scope'\r\n         */\r\n        findListeners: function (type) {\r\n\r\n            if (this.listeners[type] === undefined) {\r\n                this.listeners[type] = [];\r\n            }\r\n\r\n            return this.listeners[type];\r\n        },\r\n\r\n        /**\r\n         * @member Izi.model.Observable\r\n         * @noSanity\r\n         * @param {String} type\r\n         * @param {Array|Arguments} [args]\r\n         */\r\n        dispatchEvent: function (type, args) {\r\n            var me = this;\r\n            forEach(this.findListeners(type), function (listener) {\r\n                listener.fn.apply(listener.scope || me, args || []);\r\n            })\r\n        },\r\n\r\n        /**\r\n         * @member Izi.model.Observable\r\n         * @noSanity\r\n         * @param {String} type\r\n         * @param {Function} fn\r\n         * @param {Object} [scope]\r\n         */\r\n        addListener: function (type, fn, scope) {\r\n            this.findListeners(type).push({fn: fn, scope: scope});\r\n        },\r\n\r\n        /**\r\n         * @member Izi.model.Observable\r\n         * @noSanity\r\n         * @param {String} type\r\n         * @param {Function} fn\r\n         */\r\n        removeListener: function (type, fn) {\r\n            var listeners = this.findListeners(type),\r\n                listenerToRemove;\r\n\r\n\r\n            every(listeners, function (listener) {\r\n                if (listener.fn === fn) {\r\n                    listenerToRemove = listener;\r\n                    return false;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (listenerToRemove) {\r\n                module.utils.removeItem(listeners, listenerToRemove);\r\n            }\r\n        }\r\n    };\r\n\r\n    module.model.Observable = Observable;\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires ../../Binding.js\r\n * @requires ../../Config.js\r\n * @requires ../../../utils/inherit.js\r\n * @requires ../../../model/Observable.js\r\n */\r\n!function (module) {\r\n\r\n    function extractFirstField(field) {\r\n        if (field.indexOf(\".\") === -1) {\r\n            return field;\r\n        }\r\n        return field.substr(0, field.indexOf(\".\"));\r\n    }\r\n\r\n    function extractNextFields(field) {\r\n        if (field.indexOf(\".\") === -1) {\r\n            return undefined;\r\n        }\r\n\r\n        return field.substr(field.indexOf(\".\") + 1);\r\n    }\r\n\r\n    var NestedWatcher = function Izi_binding_impl_NestedWatcher(path, bindingImpl) {\r\n        this.path = path;\r\n        this.bindingImpl = bindingImpl;\r\n        this.sourceProperty = extractFirstField(path);\r\n\r\n        var nextFields = extractNextFields(path);\r\n        if (nextFields) {\r\n            this.child = new NestedWatcher(nextFields, this.bindingImpl);\r\n            this.child.onValueChanged(this.fireChange, this);\r\n        }\r\n\r\n        NestedWatcher.upper.constructor.apply(this);\r\n    };\r\n\r\n    module.utils.inherit(NestedWatcher, module.model.Observable);\r\n\r\n\r\n    NestedWatcher.prototype.setSource = function (source) {\r\n        this.stopObserving();\r\n        this.source = source;\r\n        this.startObserving();\r\n    };\r\n\r\n    NestedWatcher.prototype.onValueChanged = function (callback, scope) {\r\n        this.addListener(\"valueChanged\", callback, scope);\r\n    };\r\n\r\n    NestedWatcher.prototype.stopObserving = function () {\r\n        if (this.handler) {\r\n            this.handler.unbind();\r\n        }\r\n\r\n        if (this.child) {\r\n            this.child.stopObserving();\r\n        }\r\n    };\r\n\r\n    NestedWatcher.prototype.startObserving = function () {\r\n        if (this.source) {\r\n            var config = new module.binding.Config(this.bindingImpl)\r\n                .withOptions({allowNotWatchable: true})\r\n                .withSource(this.source)\r\n                .withSourceProperties(this.sourceProperty)\r\n                .withTarget(this.valueChanged)\r\n                .withTargetProperty(this);\r\n            this.handler = new module.binding.Binding(config);\r\n        } else {\r\n            this.fireChange(undefined);\r\n        }\r\n    };\r\n\r\n    NestedWatcher.prototype.valueChanged = function (value) {\r\n        if (this.child) {\r\n            this.child.setSource(value);\r\n        } else {\r\n            this.fireChange(value);\r\n        }\r\n    };\r\n\r\n    NestedWatcher.prototype.fireChange = function (value) {\r\n        this.dispatchEvent(\"valueChanged\", [value]);\r\n    };\r\n\r\n    module.binding.impl.nested.NestedWatcher = NestedWatcher;\r\n\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires NestedWatcher.js\r\n * @requires isNestedProperty.js\r\n * @requires ../createReader.js\r\n */\r\n!function (module) {\r\n\r\n    function watchForCurrentValue(object, property, bindingImpl) {\r\n        var nestedWatcher;\r\n\r\n        if (!object.iziNestedWatchers) {\r\n            object.iziNestedWatchers = {};\r\n        }\r\n\r\n        if (!object.iziNestedWatchers[property]) {\r\n            nestedWatcher = new module.binding.impl.nested.NestedWatcher(property, bindingImpl);\r\n            nestedWatcher.onValueChanged(function (value) {\r\n                this.currentValue = value;\r\n            }, nestedWatcher);\r\n            nestedWatcher.setSource(object);\r\n            object.iziNestedWatchers[property] = nestedWatcher;\r\n        }\r\n    }\r\n\r\n    function matcher(bindingImpl) {\r\n\r\n        return function (object, property, type) {\r\n            var isWatchableNestedProperty = type === \"sourceReader\" && module.binding.impl.nested.isNestedProperty(property);\r\n\r\n            if (isWatchableNestedProperty) {\r\n                watchForCurrentValue(object, property, bindingImpl);\r\n            }\r\n\r\n            return isWatchableNestedProperty;\r\n        }\r\n    }\r\n\r\n    function reader(object, property) {\r\n        return object.iziNestedWatchers[property].currentValue;\r\n    }\r\n\r\n    module.binding.impl.nested.nestedReader = function (bindingImpl) {\r\n        return module.binding.impl.createReader(matcher(bindingImpl), reader);\r\n    };\r\n\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires Bind.js\r\n * @requires Config.js\r\n *\r\n * @requires impl/customPropertyObserver.js\r\n * @requires impl/genericValueReaders.js\r\n * @requires impl/genericValueWriters.js\r\n *\r\n * @requires impl/nested/nestedObserver.js\r\n * @requires impl/nested/nestedWriter.js\r\n * @requires impl/nested/nestedReader.js\r\n */\r\n!function (module) {\r\n    /**\r\n     * @member Izi.binding\r\n     * @method\r\n     * @private\r\n     * @param {Object} impl\r\n     */\r\n    module.binding.register = function (impl) {\r\n        var nestedImpl = {};\r\n        nestedImpl.changeObservers = [module.binding.impl.nested.nestedObserver,\r\n                                      module.binding.impl.customPropertyObserver].concat(impl.changeObservers);\r\n        nestedImpl.valueWriters = [module.binding.impl.nested.nestedWriter].concat(impl.valueWriters);\r\n        nestedImpl.valueReaders = [module.binding.impl.nested.nestedReader(nestedImpl)].concat(impl.valueReaders);\r\n\r\n        return function (options) {\r\n            return new module.binding.Bind(new module.binding.Config(nestedImpl).withOptions(options || {}));\r\n        };\r\n    };\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires ../utils/curry.js\r\n */\r\n!function (module) {\r\n    var curry = module.utils.curry;\r\n\r\n    /**\r\n     * @class Izi.queue.TimeoutGuard\r\n     * @private\r\n     * @constructor\r\n     * @param {Izi.queue.Queue} queue\r\n     */\r\n    var TimeoutGuard = function Izi_queue_TimeoutGuard(queue) {\r\n        this.queue = queue;\r\n        queue.onTaskStarted(this.startCountDown, this);\r\n        queue.onTaskFinished(this.stopCountDown, this);\r\n    };\r\n\r\n    /**\r\n     * @member Izi.queue.TimeoutGuard\r\n     * @private\r\n     * @param event\r\n     */\r\n    TimeoutGuard.prototype.startCountDown = function (event) {\r\n        var timeout = this.queue.timeoutForTask(event.task);\r\n        if (timeout > 0) {\r\n            this.timeoutId = setTimeout(curry(this.timeoutTask, this), timeout);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @member Izi.queue.TimeoutGuard\r\n     * @private\r\n     */\r\n    TimeoutGuard.prototype.timeoutTask = function () {\r\n        this.queue.currentTaskTimeouted();\r\n    };\r\n\r\n    /**\r\n     * @member Izi.queue.TimeoutGuard\r\n     * @private\r\n     */\r\n    TimeoutGuard.prototype.stopCountDown = function () {\r\n        clearTimeout(this.timeoutId);\r\n    };\r\n\r\n    module.queue.TimeoutGuard = TimeoutGuard;\r\n}(Izi);\r\n!function (module) {\r\n    /**\r\n     * @member Izi.utils\r\n     * @method\r\n     * @private\r\n     * @param {Array} array\r\n     * @param {Function} item\r\n     * @param {Object} scope\r\n     */\r\n    module.utils.some = (function () {\r\n\r\n        function bySome(array, fn, scope) {\r\n            return Array.prototype.some.call(array, fn, scope);\r\n        }\r\n\r\n        function byLoop(array, fn, scope) {\r\n\r\n            var len = array.length >>> 0;\r\n            if (typeof fn != \"function\")\r\n                throw new TypeError();\r\n\r\n            for (var i = 0; i < len; i++) {\r\n                if (i in array && fn.call(scope, array[i], i, array))\r\n                    return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        function hasSome() {\r\n            return (typeof Array.prototype.some) === 'function';\r\n        }\r\n\r\n        return hasSome() ? bySome : byLoop;\r\n    }());\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires forEach.js\r\n * @requires some.js\r\n * @requires removeItem.js\r\n */\r\n!function (module) {\r\n\r\n    var Map = function org_izi_utils_Map() {\r\n        this.items = [];\r\n    };\r\n\r\n    Map.prototype.set = function (key, value) {\r\n        this.getItemOrCreate(key).value = value;\r\n    };\r\n\r\n    Map.prototype.get = function (key) {\r\n        var item = this.getItem(key);\r\n        return item ? item.value : undefined;\r\n    };\r\n\r\n    Map.prototype.remove = function (key) {\r\n        var item = this.getItem(key);\r\n        if (item) {\r\n            module.utils.removeItem(this.items, item);\r\n        }\r\n    };\r\n\r\n    Map.prototype.getKeys = function () {\r\n        var keys = [];\r\n        module.utils.forEach(this.items, function (item) {\r\n            keys.push(item.key);\r\n        });\r\n        return keys;\r\n    };\r\n\r\n    Map.prototype.getKeysOf = function (value) {\r\n        var keys = [];\r\n        module.utils.forEach(this.items, function (item) {\r\n            if (item.value === value) {\r\n                keys.push(value);\r\n            }\r\n        });\r\n        return keys;\r\n    };\r\n\r\n    Map.prototype.getValues = function () {\r\n        var values = [];\r\n        module.utils.forEach(this.items, function (item) {\r\n            values.push(item.value);\r\n        });\r\n        return values;\r\n    };\r\n\r\n    Map.prototype.count = function () {\r\n        return this.items.length;\r\n    };\r\n\r\n    Map.prototype.countValues = function (value) {\r\n        var count = 0;\r\n        module.utils.forEach(this.items, function (item) {\r\n            if (item.value === value) {\r\n                count++;\r\n            }\r\n        });\r\n        return count;\r\n    };\r\n\r\n    Map.prototype.getItemOrCreate = function (key) {\r\n        return this.getItem(key) || this.createItem(key);\r\n    };\r\n\r\n    Map.prototype.createItem = function (key) {\r\n        var item = {\r\n            key: key\r\n        };\r\n        this.items.push(item);\r\n        return item;\r\n    };\r\n\r\n    Map.prototype.getItem = function (key) {\r\n        var foundItem = undefined;\r\n        module.utils.some(this.items, function (item) {\r\n            if (item.key === key) {\r\n                foundItem = item;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return foundItem;\r\n    };\r\n\r\n    module.utils.Map = Map;\r\n\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires ../model/Observable.js\r\n * @requires ../utils/inherit.js\r\n */\r\n!function (module) {\r\n\r\n    /**\r\n     * @class Izi.queue.SynchronizedFunction\r\n     * @private\r\n     * @param originalFunction\r\n     * @param scope\r\n     */\r\n    var SynchronizedFunction = function Izi_queue_SynchronizedFunction(originalFunction, scope) {\r\n        SynchronizedFunction.upper.constructor.apply(this);\r\n        this.originalFunction = originalFunction;\r\n        this.scope = scope;\r\n        this.logLabel = \"synchronize.onCallback()\";\r\n    };\r\n    module.utils.inherit(SynchronizedFunction, module.model.Observable);\r\n\r\n    /**\r\n     * @member Izi.queue.SynchronizedFunction\r\n     * @private\r\n     * @return {Function}\r\n     */\r\n    SynchronizedFunction.prototype.synchronizedFunction = function () {\r\n        try\r\n        {\r\n            if (this.originalFunction)\r\n                return this.originalFunction.apply(this.scope, arguments);\r\n        }\r\n        finally\r\n        {\r\n            this.dispatchEvent(\"synchronized\", [this]);\r\n        }\r\n    };\r\n\r\n    module.queue.SynchronizedFunction = SynchronizedFunction;\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires ../model/Observable.js\r\n * @requires ../utils/inherit.js\r\n */\r\n!function (module) {\r\n\r\n    /**\r\n     * @class Izi.queue.SynchronizedOnEvent\r\n     * @private\r\n     * @constructor\r\n     * @param {izi} iziApi\r\n     * @param {Object} dispatcher\r\n     * @param {Array|Arguments} events\r\n     */\r\n    var SynchronizedOnEvent = function Izi_queue_SynchronizedOnEvent(iziApi, dispatcher, events) {\r\n        SynchronizedOnEvent.upper.constructor.apply(this);\r\n        var perform = iziApi.perform(this.doSynchronized, this);\r\n        this.handler = perform.when.apply(perform, events).on(dispatcher);\r\n        this.logLabel = \"synchronize.onEvent()\";\r\n    };\r\n    module.utils.inherit(SynchronizedOnEvent, module.model.Observable);\r\n\r\n    /**\r\n     * @member Izi.queue.SynchronizedOnEvent\r\n     * @private\r\n     */\r\n    SynchronizedOnEvent.prototype.doSynchronized = function () {\r\n        this.handler.stopObserving();\r\n        this.dispatchEvent(\"synchronized\", [this]);\r\n    };\r\n\r\n    module.queue.SynchronizedOnEvent = SynchronizedOnEvent;\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires ../model/Observable.js\r\n * @requires ../utils/inherit.js\r\n */\r\n!function (module) {\r\n\r\n    /**\r\n     * @class Izi.queue.SynchronizedResponder\r\n     * @private\r\n     * @constructor\r\n     * @param {Object} responder\r\n     * @param {String} [resultFunctionName=\"result\"]\r\n     * @param {String} [errorFunctionName=\"error\"]\r\n     */\r\n    var SynchronizedResponder = function Izi_queue_SynchronizedResponder(responder, resultFunctionName, errorFunctionName) {\r\n        SynchronizedResponder.upper.constructor.apply(this);\r\n\r\n        var me = this;\r\n        resultFunctionName = resultFunctionName || \"result\";\r\n        errorFunctionName = errorFunctionName || \"error\";\r\n\r\n        this.synchronizedResponder = {};\r\n        this.synchronizedResponder[resultFunctionName] = function () {\r\n            try {\r\n                responder[resultFunctionName].apply(responder, arguments);\r\n            } finally {\r\n                me.dispatchEvent(\"synchronized\", [me]);\r\n            }\r\n        };\r\n        this.synchronizedResponder[errorFunctionName] = function () {\r\n            try {\r\n                responder[errorFunctionName].apply(responder, arguments);\r\n            } finally {\r\n                me.dispatchEvent(\"synchronized\", [me]);\r\n            }\r\n        };\r\n        this.logLabel = \"synchronize.responder()\";\r\n    };\r\n\r\n    module.utils.inherit(SynchronizedResponder, module.model.Observable);\r\n\r\n    module.queue.SynchronizedResponder = SynchronizedResponder;\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires ../utils/Map.js\r\n * @requires ../utils/curry.js\r\n * @requires ../utils/forEach.js\r\n * @requires SynchronizedFunction.js\r\n * @requires SynchronizedOnEvent.js\r\n * @requires SynchronizedResponder.js\r\n */\r\n!function (module) {\r\n\r\n    /**\r\n     * Synchronizer is a utility that allows you to synchronize current task in the easiest way. Instance of this\r\n     * class is available as first argument of `execute()` method when the task is defined as an `Object` or directly\r\n     * as first argument of function, when the task is defined as a `Function`:\r\n     *\r\n     *     var task1 = {\r\n     *             execute: function (synchronize) {\r\n     *                 // synchronize.onCallback(...)\r\n     *                 // synchronize.onEvent(...)\r\n     *                 // synchronize.responder(...)\r\n     *             }\r\n     *         },\r\n     *         task2 = function (synchronize) {\r\n     *             // synchronize.onCallback(...)\r\n     *             // synchronize.onEvent(...)\r\n     *             // synchronize.responder(...)\r\n     *         }\r\n     *     };\r\n     *     izi.queue().execute(task1, task2);\r\n     *\r\n     * When one of:\r\n     *\r\n     *  * {@link Izi.queue.Synchronizer#onCallback synchronize.onCallback}\r\n     *  * {@link Izi.queue.Synchronizer#onEvent synchronize.onEvent}\r\n     *  * {@link Izi.queue.Synchronizer#responder synchronize.responder}\r\n     *\r\n     * is called, it informs the queue that this task calls some asynchronous code, so queue should wait until all asynchronous callbacks\r\n     * return. There may be synchronized more than one asynchronous code - the queue will be waiting for all of them.\r\n     *\r\n     * There is also available access to queue.cancel() method directly in synchronizer:\r\n     *\r\n     *     var task1 = {\r\n     *         execute: function (synchronize) {\r\n     *             // store handler of cancelQueue for later execution\r\n     *             this.cancelQueue = synchronize.cancelQueue;\r\n     *\r\n     *             setTimeout(synchronize.onCallback(this.doOnCallback, this), 1000);\r\n     *         },\r\n     *\r\n     *         doOnCallback: function () {\r\n     *             if (someCondition) {\r\n     *                 this.cancelQueue();\r\n     *             }\r\n     *         }\r\n     *     }\r\n     *\r\n     *\r\n     * @since 1.2.0\r\n     * @class Izi.queue.Synchronizer\r\n     * @constructor\r\n     * @private\r\n     * @param {Izi.queue.Queue} queue\r\n     */\r\n    var Synchronizer = function org_izi_queue_Synchronizer(queue) {\r\n        this.queue = queue;\r\n        this.synchronizations = new module.utils.Map();\r\n        this.awaitedTasks = new module.utils.Map();\r\n\r\n        /**\r\n         * Delegates to queue.cancel()\r\n         * @member Izi.queue.Synchronizer\r\n         */\r\n        this.cancelQueue = function () {\r\n            queue.cancel();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Synchronizes the queue after `nonSynchronized` callback will be called by external caller. This method returns\r\n     * a closure which executes first `nonSynchronized` function and after that notifies the queue to execute next task.\r\n     * If `nonSynchronized` is not given, then queue will just execute next task when callback triggers.\r\n     *\r\n     * Example 1 - just synchronize on callback\r\n     *\r\n     *     var task1 = {\r\n     *         execute: function(synchronize) {\r\n     *             // when setTimeout() callback triggers after 1000ms, then queue will execute `task2`\r\n     *             setTimeout(synchronize.onCallback(), 1000);\r\n     *         }\r\n     *     };\r\n     *\r\n     *     izi.queue().execute(task1, task2);\r\n     *\r\n     * Example 2 - synchronize on callback and execute some extra callback code\r\n     *\r\n     *     var task1 = {\r\n     *         execute: function(synchronize) {\r\n     *             setTimeout(synchronize.onCallback(this.doOnCallback, this), 1000);\r\n     *         }\r\n     *\r\n     *         doOnCallback: function () {\r\n     *             // do some extra code when callback called\r\n     *             // after this code the queue will execute `task2`\r\n     *         }\r\n     *     };\r\n     *\r\n     *     izi.queue().execute(task1, task2);\r\n     *\r\n     * @since 1.2.0\r\n     * @member Izi.queue.Synchronizer\r\n     * @param {Function} [nonSynchronized]\r\n     * @param {Object} [scope]\r\n     * @return {Function}\r\n     */\r\n    Synchronizer.prototype.onCallback = function (nonSynchronized, scope) {\r\n        var task = this.obtainTask(),\r\n            synchronization = new module.queue.SynchronizedFunction(nonSynchronized, scope);\r\n\r\n        this.recordSynchronization(synchronization, task);\r\n\r\n        return module.utils.curry(synchronization.synchronizedFunction, synchronization);\r\n    };\r\n\r\n    /**\r\n     * Synchronizes the queue when dispatcher will fire an event of given type\r\n     *\r\n     * Example - synchronize task when user clicks OK button\r\n     *\r\n     *     var task1 = {\r\n     *         alertPopup: new AlertPopup(),\r\n     *\r\n     *         execute: function(synchronize) {\r\n     *             synchronize.onEvent(this.alertPopup.okButton, izi.events.click());\r\n     *         }\r\n     *     };\r\n     *\r\n     *     izi.queue().execute(task1, task2);\r\n     *\r\n     * @since 1.2.0\r\n     * @member Izi.queue.Synchronizer\r\n     * @param {Object} dispatcher\r\n     * @param {String...|Izi.events.EventConfig...} vararg of event types as String or `izi.events.*`\r\n     */\r\n    Synchronizer.prototype.onEvent = function (dispatcher, event) {\r\n        var task = this.obtainTask(),\r\n            synchronization = new module.queue.SynchronizedOnEvent(this.queue.iziApi, dispatcher, Array.prototype.slice.call(arguments, 1));\r\n        this.recordSynchronization(synchronization, task);\r\n    };\r\n\r\n    /**\r\n     * Synchronizes the queue when service triggers the responder either on `result()` or `error()` methods.\r\n     * If you have reponder with methods different than `result()` or `error()`, then you can specify the custom ones.\r\n     *\r\n     * Example - synchronize task when any of `result()` or `error()` methods will be triggered\r\n     *\r\n     *     var task1 = {\r\n     *\r\n     *         execute: function(synchronize) {\r\n     *             Ajax.request(\"/someUrl\", someParameters, synchronize.responder(this));\r\n     *         },\r\n     *\r\n     *         result: function (ajaxResponse) {\r\n     *             // some code for handling Ajax response\r\n     *             // after this code the queue will execute `task2`\r\n     *         },\r\n     *\r\n     *         error: function (ajaxFailure) {\r\n     *             // some code for handling Ajax error\r\n     *             // after this code the queue will execute `task2`\r\n     *         },\r\n     *     };\r\n     *\r\n     *     izi.queue().execute(task1, task2);\r\n     *\r\n     * @since 1.2.0\r\n     * @member Izi.queue.Synchronizer\r\n     * @param {Object} responder\r\n     * @param {String} [resultFunctionName=\"result\"]\r\n     * @param {String} [errorFunctionName=\"error\"]\r\n     * @return {*}\r\n     */\r\n    Synchronizer.prototype.responder = function (responder, resultFunctionName, errorFunctionName) {\r\n        var task = this.obtainTask(),\r\n            synchronization = new module.queue.SynchronizedResponder(responder, resultFunctionName, errorFunctionName);\r\n        return this.recordSynchronization(synchronization, task).synchronizedResponder;\r\n    };\r\n\r\n    /**\r\n     * @member Izi.queue.Synchronizer\r\n     * @private\r\n     * @param synchronization\r\n     * @param task\r\n     * @return {*}\r\n     */\r\n    Synchronizer.prototype.recordSynchronization = function (synchronization, task) {\r\n        this.queue.log(\"        \" + synchronization.logLabel + \" was used by task: \" + this.queue.getCurrentTaskIndex() + \" of \" + this.queue.countTasks());\r\n        this.synchronizations.set(synchronization, task);\r\n        synchronization.addListener(\"synchronized\", this.removeSynchronization, this);\r\n        return synchronization;\r\n    };\r\n\r\n    /**\r\n     * @member Izi.queue.Synchronizer\r\n     * @private\r\n     * @param synchronization\r\n     */\r\n    Synchronizer.prototype.removeSynchronization = function (synchronization) {\r\n        var task = this.synchronizations.get(synchronization);\r\n        this.synchronizations.remove(synchronization);\r\n\r\n        var pendingSynchronizationsOnTask = this.countSynchronizations(task);\r\n        this.queue.log(\"        \" + synchronization.logLabel + \" completed by task: \" + this.queue.getCurrentTaskIndex() + \" of \" + this.queue.countTasks());\r\n        if (pendingSynchronizationsOnTask == 0)\r\n            this.taskSynchronized(task);\r\n    };\r\n\r\n    /**\r\n     * @member Izi.queue.Synchronizer\r\n     * @private\r\n     * @param task\r\n     */\r\n    Synchronizer.prototype.taskSynchronized = function (task) {\r\n        var awaitedTasks = this.awaitedTasks;\r\n\r\n        var proceedClosure = awaitedTasks.get(task);\r\n        if (proceedClosure) {\r\n            try {\r\n                proceedClosure.fn.apply(proceedClosure.scope);\r\n            }\r\n            finally {\r\n                awaitedTasks.remove(task);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @member Izi.queue.Synchronizer\r\n     * @private\r\n     * @param task\r\n     * @return {*}\r\n     */\r\n    Synchronizer.prototype.countSynchronizations = function (task) {\r\n        return this.synchronizations.countValues(task);\r\n    };\r\n\r\n    /**\r\n     * @member Izi.queue.Synchronizer\r\n     * @private\r\n     * @return {*}\r\n     */\r\n    Synchronizer.prototype.obtainTask = function () {\r\n        var task = this.queue.currentTask;\r\n        if (!task)\r\n            throw new Error(\"There is no task executed. Please use izi.queue().execute(someTask) and use this method.\");\r\n        return task;\r\n    };\r\n\r\n    /**\r\n     * @member Izi.queue.Synchronizer\r\n     * @private\r\n     * @return {boolean}\r\n     */\r\n    Synchronizer.prototype.hasPendingSynchronizations = function () {\r\n        return !!this.synchronizations.count();\r\n    };\r\n\r\n    /**\r\n     * @member Izi.queue.Synchronizer\r\n     * @private\r\n     * @param task\r\n     * @param proceedClosure\r\n     */\r\n    Synchronizer.prototype.afterSynchronizingTaskCall = function (task, proceedClosure) {\r\n        this.awaitedTasks.set(task, proceedClosure);\r\n    };\r\n\r\n    /**\r\n     * @member Izi.queue.Synchronizer\r\n     * @private\r\n     * @param task\r\n     */\r\n    Synchronizer.prototype.taskTimeout = function (task) {\r\n        var synchronizations = this.synchronizations,\r\n            synchronizationsToRemove = synchronizations.getKeysOf(task);\r\n\r\n        this.queue.log(\"    Time outed task: \" + this.queue.getCurrentTaskIndex() + \" of \" + this.queue.countTasks());\r\n        this.awaitedTasks.remove(task);\r\n\r\n        module.utils.forEach(synchronizationsToRemove, function (synchronization) {\r\n            synchronizations.remove(synchronization);\r\n        });\r\n    };\r\n\r\n    module.queue.Synchronizer = Synchronizer;\r\n}(Izi);\r\n!function (module) {\r\n\r\n    /**\r\n     * @class Izi.queue.GenericTask\r\n     * @private\r\n     * @constructor\r\n     * @param functionToExecute\r\n     * @param scope\r\n     */\r\n    var GenericTask = function Izi_queue_GenericTask(functionToExecute, scope) {\r\n        this.functionToExecute = functionToExecute;\r\n        this.scope = scope;\r\n    };\r\n\r\n    /**\r\n     * @member Izi.queue.GenericTask\r\n     * @private\r\n     */\r\n    GenericTask.prototype.execute = function () {\r\n        this.functionToExecute.apply(this.scope, arguments);\r\n    };\r\n\r\n    module.queue.GenericTask = GenericTask;\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires ../utils/typeOf.js\r\n * @requires ../utils/mergeObjects.js\r\n * @requires ../utils/forEach.js\r\n * @requires ../utils/log.js\r\n * @requires TimeoutGuard.js\r\n * @requires Synchronizer.js\r\n * @requires GenericTask.js\r\n */\r\n!function (module, global) {\r\n\r\n    var typeOf = module.utils.typeOf,\r\n        mergeObjects = module.utils.mergeObjects,\r\n        forEach = module.utils.forEach,\r\n        log = module.utils.log,\r\n        queueUniqueId = 0;\r\n\r\n    function formatTimeStamp() {\r\n        var now = new Date();\r\n        return padding(now.getHours(), 2) +\r\n               \":\" +\r\n               padding(now.getMinutes(), 2) +\r\n               \":\" +\r\n               padding(now.getSeconds(), 2) +\r\n               \".\" +\r\n               padding(now.getMilliseconds(), 3);\r\n    }\r\n\r\n    function padding(value, padding) {\r\n        var number = \"\" + value;\r\n        return new Array(padding - number.length + 1).join(\"0\") + number;\r\n    }\r\n\r\n    /**\r\n     * `izi.queue()` allows you to define and execute sequence of synchronous and asynchronous tasks. Task may be defined\r\n     * as a `Function` or an `Object` with `execute()` function.\r\n     *\r\n     *     var taskAsFunction = function () {\r\n     *         // some code of task\r\n     *     }\r\n     *\r\n     *     var taskAsObject = {\r\n     *         execute: function () {\r\n     *             // some code of task\r\n     *         }\r\n     *     }\r\n     *\r\n     * Example - two equivalent ways for defining and running the queue:\r\n     *\r\n     *     izi.queue().execute(task1,\r\n     *                         task2,\r\n     *                         task3);\r\n     *\r\n     *     // is a shortcut of:\r\n     *     izi.queue().push(task1,\r\n     *                      task2,\r\n     *                      task3).start();\r\n     *\r\n     * The second example allows you to define a queue once and run many times and also it allows to add event listeners\r\n     * before starting the queue:\r\n     *\r\n     *     var queue = izi.queue().push(task1,\r\n     *                                  task2,\r\n     *                                  task3);\r\n     *\r\n     *     queue.onTaskStarted(doSomethingWhenTaskStarted);\r\n     *     queue.onTaskFinished(doSomethingWhenTaskFinished);\r\n     *\r\n     *     queue.start();\r\n     *\r\n     * When the task executes some asynchronous code and the queue should wait until it finish - then we can say the task\r\n     * is asynchronous and we need to notify somehow the queue to not execute next task immediately. This problem is\r\n     * solved by usage of **{@link Izi.queue.Synchronizer synchronize}** argument passed to each task, like in example below:\r\n     *\r\n     *     var asynchronousTask = {\r\n     *         execute: function (synchronize) {\r\n     *             setTimeout(synchronize.onCallback(), 1000);\r\n     *         }\r\n     *     };\r\n     *     var synchronousTask = {\r\n     *         execute: function () {\r\n     *             // do some synchronous code\r\n     *         }\r\n     *     }\r\n     *\r\n     *     izi.queue().execute(asynchronousTask,\r\n     *                         synchronousTask);\r\n     *\r\n     * You can find more synchronization methods in {@link Izi.queue.Synchronizer} documentation\r\n     *\r\n     * @class Izi.queue.Queue\r\n     * @since 1.2.0\r\n     * @constructor\r\n     * @private\r\n     * @param {Object} impl framework queue implementation\r\n     * @param {Object} config queue configuration\r\n     * @param {izi} iziApi\r\n     */\r\n    var Queue = function Izi_queue_Queue(impl, config, iziApi) {\r\n        var defaultConfig = {\r\n            scope: global,\r\n            defaultTimeout: 0,\r\n            debug: undefined\r\n        };\r\n\r\n        this.config = mergeObjects(defaultConfig, config);\r\n        this.iziApi = iziApi;\r\n        this.queue = [];\r\n        this.originalQueue = [];\r\n        if (this.config.debug) {\r\n            queueUniqueId++;\r\n            this.id = this.config.debug + \":\" + queueUniqueId;\r\n        }\r\n\r\n        this.delegatedIn = impl.createEventDispatcher();\r\n        this.dispatchEvent = impl.dispatchEvent;\r\n\r\n        this.synchronizer = new module.queue.Synchronizer(this);\r\n        new module.queue.TimeoutGuard(this);\r\n    };\r\n\r\n    /**\r\n     * Enqueue all given functions and tasks (object with execute function), and execute them sequentially\r\n     *\r\n     * @since 1.2.0\r\n     * @member Izi.queue.Queue\r\n     * @param {Function...|Object~execute()...} vararg of tasks or functions\r\n     * @return {Izi.queue.Queue}\r\n     */\r\n    Queue.prototype.execute = function () {\r\n        this.pushAll(arguments);\r\n        this.start();\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Enqueue all given functions and tasks (object with execute function)\r\n     *\r\n     * @since 1.2.0\r\n     * @member Izi.queue.Queue\r\n     * @param {Function...|Object~execute...} vararg of tasks or functions\r\n     * @return {Izi.queue.Queue}\r\n     */\r\n    Queue.prototype.push = function () {\r\n        this.pushAll(arguments);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Start executing tasks synchronously\r\n     *\r\n     * @since 1.2.0\r\n     * @member Izi.queue.Queue\r\n     * @return {Izi.queue.Queue}\r\n     */\r\n    Queue.prototype.start = function () {\r\n        if (this.isExecutedTask()) {\r\n            throw new Error(\"Can't start already started queue until it's finished\");\r\n        }\r\n\r\n        this.queue = this.originalQueue.slice();\r\n        this.log(\"Queue started. Total tasks to execute: \" + this.countTasks());\r\n        this.proceed();\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Cancel executing tasks.\r\n     *\r\n     * @since 1.2.0\r\n     * @member Izi.queue.Queue\r\n     */\r\n    Queue.prototype.cancel = function () {\r\n        this.log(\"Queue canceled at executing task: \" + this.getCurrentTaskIndex() + \" of \" + this.countTasks());\r\n        this.dispatchTaskEvent(\"queueCanceled\", true);\r\n        this.queue = [];\r\n        this.clearAndProceed();\r\n    };\r\n\r\n    /**\r\n     * Add \"taskStarted\" event listener\r\n     *\r\n     * @since 1.2.0\r\n     * @param {Function} fn\r\n     * @param {Object} [scope]\r\n     * @return {Izi.behavior.OnWidget}\r\n     */\r\n    Queue.prototype.onTaskStarted = function (fn, scope) {\r\n        return this.iziApi.perform(fn, scope || global).when(\"taskStarted\").on(this);\r\n    };\r\n\r\n    /**\r\n     * Add \"taskFinished\" event listener\r\n     *\r\n     * @since 1.2.0\r\n     * @param {Function} fn\r\n     * @param {Object} [scope]\r\n     * @return {Izi.behavior.OnWidget}\r\n     */\r\n    Queue.prototype.onTaskFinished = function (fn, scope) {\r\n        return this.iziApi.perform(fn, scope || global).when(\"taskFinished\").on(this);\r\n    };\r\n\r\n    /**\r\n     * Add \"taskTimeouted\" event listener\r\n     *\r\n     * @since 1.2.0\r\n     * @param {Function} fn\r\n     * @param {Object} [scope]\r\n     * @return {Izi.behavior.OnWidget}\r\n     */\r\n    Queue.prototype.onTaskTimeouted = function (fn, scope) {\r\n        return this.iziApi.perform(fn, scope || global).when(\"taskTimeouted\").on(this);\r\n    };\r\n\r\n    /**\r\n     * Add \"queueFinished\" event listener\r\n     *\r\n     * @since 1.2.0\r\n     * @param {Function} fn\r\n     * @param {Object} [scope]\r\n     * @return {Izi.behavior.OnWidget}\r\n     */\r\n    Queue.prototype.onQueueFinished = function (fn, scope) {\r\n        return this.iziApi.perform(fn, scope || global).when(\"queueFinished\").on(this);\r\n    };\r\n\r\n    /**\r\n     * Add \"queueCanceled\" event listener\r\n     *\r\n     * @since 1.2.0\r\n     * @param {Function} fn\r\n     * @param {Object} [scope]\r\n     * @return {Izi.behavior.OnWidget}\r\n     */\r\n    Queue.prototype.onQueueCanceled = function (fn, scope) {\r\n        return this.iziApi.perform(fn, scope || global).when(\"queueCanceled\").on(this);\r\n    };\r\n\r\n    /**\r\n     * @member Izi.queue.Queue\r\n     * @private\r\n     * @param tasksOrFunctions\r\n     */\r\n    Queue.prototype.pushAll = function (tasksOrFunctions) {\r\n        var me = this;\r\n\r\n        forEach(tasksOrFunctions, function (taskOrFunction, index) {\r\n\r\n            if (typeOf(taskOrFunction) === 'Function') {\r\n                me.pushFunction(taskOrFunction);\r\n            } else if (typeOf(taskOrFunction) === 'Object' && typeOf(taskOrFunction.execute) === 'Function') {\r\n                me.pushTask(taskOrFunction);\r\n            } else {\r\n                throw new Error(\"Invalid queue element given at index: \" + index + \". Expected Function or Object with execute() function.\");\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @member Izi.queue.Queue\r\n     * @private\r\n     * @param task\r\n     */\r\n    Queue.prototype.pushTask = function (task) {\r\n        this.originalQueue.push(task);\r\n    };\r\n\r\n    /**\r\n     * @member Izi.queue.Queue\r\n     * @private\r\n     * @param fn\r\n     */\r\n    Queue.prototype.pushFunction = function (fn) {\r\n        this.pushTask(new module.queue.GenericTask(fn, this.getScope()));\r\n    };\r\n\r\n    /**\r\n     * @member Izi.queue.Queue\r\n     * @private\r\n     * @return {*}\r\n     */\r\n    Queue.prototype.getScope = function () {\r\n        return this.config.scope;\r\n    };\r\n\r\n    /**\r\n     * @member Izi.queue.Queue\r\n     * @private\r\n     */\r\n    Queue.prototype.proceed = function () {\r\n        if (this.isExecutedTask())\r\n            return;\r\n\r\n        if (this.isEmptyQueue()) {\r\n            this.log(\"\");\r\n            this.log(\"Queue finished\");\r\n            this.dispatchTaskEvent(\"queueFinished\");\r\n            return;\r\n        }\r\n\r\n        this.executeSynchronously(this.queue.shift());\r\n    };\r\n\r\n    /**\r\n     * @member Izi.queue.Queue\r\n     * @private\r\n     * @return {boolean}\r\n     */\r\n    Queue.prototype.isEmptyQueue = function () {\r\n        return this.queue.length === 0\r\n    };\r\n\r\n    /**\r\n     * @member Izi.queue.Queue\r\n     * @private\r\n     * @return {boolean}\r\n     */\r\n    Queue.prototype.isExecutedTask = function () {\r\n        return !!this.currentTask;\r\n    };\r\n\r\n    /**\r\n     * @member Izi.queue.Queue\r\n     * @private\r\n     * @param task\r\n     */\r\n    Queue.prototype.executeSynchronously = function (task) {\r\n        this.currentTask = task;\r\n        this.log(\"\");\r\n        this.log(\"    Task started: \" + this.getCurrentTaskIndex() + \" of \" + this.countTasks());\r\n        this.dispatchTaskEvent(\"taskStarted\", true);\r\n        task.execute(this.synchronizer);\r\n        this.awaitSynchronizerOrProceed();\r\n    };\r\n\r\n    /**\r\n     * @member Izi.queue.Queue\r\n     * @private\r\n     */\r\n    Queue.prototype.awaitSynchronizerOrProceed = function () {\r\n        if (this.synchronizer.hasPendingSynchronizations()) {\r\n            this.synchronizer.afterSynchronizingTaskCall(this.currentTask, {fn: this.taskSynchronized, scope: this});\r\n        }\r\n        else {\r\n            this.log(\"        No synchronizations used by task: \" + this.getCurrentTaskIndex() + \" of \" + this.countTasks());\r\n            this.taskSynchronized();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @member Izi.queue.Queue\r\n     * @private\r\n     */\r\n    Queue.prototype.taskSynchronized = function () {\r\n        this.log(\"    Task finished: \" + this.getCurrentTaskIndex() + \" of \" + this.countTasks());\r\n        this.dispatchTaskEvent(\"taskFinished\", true);\r\n        this.clearAndProceed();\r\n    };\r\n\r\n    /**\r\n     * @member Izi.queue.Queue\r\n     * @private\r\n     */\r\n    Queue.prototype.clearAndProceed = function () {\r\n        this.currentTask = undefined;\r\n        this.proceed();\r\n    };\r\n\r\n    /**\r\n     * @member Izi.queue.Queue\r\n     * @private\r\n     * @param type\r\n     * @param addStatistics\r\n     */\r\n    Queue.prototype.dispatchTaskEvent = function (type, addStatistics) {\r\n        var event = {\r\n            type: type,\r\n            queue: this,\r\n            task: this.currentTask\r\n        };\r\n        if (addStatistics) {\r\n            event.currentTask = this.getCurrentTaskIndex();\r\n            event.totalTasks = this.countTasks();\r\n        }\r\n        this.dispatchEvent(this.delegatedIn, type, event)\r\n    };\r\n\r\n    /**\r\n     * @member Izi.queue.Queue\r\n     * @private\r\n     * @return {number}\r\n     */\r\n    Queue.prototype.getCurrentTaskIndex = function () {\r\n        return this.originalQueue.length - this.queue.length;\r\n    };\r\n\r\n    /**\r\n     * @member Izi.queue.Queue\r\n     * @private\r\n     * @return {Number}\r\n     */\r\n    Queue.prototype.countTasks = function () {\r\n        return this.originalQueue.length;\r\n    };\r\n\r\n    /**\r\n     * @member Izi.queue.Queue\r\n     * @private\r\n     * @param task\r\n     * @return {Number}\r\n     */\r\n    Queue.prototype.timeoutForTask = function (task) {\r\n        // todo - specific timeouts for tasks\r\n        return this.config.defaultTimeout;\r\n    };\r\n\r\n    /**\r\n     * @member Izi.queue.Queue\r\n     * @private\r\n     */\r\n    Queue.prototype.currentTaskTimeouted = function () {\r\n        this.synchronizer.taskTimeout(this.currentTask);\r\n        this.dispatchTaskEvent(\"taskTimeouted\", true);\r\n        this.clearAndProceed();\r\n    };\r\n\r\n    Queue.prototype.log = function (message) {\r\n        if (this.config.debug) {\r\n            log(\"[izi.queue:\" + this.id + \"] \" + formatTimeStamp() + \" \" + message);\r\n        }\r\n    };\r\n\r\n    module.queue.Queue = Queue;\r\n\r\n}(Izi, this);\r\n/**\r\n * @ignore\r\n * @requires Queue.js\r\n */\r\n!function (module) {\r\n    /**\r\n     * @member Izi.binding\r\n     * @method\r\n     * @private\r\n     * @param {Object} impl\r\n     * @param {izi} iziApi\r\n     */\r\n    module.queue.register = function (impl, iziApi) {\r\n\r\n        return function (config) {\r\n            return new module.queue.Queue(impl, config, iziApi);\r\n        };\r\n    };\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires indexOf.js\r\n */\r\n!function (module) {\r\n    /**\r\n     * @member Izi.utils\r\n     * @method\r\n     * @private\r\n     * @param {Array} array\r\n     * @param {*} item\r\n     * @return {Boolean}\r\n     */\r\n    module.utils.arrayContains = function (array, item) {\r\n        return module.utils.indexOf(array, item) !== -1;\r\n    };\r\n}(Izi);\r\n!function (module) {\r\n    /**\r\n     * @param {String} classString\r\n     * @private\r\n     * @constructor\r\n     */\r\n    module.utils.ClassNotFound = function (classString) {\r\n        this.message = \"Class name given as string: \\\"\" + classString + \"\\\" couldn't be resolved as a class\";\r\n    };\r\n\r\n    module.utils.ClassNotFound.prototype = new Error();\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires forEach.js\r\n * @requires ClassNotFound.js\r\n */\r\n!function (module) {\r\n    /**\r\n     * @member Izi.utils\r\n     * @method\r\n     * @private\r\n     * @param {String} classString\r\n     * @param {Object} globals\r\n     * @return {Function}\r\n     */\r\n    module.utils.getClassByName = function (classString, globals) {\r\n        var currentPart,\r\n            parts = classString.split(\".\");\r\n        currentPart = globals;\r\n\r\n        module.utils.forEach(parts, function (part) {\r\n            var nextPart = currentPart[part];\r\n            if (nextPart === undefined) {\r\n                throw new module.utils.ClassNotFound(classString);\r\n            }\r\n            currentPart = nextPart;\r\n        });\r\n\r\n        return currentPart;\r\n    };\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires ../utils/typeOf.js\r\n * @requires ../utils/getClassByName.js\r\n */\r\n!function (module) {\r\n\r\n    /**\r\n     * Configuration used in IoC/DI fluent API\r\n     * @class Izi.ioc.Config\r\n     * @constructor\r\n     * @private\r\n     * @param {Function|String|Object} Class Class constructor, dotted class definition string or ready instance of bean\r\n     * @param {Function} Strategy Strategy constructor\r\n     * @param {Object} globals\r\n     */\r\n    var Config = function Izi_ioc_Config(Class, Strategy, globals) {\r\n        this.Clazz = this._resolveClass(Class, globals);\r\n        this.Strategy = Strategy;\r\n        this.args = [];\r\n    };\r\n\r\n    /**\r\n     * @member Izi.ioc.Config\r\n     * @private\r\n     * @return {*}\r\n     */\r\n    Config.prototype.createStrategy = function () {\r\n        return new this.Strategy(this);\r\n    };\r\n\r\n    /**\r\n     * @member Izi.ioc.Config\r\n     * @private\r\n     * @return {Array}\r\n     */\r\n    Config.prototype.getArguments = function () {\r\n        return this.args;\r\n    };\r\n\r\n    /**\r\n     * @member Izi.ioc.Config\r\n     * @private\r\n     * @return {Array}\r\n     */\r\n    Config.prototype.getProperties = function () {\r\n        return this.props;\r\n    };\r\n\r\n    /**\r\n     * @member Izi.ioc.Config\r\n     * @private\r\n     * @return {Function|String|Object}\r\n     */\r\n    Config.prototype.getClazz = function () {\r\n        return this.Clazz;\r\n    };\r\n\r\n    /**\r\n     * Arguments that will be used to object creation. It accept also {@link izi#inject izi.inject()} values.\r\n     *     izi.bakeBeans({\r\n     *         bean: izi.instantiate(Class).withArgs(\"Value\", izi.inject(\"beanId\")\r\n     *     });\r\n     *\r\n     * @member Izi.ioc.Config\r\n     * @noSanity\r\n     * @param {Object...|Izi.ioc.Injection...} vararg arguments\r\n     * @return {Izi.ioc.Config}\r\n     */\r\n    Config.prototype.withArgs = function () {\r\n        if (arguments.length > 10) {\r\n            throw new Error(\"Too many arguments passed. Ten arguments is maximum.\");\r\n        }\r\n\r\n        this.args = arguments;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Properties that will be used to overwrite on created bean. It accept also {@link izi#inject izi.inject()} values.\r\n     *     izi.bakeBeans({\r\n     *         bean: izi.instantiate(Class).withProps({field1: \"Value 1\", field2: izi.inject(\"beanId\")})\r\n     *     });\r\n     *\r\n     * @member Izi.ioc.Config\r\n     * @noSanity\r\n     * @param {Object} props Map of property=>value used to overwrite on bean\r\n     * @return {Izi.ioc.Config}\r\n     */\r\n    Config.prototype.withProps = function (props) {\r\n        this.props = props;\r\n        return this;\r\n    };\r\n\r\n    Config.prototype._resolveClass = function (Class, globals) {\r\n        if (module.utils.typeOf(Class) === \"String\") {\r\n            Class = module.utils.getClassByName(Class, globals);\r\n        }\r\n        return Class;\r\n    };\r\n\r\n    module.ioc.Config = Config;\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires ../../utils/forEach.js\r\n * @requires ../../utils/some.js\r\n * @requires ../../utils/getClassByName.js\r\n */\r\n!function (module) {\r\n\r\n    function matchesById(selfId, otherId) {\r\n        return selfId === otherId;\r\n    }\r\n\r\n    function matchesByType(factory, type) {\r\n        return factory.matchesByType(type);\r\n    }\r\n\r\n    function injectDependenciesOnProperties(context, bean) {\r\n        var prop;\r\n        bean.iziInjectingInProgress = true;\r\n        for (prop in bean) {\r\n            var injection = bean[prop];\r\n            if (injection && injection.isIziInjection) {\r\n                injection.injector(bean, prop, injection.resolveBean(context));\r\n            }\r\n        }\r\n        delete bean.iziInjectingInProgress;\r\n    }\r\n\r\n    /**\r\n     * Bean instance builder based on given strategy.\r\n     * @class Izi.ioc.bean.BeanBuilder\r\n     * @private\r\n     * @constructor\r\n     * @param {String} id\r\n     * @param {Object} strategy\r\n     * @param {Function} strategy.init\r\n     * @param {Function} strategy.create\r\n     * @param {Function} strategy.matchesByType\r\n     * @param {Function} strategy.getArguments\r\n     * @param {Object} globals\r\n     */\r\n    var BeanBuilder = function Izi_ioc_bean_BeanBuilder(id, strategy, globals) {\r\n        this.id = id;\r\n        this.strategy = strategy;\r\n        this.globals = globals;\r\n        this.createdBeans = [];\r\n        if (!globals) {\r\n            throw new Error(\"`globals` not defined\");\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Delegates init on strategy\r\n     * @member Izi.ioc.bean.BeanBuilder\r\n     * @private\r\n     * @param beansContext\r\n     * @return {*}\r\n     */\r\n    BeanBuilder.prototype.init = function (beansContext) {\r\n        return this.strategy.init(beansContext);\r\n    };\r\n\r\n    /**\r\n     * Delegates create on strategy\r\n     * @member Izi.ioc.bean.BeanBuilder\r\n     * @private\r\n     * @param context\r\n     * @return {*}\r\n     */\r\n    BeanBuilder.prototype.create = function (context) {\r\n        var bean = this.strategy.create(context);\r\n\r\n        if (bean.iziInjectingInProgress) {\r\n            return bean;\r\n        }\r\n\r\n        injectDependenciesOnProperties(context, bean);\r\n\r\n        if (bean.iziContext && !bean.iziContextCalled) {\r\n            bean.iziContextCalled = true;\r\n            bean.iziContext(context);\r\n        }\r\n        if (bean.iziInit && !bean.iziInitCalled) {\r\n            bean.iziInitCalled = true;\r\n            bean.iziInit();\r\n        }\r\n\r\n        this.createdBeans.push(bean);\r\n\r\n        return bean;\r\n    };\r\n\r\n    BeanBuilder.prototype.destroyCreatedBeans = function () {\r\n        module.utils.forEach(this.createdBeans, function (createdBean) {\r\n            if (createdBean.iziDestroy) {\r\n                try {\r\n                    createdBean.iziDestroy();\r\n                } catch (e) {\r\n                }\r\n            }\r\n        });\r\n\r\n        this.id = undefined;\r\n        this.strategy = undefined;\r\n        this.createdBeans = undefined;\r\n    };\r\n\r\n    BeanBuilder.prototype.preDestroyCreatedBeans = function () {\r\n        module.utils.forEach(this.createdBeans, function (createdBean) {\r\n            if (createdBean.iziPreDestroy) {\r\n                createdBean.iziPreDestroy();\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Matches factory by id or class type\r\n     * @member Izi.ioc.bean.BeanBuilder\r\n     * @private\r\n     * @param {String|Function} idOrType\r\n     * @return {Boolean}\r\n     */\r\n    BeanBuilder.prototype.matches = function (idOrType) {\r\n        if ((typeof idOrType) === \"string\") {\r\n            return idOrType.indexOf(\".\") !== -1\r\n                ? matchesByType(this.strategy, module.utils.getClassByName(idOrType, this.globals))\r\n                : matchesById(this.id, idOrType);\r\n        } else {\r\n            return matchesByType(this.strategy, idOrType);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Matches whether bean has been created by this bean builder\r\n     * @member Izi.ioc.bean.BeanBuilder\r\n     * @private\r\n     * @param {Object} bean\r\n     * @return {Boolean}\r\n     */\r\n    BeanBuilder.prototype.matchesBeanInstance = function (bean) {\r\n        return module.utils.some(this.createdBeans || [], function (createdBean) {\r\n            return createdBean === bean;\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Get bean factories that are set as argument dependencies\r\n     * @member Izi.ioc.bean.BeanBuilder\r\n     * @private\r\n     * @param context\r\n     * @return {*}\r\n     */\r\n    BeanBuilder.prototype.getArgumentsDependencies = function (context) {\r\n\r\n        function findArgumentsDependencies(args) {\r\n            var results = [];\r\n            module.utils.forEach(args, function (arg) {\r\n                if (arg && arg.isIziInjection) {\r\n                    results.push(arg.findBeanBuilder(context));\r\n                }\r\n            });\r\n            return results;\r\n        }\r\n\r\n        return findArgumentsDependencies(this.strategy.getArguments());\r\n    };\r\n\r\n    module.ioc.bean.BeanBuilder = BeanBuilder;\r\n}(Izi);\r\n!function(module){\r\n    /**\r\n     * Ready instance strategy used in {@link Izi.ioc.bean.BeanBuilder}\r\n     * @class Izi.ioc.bean.InstanceStrategy\r\n     * @private\r\n     * @constructor\r\n     * @param {*} instance\r\n     */\r\n    var InstanceStrategy = function Izi_ioc_bean_InstanceStrategy(instance) {\r\n        this.instance = instance;\r\n    };\r\n\r\n    InstanceStrategy.prototype.init = function (beansContext) {\r\n        return this.instance;\r\n    };\r\n\r\n    InstanceStrategy.prototype.create = function (beansContext) {\r\n        return this.instance;\r\n    };\r\n\r\n    InstanceStrategy.prototype.matchesByType = function (type) {\r\n        return this.instance instanceof type;\r\n    };\r\n\r\n    InstanceStrategy.prototype.getArguments = function () {\r\n        return [];\r\n    };\r\n\r\n    module.ioc.bean.InstanceStrategy = InstanceStrategy;\r\n}(Izi);\r\n!function(module) {\r\n    /**\r\n     * @private\r\n     * @param {String|Function} beanIdOrType\r\n     * @constructor\r\n     */\r\n    module.ioc.bean.NoBeanMatched = function (beanIdOrType) {\r\n        this.message = \"No bean matched: \" + beanIdOrType;\r\n    };\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires ../utils/typeOf.js\r\n * @requires ../utils/forEach.js\r\n * @requires ../utils/hasOwnProperty.js\r\n * @requires ../utils/every.js\r\n * @requires ../utils/removeItem.js\r\n * @requires ../model/Observable.js\r\n * @requires Config.js\r\n * @requires bean/BeanBuilder.js\r\n * @requires bean/InstanceStrategy.js\r\n * @requires bean/NoBeanMatched.js\r\n */\r\n!function (module) {\r\n\r\n    function normalizeBeans(beans) {\r\n        if (module.utils.typeOf(beans) === 'Array') {\r\n            return mergeBeans(beans);\r\n        } else {\r\n            return beans;\r\n        }\r\n    }\r\n\r\n    function mergeBeans(beansCollection) {\r\n        var result = {};\r\n        module.utils.forEach(beansCollection, function (beans) {\r\n            iterateOwnProperties(beans, function (key, value) {\r\n                if (result[key] === undefined) {\r\n                    result[key] = value;\r\n                } else {\r\n                    throw new Error('Found duplicated bean ID: \"' + key + '\" in multiple configurations');\r\n                }\r\n            });\r\n        });\r\n        return result;\r\n    }\r\n\r\n    function iterateOwnProperties(object, callback) {\r\n        for (var key in object) {\r\n            if (module.utils.hasOwnProperty(object, key)) {\r\n                callback(key, object[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    function createBeansBuilders(beans, beansBuilders, globals) {\r\n        var beanId, beanConfig, beanBuilder;\r\n\r\n        for (beanId in beans) {\r\n            if (module.utils.hasOwnProperty(beans, beanId)) {\r\n                beanConfig = beans[beanId];\r\n\r\n                if (beanConfig instanceof module.ioc.Config) {\r\n                    beanBuilder = new module.ioc.bean.BeanBuilder(beanId, beanConfig.createStrategy(), globals);\r\n                } else if (module.utils.typeOf(beanConfig) === \"Function\") {\r\n                    var config = new module.ioc.Config(beanConfig, module.ioc.bean.SingletonStrategy, globals);\r\n                    beanBuilder = new module.ioc.bean.BeanBuilder(beanId, config.createStrategy(), globals);\r\n                } else {\r\n                    beanBuilder = new module.ioc.bean.BeanBuilder(beanId, new module.ioc.bean.InstanceStrategy(beanConfig), globals);\r\n                }\r\n\r\n                beansBuilders.push(beanBuilder);\r\n            }\r\n        }\r\n    }\r\n\r\n    function findCircularDependencies(beansContext, beanBuilder) {\r\n\r\n        function visitDependencies(visitedBuilder) {\r\n            var dependencies = visitedBuilder.getArgumentsDependencies(beansContext);\r\n\r\n            module.utils.forEach(dependencies, function (dependency) {\r\n                if (dependency === beanBuilder) {\r\n                    throw new Error(\"Circular dependencies found. If it is possible try inject those dependencies by properties instead by arguments.\");\r\n                }\r\n                visitDependencies(dependency);\r\n            });\r\n        }\r\n\r\n        visitDependencies(beanBuilder);\r\n    }\r\n\r\n    function initBean(beansContext, beanBuilder) {\r\n        findCircularDependencies(beansContext, beanBuilder);\r\n        return beanBuilder.init(beansContext);\r\n    }\r\n\r\n    function initAllBeans(beansContext, beansBuilders) {\r\n        var bean, beansToCreate = [];\r\n\r\n        module.utils.forEach(beansBuilders, function (beanBuilder) {\r\n            bean = initBean(beansContext, beanBuilder);\r\n            if (bean) {\r\n                beansToCreate.push(beanBuilder);\r\n            }\r\n        });\r\n\r\n        module.utils.forEach(beansToCreate, function (beanToCreate) {\r\n            beanToCreate.create(beansContext);\r\n        });\r\n    }\r\n\r\n    function createPreDestroyEvent() {\r\n        return {\r\n\r\n            isPrevented: false,\r\n\r\n            isDestroyPrevented: function () {\r\n                return this.isPrevented;\r\n            },\r\n\r\n            preventDestroy: function () {\r\n                this.isPrevented = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * @param {Izi.ioc.BeansContext} beansContext\r\n     */\r\n    function handleDestroyFromParentContext(beansContext) {\r\n        var parentContext = beansContext.parentContext,\r\n            childrenDispatcher = beansContext.destroyDispatcher,\r\n            parentDispatcher = parentContext && parentContext.destroyDispatcher;\r\n\r\n        if (!parentDispatcher) {\r\n            return;\r\n        }\r\n\r\n        function handlePreDestroy(event) {\r\n            childrenDispatcher.dispatchEvent(\"preDestroy\", arguments);\r\n            if (event.isDestroyPrevented()) {\r\n                return;\r\n            }\r\n\r\n            var shouldDestroy = beansContext.doPreDestroy();\r\n            if (!shouldDestroy) {\r\n                event.preventDestroy();\r\n            }\r\n        }\r\n\r\n        function handleDestroy(event) {\r\n            parentDispatcher.removeListener(\"destroy\", handleDestroy);\r\n            parentDispatcher.removeListener(\"preDestroy\", handlePreDestroy);\r\n\r\n            childrenDispatcher.dispatchEvent(\"destroy\", arguments);\r\n            beansContext.doDestroy();\r\n        }\r\n\r\n        parentDispatcher.addListener(\"preDestroy\", handlePreDestroy);\r\n        parentDispatcher.addListener(\"destroy\", handleDestroy);\r\n    }\r\n\r\n    /**\r\n     * BeansContext instance is returned by {@link izi#bakeBeans izi.bakeBeans()} function. It is also available\r\n     * in <code>.iziContext(context)</code> function implemented on any bean, ie:\r\n     *\r\n     *     izi.bakeBeans({\r\n     *\r\n     *         bean: izi.instantiate(SomeDependency),\r\n     *\r\n     *         myBean: {\r\n     *\r\n     *             dependency: izi.inject(SomeDependency),\r\n     *\r\n     *             iziContext: function (context) {\r\n     *                 // iziContext function is called when all dependencies are provided and ready to use\r\n     *             }\r\n     *\r\n     *             iziInit: function () {\r\n     *                 // iziInit() is called after iziContext()\r\n     *             }\r\n     *         }\r\n     *     });\r\n     *\r\n     *  When you have BeansContext reference, you can:\r\n     *\r\n     *   * wire dependencies to object created outside the context: <code>context.wire(objectContainingIziInjects)</code>\r\n     *   * create descendant context: <code>izi.bakeBeans({...}, parentContext);</code>\r\n     *   * destroy context: <code>context.destroy()</code>\r\n     *\r\n     * @class Izi.ioc.BeansContext\r\n     * @constructor\r\n     * @private\r\n     * @param {Object} globals\r\n     * @param {Object|Object[]} beans Beans configuration as a map of beanId:bean or array of maps.\r\n     * @param {Izi.ioc.BeansContext} [parentContext]\r\n     */\r\n    var BeansContext = function Izi_ioc_BeansContext(globals, beans, parentContext) {\r\n        this.globals = globals;\r\n        this.beans = normalizeBeans(beans);\r\n        this.destroyDispatcher = new module.model.Observable();\r\n        this.parentContext = parentContext;\r\n        this.beansBuilders = [];\r\n\r\n        handleDestroyFromParentContext(this);\r\n    };\r\n\r\n    /**\r\n     * Init context\r\n     * @member Izi.ioc.BeansContext\r\n     * @private\r\n     * @return {Izi.ioc.BeansContext}\r\n     */\r\n    BeansContext.prototype.initContext = function () {\r\n\r\n        createBeansBuilders(this.beans, this.beansBuilders, this.globals);\r\n        initAllBeans(this, this.beansBuilders);\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Find bean by its id or class name\r\n     * @member Izi.ioc.BeansContext\r\n     * @param {String|Function} beanIdOrType\r\n     * @return {*}\r\n     */\r\n    BeansContext.prototype.getBean = function (beanIdOrType) {\r\n\r\n        var beanBuilder = this.findBeanBuilder(beanIdOrType);\r\n\r\n        if (!beanBuilder) {\r\n            throw new module.ioc.bean.NoBeanMatched(beanIdOrType);\r\n        }\r\n\r\n        return beanBuilder.create(this);\r\n    };\r\n\r\n    /**\r\n     * Injects needed dependencies from this context into passed object.\r\n     * @member Izi.ioc.BeansContext\r\n     * @since 1.3.0\r\n     * @param {Object} objectContainingIziInjects\r\n     * @return {Object}\r\n     */\r\n    BeansContext.prototype.wire = function (objectContainingIziInjects) {\r\n        var strategy = new module.ioc.bean.InstanceStrategy(objectContainingIziInjects),\r\n            beanBuilder = new module.ioc.bean.BeanBuilder(\"\", strategy, this.globals);\r\n        this.beansBuilders.push(beanBuilder);\r\n        return beanBuilder.create(this);\r\n    };\r\n\r\n    /**\r\n     * Detaches bean wired by context.wire() to prevent memory leaks.\r\n     * @member Izi.ioc.BeansContext\r\n     * @since 1.7.2\r\n     * @param {Object} bean\r\n     */\r\n    BeansContext.prototype.detachBean = function (bean) {\r\n        var beanBuilderToDestroy = null;\r\n        module.utils.some(this.beansBuilders || [], function (beanBuilder) {\r\n            if (beanBuilder.matchesBeanInstance(bean)) {\r\n                beanBuilderToDestroy = beanBuilder;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n\r\n        if (beanBuilderToDestroy) {\r\n            beanBuilderToDestroy.destroyCreatedBeans();\r\n            module.utils.removeItem(this.beansBuilders, beanBuilderToDestroy);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Destroys beans context and all descendant contexts. First it calls <code>.iziPreDestroy()</code> method on every\r\n     * created bean if implemented. Throwing an error inside <code>.iziPreDestroy()</code> stops destroying the context.\r\n     * After calling <code>.iziPreDestroy()</code> izi calls <code>.iziDestroy()</code> methods on every created bean\r\n     * if implemented. All thrown errors inside <code>.iziDestroy()</code> are caught and ignored.\r\n     *\r\n     * <code>.iziDestroy()</code> is a place where you should unregister all event listeners added within its class.\r\n     *\r\n     *     var context = izi.bakeBeans({\r\n     *\r\n     *         someBean: {\r\n     *\r\n     *             iziInit: function () {\r\n     *                 var bind = this.bind = izi.bind();\r\n     *\r\n     *                 bind.valueOf(loginInput).to(model, \"login\");\r\n     *                 bind.valueOf(passwordInput).to(model, \"password\");\r\n     *\r\n     *                 this.login = izi.perform(doLogin).when(\"click\").on(loginButton);\r\n     *             },\r\n     *\r\n     *             iziPreDestroy: function () {\r\n     *                 // you can throw new Error() here if you don't want to destroy context for any reason\r\n     *             }\r\n     *\r\n     *             iziDestroy: function () {\r\n     *                 this.bind.unbindAll();\r\n     *                 this.login.stopObserving();\r\n     *             }\r\n     *         }\r\n     *     });\r\n     *\r\n     *     context.destroy();\r\n     *\r\n     * @member Izi.ioc.BeansContext\r\n     * @return {boolean} true when destroying was successful, false when any of beans thrown an exception in iziPreDestroy() method\r\n     * @since 1.4.0\r\n     */\r\n    BeansContext.prototype.destroy = function () {\r\n        var destroyDispatcher = this.destroyDispatcher,\r\n            preDestroyEvent = createPreDestroyEvent();\r\n\r\n        destroyDispatcher.dispatchEvent(\"preDestroy\", [preDestroyEvent]);\r\n\r\n        if (preDestroyEvent.isDestroyPrevented()) {\r\n            return false;\r\n        }\r\n\r\n        var shouldDestroy = this.doPreDestroy();\r\n\r\n        if (!shouldDestroy) {\r\n            return false;\r\n        }\r\n\r\n        destroyDispatcher.dispatchEvent(\"destroy\");\r\n        this.doDestroy();\r\n\r\n        return true;\r\n    };\r\n\r\n    BeansContext.prototype.doPreDestroy = function () {\r\n        return module.utils.every(this.beansBuilders, function (beanBuilder) {\r\n            try {\r\n                beanBuilder.preDestroyCreatedBeans();\r\n                return true;\r\n            } catch (e) {\r\n                return false;\r\n            }\r\n        });\r\n    };\r\n\r\n    BeansContext.prototype.doDestroy = function () {\r\n        module.utils.forEach(this.beansBuilders, function (beanBuilder) {\r\n            beanBuilder.destroyCreatedBeans();\r\n        });\r\n        this.beansBuilders = [];\r\n        this.beans = undefined;\r\n        this.parentContext = undefined;\r\n        this.destroyDispatcher = undefined;\r\n\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Find bean builder by its id or type\r\n     * @member Izi.ioc.BeansContext\r\n     * @private\r\n     * @param {String/Function} beanIdOrType\r\n     * @return {Izi.ioc.bean.BeanBuilder}\r\n     */\r\n    BeansContext.prototype.findBeanBuilder = function (beanIdOrType) {\r\n        var foundBuilder = null;\r\n\r\n        module.utils.forEach(this.beansBuilders, function (factory) {\r\n            if (factory.matches(beanIdOrType)) {\r\n                if (foundBuilder) {\r\n                    throw new Error(\"Ambiguous reference to bean by type. Please refer by id.\");\r\n                }\r\n                foundBuilder = factory;\r\n            }\r\n        });\r\n\r\n        if (!foundBuilder && this.parentContext !== undefined) {\r\n            foundBuilder = this.parentContext.findBeanBuilder(beanIdOrType);\r\n        }\r\n\r\n        return foundBuilder;\r\n    };\r\n\r\n    module.ioc.BeansContext = BeansContext;\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires ../utils/getCallerLineProvider.js\r\n * @requires ../utils/typeOf.js\r\n * @requires ../utils/ClassNotFound.js\r\n * @requires ../utils/typeOf.js\r\n * @requires bean/NoBeanMatched.js\r\n */\r\n!function (module) {\r\n\r\n    function defaultInjector(target, prop, dependency) {\r\n        target[prop] = dependency;\r\n    }\r\n\r\n    function defaultDependencyConverter(dependency) {\r\n        return dependency;\r\n    }\r\n\r\n    /**\r\n     * Injection marker for beans arguments and properties.\r\n     * @class Izi.ioc.Injection\r\n     * @constructor\r\n     * @private\r\n     * @param {String|Function} beanIdOrType Bean id or constructor function or dotted string class definition\r\n     */\r\n    var Injection = function Izi_ioc_Injection(beanIdOrType) {\r\n        this.beanIdOrType = beanIdOrType;\r\n        this.getCallerLine = module.utils.getCallerLineProvider(2);\r\n        this.injector = defaultInjector;\r\n        this.dependencyConverter = defaultDependencyConverter;\r\n    };\r\n\r\n    /**\r\n     * @member Izi.ioc.Injection\r\n     * @private\r\n     * @return {String}\r\n     */\r\n    Injection.prototype.getBeanNotFoundMessage = function() {\r\n        var beanName;\r\n        if (module.utils.typeOf(this.beanIdOrType) === \"Function\") {\r\n            beanName = this.beanIdOrType.name || this.beanIdOrType;\r\n        } else {\r\n            beanName = this.beanIdOrType;\r\n        }\r\n        return \"Bean: `\" + beanName + \"` couldn't be found from injection at line:\\n\" + this.getCallerLine();\r\n    };\r\n\r\n    /**\r\n     * Delegates get bean\r\n     * @member Izi.ioc.Injection\r\n     * @private\r\n     * @param {Izi.ioc.BeansContext} beansContext\r\n     * @return {*}\r\n     */\r\n    Injection.prototype.resolveBean = function (beansContext) {\r\n        var bean;\r\n        try {\r\n            bean = beansContext.getBean(this.beanIdOrType);\r\n        } catch (e) {\r\n            if (e instanceof module.utils.ClassNotFound || e instanceof module.ioc.bean.NoBeanMatched) {\r\n                throw new Error(this.getBeanNotFoundMessage());\r\n            }\r\n            else {\r\n                throw e;\r\n            }\r\n        }\r\n        return this.dependencyConverter(bean);\r\n    };\r\n\r\n    /**\r\n     * Warning: use only for property injection! It doesn't work for constructor argument injection.\r\n     *\r\n     * The default property injection just set dependency as property in following code:\r\n     *\r\n     *     function defaultInjector(target, prop, dependency) {\r\n     *         target[prop] = dependency;\r\n     *     }\r\n     *\r\n     * If you want to inject dependency in different way you may use custom injector function:\r\n     *\r\n     *     userModel: izi.inject(\"userModel\").by(function (target, prop, dependency) {\r\n     *         target.setUserModel(dependency);\r\n     *     });\r\n     *\r\n     * Notice: `dependency` argument is processed by dependency converter set by `.through()` or set by `.property()`\r\n     *\r\n     * @member Izi.ioc.Injection\r\n     * @param {function(target, prop, dependency)} injector function which will be used to inject dependency as property.\r\n     * @return {Izi.ioc.Injection}\r\n     * @since 1.7.0\r\n     */\r\n    Injection.prototype.by = function (injector) {\r\n        if (module.utils.typeOf(injector) !== \"Function\") {\r\n            throw new Error(\"Injector should be a function with target, prop, dependency arguments\");\r\n        }\r\n        this.injector = injector;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * The default dependency converter returns just the dependency as in following code:\r\n     *\r\n     *     function defaultDependencyConverter(dependency) {\r\n     *         return dependency;\r\n     *     }\r\n     *\r\n     * If you want to inject transformed dependency, you may use custom dependency converter:\r\n     *\r\n     *     userModel: izi.inject(\"userModel\").trough(function (dependency) {\r\n     *         return dependency.toJSON();\r\n     *     });\r\n     *\r\n     * @member Izi.ioc.Injection\r\n     * @param {function(dependency):*} dependencyConverter function which will be used to inject dependency as property.\r\n     * @return {Izi.ioc.Injection}\r\n     * @since 1.7.0\r\n     */\r\n    Injection.prototype.through = function (dependencyConverter) {\r\n        if (module.utils.typeOf(dependencyConverter) !== \"Function\") {\r\n            throw new Error(\"Dependency converter should be a function with dependency argument\");\r\n        }\r\n        this.dependencyConverter = dependencyConverter;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Inject value of `dependency[property]` instead of `dependency`\r\n     *\r\n     *     firstName: izi.inject(\"userModel\").property(\"firstName\")\r\n     *\r\n     * @param {String} property\r\n     * @return {Izi.ioc.Injection}\r\n     * @since 1.7.0\r\n     * @chainable\r\n     */\r\n    Injection.prototype.property = function (property) {\r\n        return this.through(function (dependency) {\r\n            return dependency[property];\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Delegates find bean builder\r\n     * @member Izi.ioc.Injection\r\n     * @private\r\n     * @param {Izi.ioc.BeansContext} beansContext\r\n     * @return {Izi.ioc.bean.BeanBuilder}\r\n     */\r\n    Injection.prototype.findBeanBuilder = function (beansContext) {\r\n        var beanBuilder = beansContext.findBeanBuilder(this.beanIdOrType);\r\n        if (beanBuilder === null) {\r\n            throw new Error(this.getBeanNotFoundMessage());\r\n        }\r\n        return beanBuilder;\r\n    };\r\n\r\n    /**\r\n     * Marker field to use instead of: ... instanceof Izi.ioc.Injection\r\n     * @member Izi.ioc.Injection\r\n     * @private\r\n     * @type {Boolean}\r\n     */\r\n    Injection.prototype.isIziInjection = true;\r\n\r\n    module.ioc.Injection = Injection;\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires ../../utils/hasOwnProperty.js\r\n * @requires ../../utils/getClassByName.js\r\n */\r\n!function(module) {\r\n    module.ioc.bean.createInstance = function (Clazz, args, props, beansContext) {\r\n\r\n        function resolveArguments(args, beansContext) {\r\n            var i, arg, result = [];\r\n            for (i = 0; i < args.length; i = i + 1) {\r\n                arg = args[i];\r\n                if (arg && arg.isIziInjection) {\r\n                    result.push(arg.resolveBean(beansContext));\r\n                } else {\r\n                    result.push(arg);\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n\r\n        function applyProps(instance, props) {\r\n            if (props !== undefined) {\r\n                for (var prop in props) {\r\n                    if (module.utils.hasOwnProperty(props, prop)) {\r\n                        instance[prop] = props[prop];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (module.utils.typeOf(Clazz) === \"String\") {\r\n            Clazz = module.utils.getClassByName(Clazz, beansContext.globals);\r\n        }\r\n\r\n        var a = resolveArguments(args, beansContext),\r\n            argsCount = a.length,\r\n            instance;\r\n\r\n        if (argsCount === 0) {\r\n            instance = new Clazz();\r\n        } else if (argsCount === 1) {\r\n            instance = new Clazz(a[0]);\r\n        } else if (argsCount === 2) {\r\n            instance = new Clazz(a[0], a[1]);\r\n        } else if (argsCount === 3) {\r\n            instance = new Clazz(a[0], a[1], a[2]);\r\n        } else if (argsCount === 4) {\r\n            instance = new Clazz(a[0], a[1], a[2], a[3]);\r\n        } else if (argsCount === 5) {\r\n            instance = new Clazz(a[0], a[1], a[2], a[3], a[4]);\r\n        } else if (argsCount === 6) {\r\n            instance = new Clazz(a[0], a[1], a[2], a[3], a[4], a[5]);\r\n        } else if (argsCount === 7) {\r\n            instance = new Clazz(a[0], a[1], a[2], a[3], a[4], a[5], a[6]);\r\n        } else if (argsCount === 8) {\r\n            instance = new Clazz(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7]);\r\n        } else if (argsCount === 9) {\r\n            instance = new Clazz(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\r\n        } else if (argsCount === 10) {\r\n            instance = new Clazz(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9]);\r\n        } else {\r\n            throw new Error(\"Too many arguments given\");\r\n        }\r\n\r\n        applyProps(instance, props);\r\n\r\n        return instance;\r\n    };\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires createInstance.js\r\n */\r\n!function (module) {\r\n\r\n    /**\r\n     * Singleton strategy used in {@link Izi.ioc.bean.BeanBuilder}\r\n     * @class Izi.ioc.bean.SingletonStrategy\r\n     * @private\r\n     * @constructor\r\n     * @param {Izi.ioc.Config} config\r\n     */\r\n    var SingletonStrategy = function Izi_ioc_bean_SingletonStrategy(config) {\r\n        this.Clazz = config.getClazz();\r\n        this.args = config.getArguments();\r\n        this.props = config.getProperties();\r\n        this.instance = undefined;\r\n    };\r\n\r\n    SingletonStrategy.prototype.createInstance = function (beansContext) {\r\n        if (!this.instance) {\r\n            this.instance = module.ioc.bean.createInstance(this.Clazz, this.args, this.props, beansContext);\r\n        }\r\n\r\n        return this.instance;\r\n    };\r\n\r\n    SingletonStrategy.prototype.init = function (beansContext) {\r\n        return this.createInstance(beansContext);\r\n    };\r\n\r\n    SingletonStrategy.prototype.create = function (beansContext) {\r\n        return this.createInstance(beansContext);\r\n    };\r\n\r\n    SingletonStrategy.prototype.matchesByType = function (type) {\r\n        return type === this.Clazz;\r\n    };\r\n\r\n    SingletonStrategy.prototype.getArguments = function () {\r\n        return this.args;\r\n    };\r\n\r\n    module.ioc.bean.SingletonStrategy = SingletonStrategy;\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires createInstance.js\r\n */\r\n!function(module) {\r\n    /**\r\n     * Lazy Singleton strategy used in {@link Izi.ioc.bean.BeanBuilder}\r\n     * @class Izi.ioc.bean.LazySingletonStrategy\r\n     * @private\r\n     * @constructor\r\n     * @param {Izi.ioc.Config} config\r\n     */\r\n    var LazySingletonStrategy = function Izi_ioc_bean_LazySingletonStrategy(config) {\r\n        this.Clazz = config.getClazz();\r\n        this.args = config.getArguments();\r\n        this.props = config.getProperties();\r\n        this.instance = undefined;\r\n    };\r\n\r\n    LazySingletonStrategy.prototype.init = function (context) {\r\n        return null;\r\n    };\r\n\r\n    LazySingletonStrategy.prototype.create = function (context) {\r\n        if (!this.instance) {\r\n            this.instance = module.ioc.bean.createInstance(this.Clazz, this.args, this.props, context);\r\n        }\r\n\r\n        return this.instance;\r\n    };\r\n\r\n    LazySingletonStrategy.prototype.matchesByType = function (type) {\r\n        return type === this.Clazz;\r\n    };\r\n\r\n    LazySingletonStrategy.prototype.getArguments = function () {\r\n        return this.args;\r\n    };\r\n    \r\n    module.ioc.bean.LazySingletonStrategy = LazySingletonStrategy;\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires createInstance.js\r\n */\r\n!function(module) {\r\n    /**\r\n     * Prototype strategy used in {@link Izi.ioc.bean.BeanBuilder}\r\n     * @class Izi.ioc.bean.PrototypeStrategy\r\n     * @private\r\n     * @constructor\r\n     * @param {Izi.ioc.Config} config\r\n     */\r\n    var PrototypeStrategy = function Izi_ioc_bean_PrototypeStrategy(config) {\r\n        this.Clazz = config.getClazz();\r\n        this.args = config.getArguments();\r\n        this.props = config.getProperties();\r\n    };\r\n\r\n    PrototypeStrategy.prototype.init = function (beansContext) {\r\n        return null;\r\n    };\r\n\r\n    PrototypeStrategy.prototype.create = function (beansContext) {\r\n        return module.ioc.bean.createInstance(this.Clazz, this.args, this.props, beansContext);\r\n    };\r\n\r\n    PrototypeStrategy.prototype.matchesByType = function (type) {\r\n        return type === this.Clazz;\r\n    };\r\n\r\n    PrototypeStrategy.prototype.getArguments = function () {\r\n        return this.args;\r\n    };\r\n\r\n    module.ioc.bean.PrototypeStrategy = PrototypeStrategy;\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires capitalize.js\r\n */\r\n!function (module) {\r\n    /**\r\n     * @member Izi.utils\r\n     * @method\r\n     * @since 1.5.0\r\n     * @private\r\n     * @param {String} name\r\n     * @return {String}\r\n     */\r\n    module.utils.setterOf = function (name) {\r\n        return \"set\" + module.utils.capitalize(name);\r\n    };\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires Observable.js\r\n * @requires ../utils/getterOf.js\r\n * @requires ../utils/setterOf.js\r\n * @requires ../utils/typeOf.js\r\n */\r\n!function (module) {\r\n\r\n    var forEach = module.utils.forEach;\r\n\r\n    function normalizeFields(fields) {\r\n        var result = [];\r\n        forEach(fields, function (field) {\r\n            field = module.utils.typeOf(field) === \"Object\" ? field : {name: field};\r\n            field.getter = module.utils.getterOf(field.name);\r\n            field.setter = module.utils.setterOf(field.name);\r\n            result.push(field);\r\n        });\r\n        return result;\r\n    }\r\n\r\n    function hasToPlainObjectMethod(value) {\r\n        return value && module.utils.typeOf(value.toPlainObject) === \"Function\";\r\n    }\r\n\r\n    function implementGetterAndSetter(Class, name, getter, setter) {\r\n\r\n        Class.prototype[name] = function (value) {\r\n            if (arguments.length === 0) {\r\n                return this[getter]();\r\n            } else if (arguments.length === 1) {\r\n                return this[setter](value);\r\n            } else {\r\n                throw new Error(\"Too many arguments. Setter function requires exactly one argument\");\r\n            }\r\n        };\r\n\r\n        Class.prototype[getter] = function () {\r\n            return this.get(name);\r\n        };\r\n\r\n        Class.prototype[setter] = function (value) {\r\n            return this.set(name, value);\r\n        };\r\n    }\r\n\r\n    function createInitialData(fields) {\r\n        var data = {};\r\n\r\n        forEach(fields, function (field) {\r\n            if (field.hasOwnProperty(\"defaultValue\")) {\r\n                data[field.name] = field.defaultValue;\r\n            } else if (field.hasOwnProperty(\"initialValue\")) {\r\n                data[field.name] = field.initialValue;\r\n            }\r\n        });\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * See [Model guide](#guide/model) for usage documentation.\r\n     *\r\n     * @extends Izi.model.Observable\r\n     * @class Izi.model.Model\r\n     * @constructor\r\n     */\r\n    var Model = function Izi_Model() {\r\n        Model.upper.constructor.apply(this, arguments);\r\n        this.init();\r\n    };\r\n\r\n    module.utils.inherit(Model, module.model.Observable);\r\n\r\n    /**\r\n     * @member Izi.model.Model\r\n     * @private\r\n     * @type {Boolean}\r\n     */\r\n    Model.prototype.isIziModel = true;\r\n\r\n    /**\r\n     * Abstract init method called from constructor\r\n     * @member Izi.model.Model\r\n     * @protected\r\n     */\r\n    Model.prototype.init = function () {\r\n    };\r\n\r\n    /**\r\n     * Retrieves value of given property name\r\n     * @member Izi.model.Model\r\n     * @param {String} propertyName\r\n     * @return {*}\r\n     */\r\n    Model.prototype.get = function (propertyName) {\r\n        return this.data[propertyName];\r\n    };\r\n\r\n    /**\r\n     * Updates value of given property name and returns own model instance (this).\r\n     * @member Izi.model.Model\r\n     * @fires change\r\n     * @fires propertyNameChange\r\n     * @param {String|Object} propertyName or map of pairs property=>value\r\n     * @param {*} [value]\r\n     * @return {Izi.model.Model}\r\n     */\r\n    Model.prototype.set = function (propertyName, value) {\r\n\r\n        if (arguments.length === 1 && module.utils.typeOf(propertyName) === \"Object\") {\r\n            for (var prop in propertyName) {\r\n                if (propertyName.hasOwnProperty(prop)) {\r\n                    this.set(prop, propertyName[prop]);\r\n                }\r\n            }\r\n            return this;\r\n        }\r\n\r\n        var currentValue = this.data[propertyName];\r\n\r\n        if (!this.equals(currentValue, value)) {\r\n            this.data[propertyName] = value;\r\n            this.dispatchChange(propertyName, value, currentValue);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Fires notifications about value changes. This method is used internally by {@link Izi.model.Model#set} method.\r\n     * Firstly is fired event `\"change\"` and after that is fired event with name corresponding to `propertyName`.\r\n     * For example for `dispatchChange(\"firstName\")` will be fired two events: `\"change\"` and `\"firstNameChange\"`.\r\n     *\r\n     * @fires change\r\n     * @fires propertyNameChange\r\n     * @param {String} propertyName\r\n     * @param {*} [newValue]\r\n     * @param {*} [oldValue]\r\n     */\r\n    Model.prototype.dispatchChange = function (propertyName, newValue, oldValue) {\r\n        this.dispatchEvent(propertyName + \"Change\", [newValue, oldValue]);\r\n        this.dispatchEvent(\"change\", [propertyName, newValue, oldValue]);\r\n    };\r\n\r\n    /**\r\n     * Method used to detect if new value that is pretended to be set is different to the old one. Override\r\n     * this method if you want to use custom equals function.\r\n     *\r\n     * @param {*} val1\r\n     * @param {*} val2\r\n     * @returns {Boolean}\r\n     */\r\n    Model.prototype.equals = function (val1, val2) {\r\n        if (module.utils.typeOf(val1) === \"Array\" && module.utils.typeOf(val2) === \"Array\") {\r\n            return this.equalsArray(val1, val2);\r\n        }\r\n\r\n        return val1 === val2;\r\n    };\r\n\r\n    /**\r\n     * This method is used in default {@link Izi.model.Model#equals} method.\r\n     *\r\n     * @param arr1\r\n     * @param arr2\r\n     * @returns {boolean}\r\n     */\r\n    Model.prototype.equalsArray = function (arr1, arr2) {\r\n        if (arr1.length !== arr2.length) {\r\n            return false;\r\n        }\r\n\r\n        for (var i = 0; i < arr1.length; i++) {\r\n            if (arr1[i] !== arr2[i]) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    Model.prototype.iziObserveProperty = function (property, propertyChangeCallback) {\r\n        var me = this,\r\n            propertyChangeEvent = property + \"Change\";\r\n\r\n        me.addListener(propertyChangeEvent, propertyChangeCallback);\r\n        return function () {\r\n            me.removeListener(propertyChangeEvent, propertyChangeCallback);\r\n        }\r\n    };\r\n\r\n    Model.prototype.iziObserveWidget = function (eventConfig, action, scope, eventOptions) {\r\n        var me = this,\r\n            eventType = eventConfig.getEventType();\r\n\r\n        me.addListener(eventType, action, scope);\r\n        return function () {\r\n            me.removeListener(eventType, action);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Exports all declared fields in `field: []` section using short getters like `firstName()`.\r\n     *\r\n     *     var User = izi.modelOf({\r\n     *         fields: [\"firstName\", \"lastName\"]\r\n     *     });\r\n     *\r\n     *     var john = new User().firstName(\"John\").lastName(\"Smith\");\r\n     *     john.toPlainObject(); // {firstName: \"John\", lastName: \"Smith\"}\r\n     *\r\n     * When field value is an Array, then it will be converted to array of values. If any field or array item has\r\n     * `.toPlainObject()` method, then it will be called to get result.\r\n     *\r\n     * Circular references between models are resolved as circular references between plain objects.\r\n     *\r\n     *     var TreeItem = izi.modelOf({\r\n     *         fields: [\"children\", \"parent\"]\r\n     *     });\r\n     *\r\n     *     var root = new TreeItem();\r\n     *     var child1 = new TreeItem().parent(root);\r\n     *     var child2 = new TreeItem().parent(root);\r\n     *     root.children([child1, child2]);\r\n     *\r\n     *     root.toPlainObject(); // {children: [{parent: *refToRoot*},\r\n     *                           //             {parent: *refToRoot*}] }\r\n     *\r\n     * If you have custom getter which is not declared in `fields` section you may override toPlainObject method:\r\n     *\r\n     *     var User = izi.modelOf({\r\n     *         fields: [\"firstName\", \"lastName\"],\r\n     *\r\n     *         getFullName: function () {\r\n     *             return this.firstName() + \" \" + this.lastName();\r\n     *         },\r\n     *\r\n     *         toPlainObject: function () {\r\n     *\r\n     *             // call original implementation that converts firstName and lastName\r\n     *             var plainObject = User.upper.toPlainObject.call(this);\r\n     *\r\n     *             // add your custom getters here\r\n     *             plainObject.fullName = this.getFullName();\r\n     *\r\n     *             return plainObject;\r\n     *         }\r\n     *     });\r\n     *\r\n     *     var john = new User().firstName(\"John\").lastName(\"Smith\");\r\n     *     john.toPlainObject(); // {firstName: \"John\", lastName: \"Smith\", fullName: \"John Smith\"}\r\n     *\r\n     * @returns {Object}\r\n     * @since 1.5.0\r\n     */\r\n    Model.prototype.toPlainObject = function () {\r\n        var result = {},\r\n            arrayResult,\r\n            circularCopyProp = \"__iziCircularCopy__\",\r\n            wasVisited = circularCopyProp in this,\r\n            cache = this[circularCopyProp];\r\n\r\n        if (wasVisited) {\r\n            return cache();\r\n        }\r\n\r\n        this[circularCopyProp] = function () {\r\n            return result;\r\n        };\r\n\r\n        forEach(this.fields, function (field) {\r\n            var value = this[field.getter]();\r\n\r\n            if (hasToPlainObjectMethod(value)) {\r\n                result[field.name] = value.toPlainObject();\r\n            } else if (module.utils.typeOf(value) === \"Array\") {\r\n                arrayResult = [];\r\n                forEach(value, function (item) {\r\n                    if (hasToPlainObjectMethod(item)) {\r\n                        arrayResult.push(item.toPlainObject());\r\n                    } else {\r\n                        arrayResult.push(item);\r\n                    }\r\n                });\r\n                result[field.name] = arrayResult;\r\n            } else if (value && module.utils.typeOf(value.forEach) === \"Function\") {\r\n                arrayResult = [];\r\n                value.forEach(function (item) {\r\n                    if (hasToPlainObjectMethod(item)) {\r\n                        arrayResult.push(item.toPlainObject());\r\n                    } else {\r\n                        arrayResult.push(item);\r\n                    }\r\n                });\r\n                result[field.name] = arrayResult;\r\n            } else {\r\n                result[field.name] = value;\r\n            }\r\n        }, this);\r\n\r\n        delete this[circularCopyProp];\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     * @param config\r\n     * @return {Function}\r\n     */\r\n    Model.define = function (config) {\r\n\r\n        var fields = normalizeFields(config.fields),\r\n            Class = function () {\r\n                this.data = createInitialData(fields);\r\n                this.fields = fields;\r\n                Class.upper.constructor.apply(this);\r\n            };\r\n        module.utils.inherit(Class, Model);\r\n\r\n        forEach(fields, function (field) {\r\n            implementGetterAndSetter(Class, field.name, field.getter, field.setter);\r\n        });\r\n\r\n        for (var key in config) {\r\n            if (module.utils.hasOwnProperty(config, key) && key != 'fields') {\r\n                Class.prototype[key] = config[key];\r\n            }\r\n        }\r\n\r\n        return Class;\r\n    };\r\n\r\n\r\n    module.model.Model = Model;\r\n\r\n    /**\r\n     * @event propertyNameChange\r\n     * Fired when new value of property `\"propertyName\"` has been already set. Each property fires its own event so you should\r\n     * register listener of `firstName` property using following code: `model.addListener(\"firstNameChange\", handler)`\r\n     *\r\n     * @param {*} newValue new value\r\n     * @param {*} oldValue current value\r\n     */\r\n\r\n    /**\r\n     * @event change\r\n     * Fired when new value of property has been already set.\r\n     * @param {String} property property name that its value has changed\r\n     * @param {*} newValue current value\r\n     * @param {*} oldValue previous value\r\n     */\r\n\r\n    /** @ignore function: () { */\r\n}(Izi);\r\n\r\n/**\r\n * @ignore\r\n * @requires EventConfig.js\r\n */\r\n!function (module) {\r\n\r\n    /**\r\n     * @class Izi.events.KeyboardConfig\r\n     * @extends Izi.events.EventConfig\r\n     * @constructor\r\n     * @private\r\n     * @param {String} eventType\r\n     */\r\n    var KeyboardConfig = function Izi_events_KeyboardConfig(eventType) {\r\n        module.events.EventConfig.apply(this, arguments);\r\n        this.expectedKeyCode = 0;\r\n    };\r\n    KeyboardConfig.prototype = new module.events.EventConfig();\r\n    KeyboardConfig.prototype.constructor = KeyboardConfig;\r\n\r\n    /**\r\n     * @member Izi.events.KeyboardConfig\r\n     * @private\r\n     * @type {Boolean}\r\n     */\r\n    KeyboardConfig.prototype.isKeyboardEventConfig = true;\r\n\r\n    /**\r\n     * Setup custom expected keyCode. Use it only when you can't find desired key in methods below:\r\n     * <code>izi.events.keyDown().ENTER()</code> etc.\r\n     * @member Izi.events.KeyboardConfig\r\n     * @param {Number} value\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.keyCode = function (value) {\r\n        this.expectedKeyCode = value;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Returns expected key code\r\n     * @member Izi.events.KeyboardConfig\r\n     * @private\r\n     * @return {Number}\r\n     */\r\n    KeyboardConfig.prototype.getExpectedKeyCode = function () {\r\n        return this.expectedKeyCode;\r\n    };\r\n\r\n    /**\r\n     * Setup BACKSPACE key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.BACKSPACE = function () {\r\n        return this.keyCode(8);\r\n    };\r\n    \r\n    /**\r\n     * Setup TAB key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.TAB = function () {\r\n        return this.keyCode(9);\r\n    };\r\n    \r\n    /**\r\n     * Setup NUM_CENTER key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.NUM_CENTER = function () {\r\n        return this.keyCode(12);\r\n    };\r\n\r\n    /**\r\n     * Setup ENTER key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.ENTER = function () {\r\n        return this.keyCode(13);\r\n    };\r\n    \r\n    /**\r\n     * Setup RETURN key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.RETURN = function () {\r\n        return this.keyCode(13);\r\n    };\r\n    \r\n    /**\r\n     * Setup SHIFT key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.SHIFT = function () {\r\n        this.shift(); // If you press SHIFT key - event modifier will be set to true, so we need to also expect that.\r\n        return this.keyCode(16);\r\n    };\r\n    \r\n    /**\r\n     * Setup CTRL key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.CTRL = function () {\r\n        this.ctrl(); // If you press CTRL key - event modifier will be set to true, so we need to also expect that.\r\n        return this.keyCode(17);\r\n    };\r\n    \r\n    /**\r\n     * Setup ALT key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.ALT = function () {\r\n        this.alt(); // If you press ALT key - event modifier will be set to true, so we need to also expect that.\r\n        return this.keyCode(18);\r\n    };\r\n    \r\n    /**\r\n     * Setup PAUSE key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.PAUSE = function () {\r\n        return this.keyCode(19);\r\n    };\r\n    \r\n    /**\r\n     * Setup CAPS_LOCK key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.CAPS_LOCK = function () {\r\n        return this.keyCode(20);\r\n    };\r\n    \r\n    /**\r\n     * Setup ESC key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.ESC = function () {\r\n        return this.keyCode(27);\r\n    };\r\n    \r\n    /**\r\n     * Setup SPACE key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.SPACE = function () {\r\n        return this.keyCode(32);\r\n    };\r\n    \r\n    /**\r\n     * Setup PAGE_UP key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.PAGE_UP = function () {\r\n        return this.keyCode(33);\r\n    };\r\n    \r\n    /**\r\n     * Setup PAGE_DOWN key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.PAGE_DOWN = function () {\r\n        return this.keyCode(34);\r\n    };\r\n    \r\n    /**\r\n     * Setup END key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.END = function () {\r\n        return this.keyCode(35);\r\n    };\r\n    \r\n    /**\r\n     * Setup HOME key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.HOME = function () {\r\n        return this.keyCode(36);\r\n    };\r\n    \r\n    /**\r\n     * Setup LEFT key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.LEFT = function () {\r\n        return this.keyCode(37);\r\n    };\r\n    \r\n    /**\r\n     * Setup UP key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.UP = function () {\r\n        return this.keyCode(38);\r\n    };\r\n    \r\n    /**\r\n     * Setup RIGHT key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.RIGHT = function () {\r\n        return this.keyCode(39);\r\n    };\r\n    \r\n    /**\r\n     * Setup DOWN key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.DOWN = function () {\r\n        return this.keyCode(40);\r\n    };\r\n    \r\n    /**\r\n     * Setup PRINT_SCREEN key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.PRINT_SCREEN = function () {\r\n        return this.keyCode(44);\r\n    };\r\n    \r\n    /**\r\n     * Setup INSERT key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.INSERT = function () {\r\n        return this.keyCode(45);\r\n    };\r\n                                                                //\r\n    /**\r\n     * Setup DELETE key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.DELETE = function () {\r\n        return this.keyCode(46);\r\n    };\r\n    \r\n    /**\r\n     * Setup ZERO key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.ZERO = function () {\r\n        return this.keyCode(48);\r\n    };\r\n    \r\n    /**\r\n     * Setup ONE key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.ONE = function () {\r\n        return this.keyCode(49);\r\n    };\r\n    \r\n    /**\r\n     * Setup TWO key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.TWO = function () {\r\n        return this.keyCode(50);\r\n    };\r\n    \r\n    /**\r\n     * Setup THREE key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.THREE = function () {\r\n        return this.keyCode(51);\r\n    };\r\n    \r\n    /**\r\n     * Setup FOUR key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.FOUR = function () {\r\n        return this.keyCode(52);\r\n    };\r\n    \r\n    /**\r\n     * Setup FIVE key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.FIVE = function () {\r\n        return this.keyCode(53);\r\n    };\r\n    \r\n    /**\r\n     * Setup SIX key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.SIX = function () {\r\n        return this.keyCode(54);\r\n    };\r\n    \r\n    /**\r\n     * Setup SEVEN key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.SEVEN = function () {\r\n        return this.keyCode(55);\r\n    };\r\n    \r\n    /**\r\n     * Setup EIGHT key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.EIGHT = function () {\r\n        return this.keyCode(56);\r\n    };\r\n    \r\n    /**\r\n     * Setup NINE key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.NINE = function () {\r\n        return this.keyCode(57);\r\n    };\r\n\r\n    /**\r\n     * Setup A key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.A = function () {\r\n        return this.keyCode(65);\r\n    };\r\n\r\n    /**\r\n     * Setup B key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.B = function () {\r\n        return this.keyCode(66);\r\n    };\r\n\r\n    /**\r\n     * Setup C key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.C = function () {\r\n        return this.keyCode(67);\r\n    };\r\n\r\n    /**\r\n     * Setup D key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.D = function () {\r\n        return this.keyCode(68);\r\n    };\r\n\r\n    /**\r\n     * Setup E key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.E = function () {\r\n        return this.keyCode(69);\r\n    };\r\n\r\n    /**\r\n     * Setup F key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.F = function () {\r\n        return this.keyCode(70);\r\n    };\r\n\r\n    /**\r\n     * Setup G key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.G = function () {\r\n        return this.keyCode(71);\r\n    };\r\n\r\n    /**\r\n     * Setup H key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.H = function () {\r\n        return this.keyCode(72);\r\n    };\r\n\r\n    /**\r\n     * Setup I key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.I = function () {\r\n        return this.keyCode(73);\r\n    };\r\n\r\n    /**\r\n     * Setup J key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.J = function () {\r\n        return this.keyCode(74);\r\n    };\r\n\r\n    /**\r\n     * Setup K key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.K = function () {\r\n        return this.keyCode(75);\r\n    };\r\n\r\n    /**\r\n     * Setup L key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.L = function () {\r\n        return this.keyCode(76);\r\n    };\r\n\r\n    /**\r\n     * Setup M key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.M = function () {\r\n        return this.keyCode(77);\r\n    };\r\n\r\n    /**\r\n     * Setup N key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.N = function () {\r\n        return this.keyCode(78);\r\n    };\r\n\r\n    /**\r\n     * Setup O key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.O = function () {\r\n        return this.keyCode(79);\r\n    };\r\n\r\n    /**\r\n     * Setup P key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.P = function () {\r\n        return this.keyCode(80);\r\n    };\r\n\r\n    /**\r\n     * Setup Q key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.Q = function () {\r\n        return this.keyCode(81);\r\n    };\r\n\r\n    /**\r\n     * Setup R key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.R = function () {\r\n        return this.keyCode(82);\r\n    };\r\n\r\n    /**\r\n     * Setup S key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.S = function () {\r\n        return this.keyCode(83);\r\n    };\r\n\r\n    /**\r\n     * Setup T key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.T = function () {\r\n        return this.keyCode(84);\r\n    };\r\n\r\n    /**\r\n     * Setup U key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.U = function () {\r\n        return this.keyCode(85);\r\n    };\r\n\r\n    /**\r\n     * Setup V key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.V = function () {\r\n        return this.keyCode(86);\r\n    };\r\n\r\n    /**\r\n     * Setup W key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.W = function () {\r\n        return this.keyCode(87);\r\n    };\r\n\r\n    /**\r\n     * Setup X key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.X = function () {\r\n        return this.keyCode(88);\r\n    };\r\n\r\n    /**\r\n     * Setup Y key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.Y = function () {\r\n        return this.keyCode(89);\r\n    };\r\n\r\n    /**\r\n     * Setup Z key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.Z = function () {\r\n        return this.keyCode(90);\r\n    };\r\n\r\n    /**\r\n     * Setup NUM_ZERO key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.NUM_ZERO = function () {\r\n        return this.keyCode(96);\r\n    };\r\n\r\n    /**\r\n     * Setup NUM_ONE key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.NUM_ONE = function () {\r\n        return this.keyCode(97);\r\n    };\r\n\r\n    /**\r\n     * Setup NUM_TWO key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.NUM_TWO = function () {\r\n        return this.keyCode(98);\r\n    };\r\n\r\n    /**\r\n     * Setup NUM_THREE key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.NUM_THREE = function () {\r\n        return this.keyCode(99);\r\n    };\r\n\r\n    /**\r\n     * Setup NUM_FOUR key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.NUM_FOUR = function () {\r\n        return this.keyCode(100);\r\n    };\r\n\r\n    /**\r\n     * Setup NUM_FIVE key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.NUM_FIVE = function () {\r\n        return this.keyCode(101);\r\n    };\r\n\r\n    /**\r\n     * Setup NUM_SIX key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.NUM_SIX = function () {\r\n        return this.keyCode(102);\r\n    };\r\n\r\n    /**\r\n     * Setup NUM_SEVEN key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.NUM_SEVEN = function () {\r\n        return this.keyCode(103);\r\n    };\r\n\r\n    /**\r\n     * Setup NUM_EIGHT key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.NUM_EIGHT = function () {\r\n        return this.keyCode(104);\r\n    };\r\n\r\n    /**\r\n     * Setup NUM_NINE key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.NUM_NINE = function () {\r\n        return this.keyCode(105);\r\n    };\r\n\r\n    /**\r\n     * Setup NUM_MULTIPLY key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.NUM_MULTIPLY = function () {\r\n        return this.keyCode(106);\r\n    };\r\n\r\n    /**\r\n     * Setup NUM_PLUS key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.NUM_PLUS = function () {\r\n        return this.keyCode(107);\r\n    };\r\n\r\n    /**\r\n     * Setup NUM_MINUS key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.NUM_MINUS = function () {\r\n        return this.keyCode(109);\r\n    };\r\n\r\n    /**\r\n     * Setup NUM_PERIOD key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.NUM_PERIOD = function () {\r\n        return this.keyCode(110);\r\n    };\r\n\r\n    /**\r\n     * Setup NUM_DIVISION key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.NUM_DIVISION = function () {\r\n        return this.keyCode(111);\r\n    };\r\n\r\n    /**\r\n     * Setup F1 key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.F1 = function () {\r\n        return this.keyCode(112);\r\n    };\r\n\r\n    /**\r\n     * Setup F2 key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.F2 = function () {\r\n        return this.keyCode(113);\r\n    };\r\n\r\n    /**\r\n     * Setup F3 key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.F3 = function () {\r\n        return this.keyCode(114);\r\n    };\r\n\r\n    /**\r\n     * Setup F4 key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.F4 = function () {\r\n        return this.keyCode(115);\r\n    };\r\n\r\n    /**\r\n     * Setup F5 key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.F5 = function () {\r\n        return this.keyCode(116);\r\n    };\r\n\r\n    /**\r\n     * Setup F6 key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.F6 = function () {\r\n        return this.keyCode(117);\r\n    };\r\n\r\n    /**\r\n     * Setup F7 key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.F7 = function () {\r\n        return this.keyCode(118);\r\n    };\r\n\r\n    /**\r\n     * Setup F8 key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.F8 = function () {\r\n        return this.keyCode(119);\r\n    };\r\n\r\n    /**\r\n     * Setup F9 key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.F9 = function () {\r\n        return this.keyCode(120);\r\n    };\r\n\r\n    /**\r\n     * Setup F10 key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.F10 = function () {\r\n        return this.keyCode(121);\r\n    };\r\n\r\n    /**\r\n     * Setup F11 key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.F11 = function () {\r\n        return this.keyCode(122);\r\n    };\r\n\r\n    /**\r\n     * Setup F12 key as expected to be pressed\r\n     * @member Izi.events.KeyboardConfig\r\n     * @method\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    KeyboardConfig.prototype.F12 = function () {\r\n        return this.keyCode(123);\r\n    };\r\n\r\n    module.events.KeyboardConfig = KeyboardConfig;\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires EventConfig.js\r\n * @requires KeyboardConfig.js\r\n */\r\n!function (module) {\r\n\r\n    /**\r\n     * <code>izi.events.*</code> fluent API entry points. You can use them to define izi behaviors based on more complex events, like:\r\n     *\r\n     *      izi.perform(behavior).when(izi.events.click().shift()).on(button);\r\n     *\r\n     *      izi.perform(behavior).when(izi.events.keyDown().ENTER()).on(textInput);\r\n     *\r\n     *      izi.perform(behavior).when(izi.events.keyDown().F5().preventDefault()).on(document);\r\n     *\r\n     *      izi.perform(behavior).when(izi.events.keyDown().ctrl().alt().ONE()).on(document);\r\n     *\r\n     * @class Izi.events.Events\r\n     */\r\n    var Events = function Izi_events_Events() {\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for desired event type. If you need to watch keyboard events, please use\r\n     * <code>izi.events.keyDown()</code> or <code>izi.events.keyUp()</code> or <code>izi.events.keyboardEvent('keypress')</code>\r\n     * @member Izi.events.Events\r\n     * @param {String} eventType\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.event = function (eventType) {\r\n        return new module.events.EventConfig(eventType);\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder. It is recommended to use only\r\n     * <code>izi.events.keyDown()</code> or <code>izi.events.keyUp()</code>, because of not cross browsers\r\n     * compatibility of \"keyPress\" event.\r\n     * @member Izi.events.Events\r\n     * @param {String} eventType\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    Events.prototype.keyboardEvent = function (eventType) {\r\n        return new module.events.KeyboardConfig(eventType);\r\n    };\r\n\r\n    // -------------------- Keyboard -----------------\r\n\r\n    /**\r\n     * Creates fluent builder for keyboard \"keydown\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    Events.prototype.keyDown = function () {\r\n        return this.keyboardEvent('keydown');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for keyboard \"keyup\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.KeyboardConfig}\r\n     */\r\n    Events.prototype.keyUp = function () {\r\n        return this.keyboardEvent('keyup');\r\n    };\r\n\r\n    // -------------------- HTML Window -----------------\r\n\r\n    /**\r\n     * Creates fluent builder for html window \"afterprint\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.afterPrint = function () {\r\n        return this.event('afterprint');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for html window \"beforeprint\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.beforePrint = function () {\r\n        return this.event('beforeprint');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for html window \"beforeonload\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.beforeOnLoad = function () {\r\n        return this.event('beforeonload');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for html window \"error\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.error = function () {\r\n        return this.event('error');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for html window \"haschange\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.hasChange = function () {\r\n        return this.event('haschange');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for html window \"load\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.load = function () {\r\n        return this.event('load');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for html window \"message\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.message = function () {\r\n        return this.event('message');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for html window \"offline\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.offline = function () {\r\n        return this.event('offline');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for html window \"line\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.line = function () {\r\n        return this.event('line');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for html window \"pagehide\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.pageHide = function () {\r\n        return this.event('pagehide');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for html window \"pageshow\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.pageShow = function () {\r\n        return this.event('pageshow');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for html window \"popstate\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.popState = function () {\r\n        return this.event('popstate');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for html window \"redo\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.redo = function () {\r\n        return this.event('redo');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for html window \"resize\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.resize = function () {\r\n        return this.event('resize');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for html window \"storage\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.storage = function () {\r\n        return this.event('storage');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for html window \"undo\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.undo = function () {\r\n        return this.event('undo');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for html window \"unload\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.unload = function () {\r\n        return this.event('unload');\r\n    };\r\n\r\n    // -------------------- Form element -----------------\r\n\r\n    /**\r\n     * Creates fluent builder for form element \"blur\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.blur = function () {\r\n        return this.event('blur');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for form element \"change\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.change = function () {\r\n        return this.event('change');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for form element \"contextmenu\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.contextMenu = function () {\r\n        return this.event('contextmenu');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for form element \"focus\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.focus = function () {\r\n        return this.event('focus');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for form element \"formchange\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.formChange = function () {\r\n        return this.event('formchange');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for form element \"forminput\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.formInput = function () {\r\n        return this.event('forminput');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for form element \"input\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.input = function () {\r\n        return this.event('input');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for form element \"invalid\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.invalid = function () {\r\n        return this.event('invalid');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for form element \"reset\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.reset = function () {\r\n        return this.event('reset');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for form element \"select\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.select = function () {\r\n        return this.event('select');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for form element \"submit\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.submit = function () {\r\n        return this.event('submit');\r\n    };\r\n\r\n    // -------------------- Mouse -----------------\r\n\r\n    /**\r\n     * Creates fluent builder for mouse \"click\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.click = function () {\r\n        return this.event('click');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for mouse \"dblclick\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.dblClick = function () {\r\n        return this.event('dblclick');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for mouse \"drag\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.drag = function () {\r\n        return this.event('drag');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for mouse \"dragend\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.dragEnd = function () {\r\n        return this.event('dragend');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for mouse \"dragenter\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.dragEnter = function () {\r\n        return this.event('dragenter');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for mouse \"dragleave\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.dragLeave = function () {\r\n        return this.event('dragleave');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for mouse \"dragover\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.dragOver = function () {\r\n        return this.event('dragover');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for mouse \"dragstart\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.dragStart = function () {\r\n        return this.event('dragstart');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for mouse \"drop\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.drop = function () {\r\n        return this.event('drop');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for mouse \"mousedown\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.mouseDown = function () {\r\n        return this.event('mousedown');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for mouse \"mousemove\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.mouseMove = function () {\r\n        return this.event('mousemove');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for mouse \"mouseout\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.mouseOut = function () {\r\n        return this.event('mouseout');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for mouse \"mouseover\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.mouseOver = function () {\r\n        return this.event('mouseover');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for mouse \"mouseup\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.mouseUp = function () {\r\n        return this.event('mouseup');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for mouse \"mousewheel\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.mouseWheel = function () {\r\n        return this.event('mousewheel');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for mouse \"scroll\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.scroll = function () {\r\n        return this.event('scroll');\r\n    };\r\n\r\n    // -------------------- Media -----------------\r\n\r\n    /**\r\n     * Creates fluent builder for media \"abort\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.abort = function () {\r\n        return this.event('abort');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for media \"canplay\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.canPlay = function () {\r\n        return this.event('canplay');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for media \"canplaythrough\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.canPlayThrough = function () {\r\n        return this.event('canplaythrough');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for media \"durationchange\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.durationChange = function () {\r\n        return this.event('durationchange');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for media \"emptied\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.emptied = function () {\r\n        return this.event('emptied');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for media \"ended\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.ended = function () {\r\n        return this.event('ended');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for media \"loadeddata\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.loadedData = function () {\r\n        return this.event('loadeddata');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for media \"loadedmetadata\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.loadedMetaData = function () {\r\n        return this.event('loadedmetadata');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for media \"loadstart\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.loadStart = function () {\r\n        return this.event('loadstart');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for media \"pause\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.pause = function () {\r\n        return this.event('pause');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for media \"play\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.play = function () {\r\n        return this.event('play');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for media \"playing\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.playing = function () {\r\n        return this.event('playing');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for media \"progress\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.progress = function () {\r\n        return this.event('progress');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for media \"ratechange\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.rateChange = function () {\r\n        return this.event('ratechange');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for media \"readystatechange\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.readyStateChange = function () {\r\n        return this.event('readystatechange');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for media \"seeked\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.seeked = function () {\r\n        return this.event('seeked');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for media \"seeking\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.seeking = function () {\r\n        return this.event('seeking');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for media \"stalled\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.stalled = function () {\r\n        return this.event('stalled');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for media \"suspend\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.suspend = function () {\r\n        return this.event('suspend');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for media \"timeupdate\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.timeUpdate = function () {\r\n        return this.event('timeupdate');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for media \"volumechange\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.volumeChange = function () {\r\n        return this.event('volumechange');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for media \"waiting\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.waiting = function () {\r\n        return this.event('waiting');\r\n    };\r\n\r\n    // -------------------- Mobile -----------------\r\n\r\n    /**\r\n     * Creates fluent builder for mobile \"touchstart\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.touchStart = function () {\r\n        return this.event('touchstart');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for mobile \"touchmove\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.touchMove = function () {\r\n        return this.event('touchmove');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for mobile \"touchend\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.touchEnd = function () {\r\n        return this.event('touchend');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for mobile \"touchcancel\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.touchCancel = function () {\r\n        return this.event('touchcancel');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for mobile \"touchenter\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.touchEnter = function () {\r\n        return this.event('touchenter');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for mobile \"touchlave\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.touchLave = function () {\r\n        return this.event('touchlave');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for mobile \"gesturestart\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.gestureStart = function () {\r\n        return this.event('gesturestart');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for mobile \"gesturechange\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.gestureChange = function () {\r\n        return this.event('gesturechange');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for mobile \"gestureend\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.gestureEnd = function () {\r\n        return this.event('gestureend');\r\n    };\r\n\r\n    /**\r\n     * Creates fluent builder for mobile \"orientationchange\" event.\r\n     * @member Izi.events.Events\r\n     * @return {Izi.events.EventConfig}\r\n     */\r\n    Events.prototype.orientationChange = function () {\r\n        return this.event('orientationchange');\r\n    };\r\n\r\n    module.events.Events = Events;\r\n\r\n}(Izi);\r\n/**\r\n * @ignore\r\n * @requires debug.js\r\n * @requires behavior/register.js\r\n * @requires binding/register.js\r\n * @requires queue/register.js\r\n * @requires utils/typeOf.js\r\n * @requires utils/forEach.js\r\n * @requires utils/arrayContains.js\r\n * @requires ioc/BeansContext.js\r\n * @requires ioc/Config.js\r\n * @requires ioc/Injection.js\r\n * @requires ioc/bean/SingletonStrategy.js\r\n * @requires ioc/bean/LazySingletonStrategy.js\r\n * @requires ioc/bean/PrototypeStrategy.js\r\n * @requires model/Model.js\r\n * @requires events/Events.js\r\n */\r\n!function (module, global) {\r\n\r\n    var frameworks = {},\r\n        sanityCheckMethods = [\"arg\", \"sanityInjectTo\", \"sanityOf\", \"varargOf\"];\r\n\r\n    function initFramework(izi, framework) {\r\n        if (framework.behavior) {\r\n            izi.registerBehaviorImpl(framework.behavior);\r\n        }\r\n        if (framework.binding) {\r\n            izi.registerBindingImpl(framework.binding);\r\n        }\r\n        if (framework.queue) {\r\n            izi.registerQueueImpl(framework.queue);\r\n        }\r\n    }\r\n\r\n    function enableCompatibility(izi) {\r\n        if (global.izi) {\r\n            module.utils.forEach(sanityCheckMethods, function (method) {\r\n                if (global.izi[method]) {\r\n                    izi[method] = global.izi[method];\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @class izi\r\n     * @constructor\r\n     * @param {String|Object} [framework]\r\n     * @param {Object} [globals]\r\n     *\r\n     * All <strong>izi</strong> fluent API entry points.\r\n     */\r\n    var Api = function Izi_Api(framework, globals) {\r\n        this.globals = globals || global;\r\n\r\n        enableCompatibility(this);\r\n\r\n        if (module.utils.typeOf(framework) === \"String\") {\r\n            framework = frameworks[framework];\r\n        }\r\n\r\n        if (framework) {\r\n            this._framework = framework;\r\n            initFramework(this, framework);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Creates beans context using passed config. It can be one configuration, like:\r\n     *\r\n     *     izi.bakeBeans({beanId: 'value'});\r\n     *\r\n     * Or multiple configurations as an array:\r\n     *\r\n     *     var config1 = {\r\n     *         bean1: 'value 1'\r\n     *     };\r\n     *     var config2 = {\r\n     *         bean2: 'value 2'\r\n     *     };\r\n     *\r\n     *     izi.bakeBeans([config1, config2]);\r\n     *\r\n     * @param {Object|Object[]} config One or multiple configurations\r\n     * @param {Izi.ioc.BeansContext} [parentContext]\r\n     * @return {Izi.ioc.BeansContext}\r\n     */\r\n    Api.prototype.bakeBeans = function (config, parentContext) {\r\n        return new module.ioc.BeansContext(this.globals, config, parentContext).initContext();\r\n    };\r\n\r\n    /**\r\n     * Creates singleton bean definition using passed class type\r\n     *\r\n     * @param {Function|String} clazz constructor function or dotted string class definition\r\n     * @return {Izi.ioc.Config}\r\n     */\r\n    Api.prototype.instantiate = function (clazz) {\r\n        return new module.ioc.Config(clazz, module.ioc.bean.SingletonStrategy, this.globals);\r\n    };\r\n\r\n    /**\r\n     * Creates lazy singleton bean definition using passed class type\r\n     *\r\n     * @param {Function|String} clazz constructor function or dotted string class definition\r\n     * @return {Izi.ioc.Config}\r\n     */\r\n    Api.prototype.lazy = function (clazz) {\r\n        return new module.ioc.Config(clazz, module.ioc.bean.LazySingletonStrategy, this.globals);\r\n    };\r\n\r\n    /**\r\n     * Creates prototype bean definition using passed class type\r\n     * @param {Function|String} clazz constructor function or dotted string class definition\r\n     * @return {Izi.ioc.Config}\r\n     */\r\n    Api.prototype.protoOf = function (clazz) {\r\n        return new module.ioc.Config(clazz, module.ioc.bean.PrototypeStrategy, this.globals);\r\n    };\r\n\r\n    /**\r\n     * Injects dependency by its beanId or class type. It can be used as constructor dependency injection or by\r\n     * property dependency injection.\r\n     *\r\n     * @param {String|Function} beanIdOrType Bean id or constructor function or dotted string class definition\r\n     * @return {Izi.ioc.Injection}\r\n     */\r\n    Api.prototype.inject = function (beanIdOrType) {\r\n        if (!beanIdOrType) {\r\n            throw new Error(\"Trying to inject invalid empty bean\");\r\n        }\r\n        return new module.ioc.Injection(beanIdOrType);\r\n    };\r\n\r\n    /**\r\n     * Init behavior API. You can specify function and scope:\r\n     *\r\n     *     izi.perform(behavior.perform, behavior).when('click').on(button)\r\n     *\r\n     * ... or only behavior ('perform' function will be called by default):\r\n     *\r\n     *     izi.perform(behavior).when('click').on(button)\r\n     *\r\n     * ... or custom event registrar ('register' and 'unregister' functions are required):\r\n     *\r\n     *     var registrar = {\r\n     *\r\n     *         register: function (target) {\r\n     *             target.addEventListener(...);\r\n     *             target.addEventListener(...);\r\n     *             target.addEventListener(...);\r\n     *         },\r\n     *\r\n     *         unregister: function (target) {\r\n     *             target.removeEventListener(...);\r\n     *             target.removeEventListener(...);\r\n     *             target.removeEventListener(...);\r\n     *         }\r\n     *     };\r\n     *\r\n     *     izi.perform(registrar).on(target);\r\n     *\r\n     * ... or nothing to get grouping method:\r\n     *\r\n     *     var perform = izi.perform();\r\n     *\r\n     *     perform(behavior1).when(\"click\").on(button1);\r\n     *     perform(behavior2).when(\"click\").on(button2);\r\n     *\r\n     *     perform.stopObserving(); // will stop observing them all\r\n     *\r\n     * @noSanity\r\n     * @param {Function|Object} functionOrBehaviorOrRegistrar\r\n     * @param {Object} [scope]\r\n     * @return {Izi.behavior.Perform}\r\n     */\r\n    Api.prototype.perform = function (functionOrBehaviorOrRegistrar, scope) {\r\n        throw new Error(\"Register your behavior implementation first: izi.registerBehaviorImpl(Izi.behavior.impl.SomeImpl)\");\r\n    };\r\n\r\n    /**\r\n     * Registers behavior implementation\r\n     *\r\n     * @sanity izi.sanityOf(\"registerBehaviorImpl()\").args(izi.arg(\"impl\").ofObject().havingFunctions(\"observeWidget\", \"observeKeyStroke\").havingProperty(\"defaultPerformFunction\")).check(arguments);\r\n     * @param {Object} impl Behavior implementation config\r\n     * @param {String} impl.defaultPerformFunction Name of default perform function called on behavior\r\n     * @param {Function} impl.observeWidget Function that starts observing widget and returns function that stops observing. This function gets following arguments: <code>widget, eventConfig, action, scope, options</code>\r\n     * @param {Function} impl.observeKeyStroke Function that starts observing keyboard and returns function that stops observing. This function gets following arguments: <code>widget, keyboardConfig, action, scope, options</code>\r\n     */\r\n    Api.prototype.registerBehaviorImpl = function (impl) {\r\n        this.perform = module.behavior.register(impl, this);\r\n    };\r\n\r\n    /**\r\n     * Init binding API\r\n     * @sanity izi.sanityOf(\"bind()\").args().args(izi.arg(\"options\").ofObject()).check(arguments);\r\n     * @param {Object} [options] Advanced options\r\n     * @param {Boolean} [options.auto=true] Start listen for changes automatically.\r\n     * @param {Boolean} [options.executeAtStartup=true] Execute binding immediately after creation. It works only when <code>auto=true</code>.\r\n     * @param {Boolean} [options.debug=false] Log every binding execution on browser's console.\r\n     * @return {Izi.binding.Bind}\r\n     */\r\n    Api.prototype.bind = function (options) {\r\n        throw new Error(\"Register your binding implementation first: izi.registerBindingImpl(Izi.binding.impl.SomeImpl)\");\r\n    };\r\n\r\n    /**\r\n     * Registers binding implementation\r\n     * @sanity izi.sanityOf(\"registerBindingImpl()\").args(izi.arg(\"impl\").ofObject().havingProperties(\"changeObservers\", \"valueReaders\", \"valueWriters\")).check(arguments);izi.sanityOf(\"impl.changeObservers\").args(izi.varargOf(izi.arg().ofFunction())).check(impl.changeObservers);izi.sanityOf(\"impl.valueReaders\").args(izi.varargOf(izi.arg().ofFunction())).check(impl.valueReaders);izi.sanityOf(\"impl.valueWriters\").args(izi.varargOf(izi.arg().ofFunction())).check(impl.valueWriters);\r\n     * @param impl Binding implementation config\r\n     * @param {Function[]} impl.changeObservers Array of change observers functions. These functions get following parameters: <code>source, sourceProperty, target, targetProperty, transferValueFn</code>\r\n     * @param {Function[]} impl.valueReaders Array of functions that can read value from given object and property. These functions get following arguments: <code>object, property</code>\r\n     * @param {Function[]} impl.valueWriters Array of functions that can write value on given object and property. These functions get following arguments: <code>object, property, value</code>\r\n     */\r\n    Api.prototype.registerBindingImpl = function (impl) {\r\n        this.bind = module.binding.register(impl);\r\n    };\r\n\r\n    /**\r\n     * Creates class of izi model. Use this model in your project for data binding only when your framework\r\n     * doesn't provide 'observable' model.\r\n     *\r\n     * @sanity izi.sanityOf(\"izi.modelOf()\").args(izi.arg(\"config\").ofObject().havingProperty(\"fields\")).check(arguments);izi.sanityOf(\"config.fields\").args(izi.varargOf(izi.arg(\"field\").ofObject().havingProperty(\"name\"), izi.arg(\"fieldName\").ofString())).check(config.fields);\r\n     * @param {Object} config Model fields configuration. It must contain <strong>fields</strong> array of fields objects.\r\n     * @param {Array} config.fields Configuration of model fields\r\n     * @return {Function}\r\n     */\r\n    Api.prototype.modelOf = function (config) {\r\n        return module.model.Model.define(config);\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @type {Izi.events.Events}\r\n     */\r\n    Api.prototype.events = new module.events.Events();\r\n\r\n    /**\r\n     * Init synchronized queue API\r\n     * @nosanity\r\n     * @param {Object} [config] Queue configuration\r\n     * @param {Object} [config.scope] default scope for all functions executions\r\n     * @param {Number} [config.timeout=\"0\"] default timeout for synchronized tasks - 0 is a default which means no timeout\r\n     * @param {String} [config.debug] use any String as an identifier of the queue that will be logged in browser console\r\n     * @return {Izi.queue.Queue}\r\n     */\r\n    Api.prototype.queue = function (config) {\r\n        throw new Error(\"Register your queue implementation first: izi.registerQueueImpl(Izi.queue.impl.SomeImpl)\");\r\n    };\r\n\r\n    /**\r\n     * Registers queue implementation\r\n     * @sanity izi.sanityOf(\"registerQueueImpl()\").args(izi.arg(\"impl\").ofObject().havingFunctions(\"dispatchEvent\", \"createEventDispatcher\")).check(arguments);\r\n     * @param {Object} impl\r\n     * @param {Function} impl.dispatchEvent\r\n     * @param {Function} impl.createEventDispatcher\r\n     */\r\n    Api.prototype.registerQueueImpl = function (impl) {\r\n        this.queue = module.queue.register(impl, this);\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {String|Object|null} [framework]\r\n     * @param {Object} [globals]\r\n     * @returns {izi}\r\n     */\r\n    Api.prototype.newInstance = function (framework, globals) {\r\n        return new Api(framework || this._framework, globals);\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {Object} globals\r\n     * @returns {izi}\r\n     */\r\n    Api.prototype.sandboxed = function (globals) {\r\n        return this.newInstance(null, globals);\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {String} name\r\n     * @param {Object} impl\r\n     * @param {Object} impl.behavior\r\n     * @param {Object} impl.binding\r\n     * @param {Object} impl.queue\r\n     */\r\n    module.registerFramework = function (name, impl) {\r\n        frameworks[name] = impl;\r\n    };\r\n\r\n    Api.prototype.module = module;\r\n    module.Api = Api;\r\n\r\n    izi = new Api();\r\n\r\n}(Izi, this);\r\n        return izi;\r\n    }\r\n    if (typeof define === \"function\" && typeof define.amd === \"object\" && define.amd.vendor !== \"dojotoolkit.org\") {\r\n        define([], amdFactory);\r\n    } else if (typeof exports === 'object') {\r\n        module.exports = amdFactory();\r\n    } else {\r\n        global.izi = amdFactory();\r\n    }\r\n})(this);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/izi-js/dist/izi-js-debug.js\n// module id = 2\n// module chunks = 0","module.exports = __webpack_amd_options__;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-options.js\n// module id = 3\n// module chunks = 0","export default function mainViewFactory(Vue) {\r\n\r\n    return class MainView {\r\n\r\n        constructor({el, component, proxyMethods = true} = {}) {\r\n            this.el = el;\r\n            this.component = component;\r\n            this.proxyMethods = proxyMethods;\r\n        }\r\n\r\n        iziContext(context) {\r\n            requireOption(\"el\", this.el);\r\n            requireOption(\"component\", this.component);\r\n\r\n            this.context = context;\r\n            this.vueInstance = this._createVueInstance();\r\n\r\n            if (this.proxyMethods) {\r\n                this._createProxyMethods();\r\n            }\r\n        }\r\n\r\n        iziDestroy() {\r\n            if (this.vueInstance) {\r\n                this.vueInstance.$destroy(true);\r\n                this.vueInstance = null;\r\n            }\r\n        }\r\n\r\n        getVueInstance() {\r\n            return this.vueInstance;\r\n        }\r\n\r\n        _createVueInstance() {\r\n            const context = this.context;\r\n            const el = this.el;\r\n\r\n            if (typeof this.component === \"function\") {\r\n                let VueComponent = this.component.extend({\r\n                    methods: {\r\n                        __iziWire (child) {\r\n                            context.wire(child)\r\n                        },\r\n\r\n                        __iziDetach (bean) {\r\n                            context.detachBean(bean)\r\n                        }\r\n                    }\r\n                });\r\n                return new VueComponent({el});\r\n            } else {\r\n                const componentConfig = {};\r\n\r\n                Object.assign(componentConfig, this.component, {\r\n                    el: this.el,\r\n                    methods: Object.assign(componentConfig || {}, {\r\n                        __iziWire (child) {\r\n                            context.wire(child)\r\n                        }\r\n                    })\r\n                });\r\n\r\n                return new Vue(componentConfig);\r\n            }\r\n        }\r\n\r\n        _createProxyMethods() {\r\n            const vueInstance = this.getVueInstance();\r\n            const methods = getMethodNames(vueInstance);\r\n\r\n            methods.forEach(function (methodName) {\r\n                this[methodName] = function () {\r\n                    return vueInstance[methodName].apply(vueInstance, arguments);\r\n                };\r\n            }, this);\r\n        }\r\n    }\r\n}\r\n\r\nfunction requireOption(name, value) {\r\n    if (!value) {\r\n        throw new Error(`Option ${name} is required`);\r\n    }\r\n}\r\n\r\nfunction getMethodNames(obj) {\r\n    const methods = [];\r\n\r\n    for (var methodName in obj) {\r\n        const method = obj[methodName];\r\n\r\n        if (typeof method === \"function\" && !/^_/.test(methodName)) {\r\n            methods.push(methodName);\r\n        }\r\n    }\r\n\r\n    return methods;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/main/izi-vue/mainViewFactory.js","module.exports = { \"default\": require(\"core-js/library/fn/object/assign\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/object/assign.js\n// module id = 5\n// module chunks = 0","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/object/assign.js\n// module id = 6\n// module chunks = 0","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.object.assign.js\n// module id = 7\n// module chunks = 0","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && key in exports) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_export.js\n// module id = 8\n// module chunks = 0","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_global.js\n// module id = 9\n// module chunks = 0","var core = module.exports = { version: '2.5.0' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_core.js\n// module id = 10\n// module chunks = 0","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_ctx.js\n// module id = 11\n// module chunks = 0","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_a-function.js\n// module id = 12\n// module chunks = 0","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_hide.js\n// module id = 13\n// module chunks = 0","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-dp.js\n// module id = 14\n// module chunks = 0","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_an-object.js\n// module id = 15\n// module chunks = 0","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_is-object.js\n// module id = 16\n// module chunks = 0","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_ie8-dom-define.js\n// module id = 17\n// module chunks = 0","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_descriptors.js\n// module id = 18\n// module chunks = 0","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_fails.js\n// module id = 19\n// module chunks = 0","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_dom-create.js\n// module id = 20\n// module chunks = 0","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-primitive.js\n// module id = 21\n// module chunks = 0","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_property-desc.js\n// module id = 22\n// module chunks = 0","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-assign.js\n// module id = 23\n// module chunks = 0","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-keys.js\n// module id = 24\n// module chunks = 0","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-keys-internal.js\n// module id = 25\n// module chunks = 0","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_has.js\n// module id = 26\n// module chunks = 0","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-iobject.js\n// module id = 27\n// module chunks = 0","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_iobject.js\n// module id = 28\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_cof.js\n// module id = 29\n// module chunks = 0","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_defined.js\n// module id = 30\n// module chunks = 0","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_array-includes.js\n// module id = 31\n// module chunks = 0","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-length.js\n// module id = 32\n// module chunks = 0","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-integer.js\n// module id = 33\n// module chunks = 0","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-absolute-index.js\n// module id = 34\n// module chunks = 0","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_shared-key.js\n// module id = 35\n// module chunks = 0","var global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_shared.js\n// module id = 36\n// module chunks = 0","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_uid.js\n// module id = 37\n// module chunks = 0","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_enum-bug-keys.js\n// module id = 38\n// module chunks = 0","exports.f = Object.getOwnPropertySymbols;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-gops.js\n// module id = 39\n// module chunks = 0","exports.f = {}.propertyIsEnumerable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-pie.js\n// module id = 40\n// module chunks = 0","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-object.js\n// module id = 41\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/classCallCheck.js\n// module id = 42\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/createClass.js\n// module id = 43\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/object/define-property.js\n// module id = 44\n// module chunks = 0","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/object/define-property.js\n// module id = 45\n// module chunks = 0","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.object.define-property.js\n// module id = 46\n// module chunks = 0","export default function vueDataInjectorFactory(Vue) {\r\n\r\n    return function vueDataInjector(target, prop, dependency) {\r\n        if (dependency && !dependency.__ob__) {\r\n            new Vue({\r\n                data: {\r\n                    dependency: dependency\r\n                }\r\n            });\r\n        }\r\n        Vue.set(target, prop, dependency)\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main/izi-vue/vueDataInjectorFactory.js","import izi from \"../../../node_modules/izi-js/dist/izi-js-debug\";\r\n\r\nexport default function (vueDataInjector) {\r\n    return {\r\n        created: function () {\r\n            unwrap$optionsIziInject(this.$options, izi, vueDataInjector);\r\n            moveInjectionsToVueInstance(this);\r\n            const parent = this.__iziFindParent()\r\n            if (parent) {\r\n                parent.__iziWire(this)\r\n            }\r\n        },\r\n\r\n        methods: {\r\n            __iziFindParent() {\r\n                let $parent = this;\r\n                let found = false;\r\n                while ($parent && !found) {\r\n                    if ($parent.__iziWire) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                    $parent = $parent.$parent\r\n                }\r\n                if (found) {\r\n                    return $parent\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        },\r\n\r\n        beforeDestroy: function () {\r\n            console.log('before destroy izi wired component')\r\n            const parent = this.__iziFindParent()\r\n            if (parent) {\r\n                console.log('found parent')\r\n                parent.__iziDetach(this)\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nfunction unwrap$optionsIziInject($options, izi, vueDataInjector) {\r\n    if (!$options.iziInject) {\r\n        return;\r\n    }\r\n\r\n    for (var prop in $options.iziInject) {\r\n        var beanId = $options.iziInject[prop];\r\n        if (prop !== \"data\") {\r\n            $options[prop] = izi.inject(beanId);\r\n        } else {\r\n            unwrapDataInjection($options, izi, vueDataInjector);\r\n        }\r\n    }\r\n}\r\n\r\nfunction unwrapDataInjection($options, izi, vueDataInjector) {\r\n    var data = $options.iziInject.data;\r\n\r\n    if (!data) {\r\n        return;\r\n    }\r\n\r\n    for (var prop in data) {\r\n        var beanId = data[prop];\r\n        $options[prop] = izi.inject(beanId).by(vueDataInjector);\r\n    }\r\n}\r\n\r\nfunction moveInjectionsToVueInstance(vueInstance) {\r\n    for (var prop in vueInstance.$options) {\r\n        var injection = vueInstance.$options[prop];\r\n        if (injection && injection.isIziInjection) {\r\n            vueInstance[prop] = injection;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main/izi-vue/iziInjectMixinFactory.js"],"sourceRoot":""}